---
__inputs: []
__requires:
- type: grafana
  id: grafana
  name: Grafana
  version: 8.0.6
- type: datasource
  id: postgres
  name: PostgreSQL
  version: 1.0.0
- type: panel
  id: table
  name: Table
  version: ""
annotations:
  list:
  - builtIn: 1
    datasource: -- Grafana --
    enable: true
    hide: true
    iconColor: rgba(0, 211, 255, 1)
    name: Annotations & Alerts
    type: dashboard
description: This dashboard shows virtual machines that are over or under provisioned,
  as indicated by their utilization levels of allocated resources.
editable: false
gnetId: null
graphTooltip: 0
iteration: 1627420703500
links: []
panels:
- datasource: $DB
  description: Active VMs with CPU or Memory utilization peaks that are below 10%.
    Values indicating over- provisioning are highlighted with red text.
  fieldConfig:
    defaults:
      color:
        mode: thresholds
      custom:
        align: auto
        displayMode: auto
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
    overrides:
    - matcher:
        id: byName
        options: Time
      properties:
      - id: displayName
        value: Time
      - id: unit
        value: 'time: YYYY-MM-DD HH:mm:ss'
      - id: custom.align
        value: null
    - matcher:
        id: byRegexp
        options: /.*Peak/
      properties:
      - id: unit
        value: percentunit
      - id: decimals
        value: 2
      - id: custom.displayMode
        value: color-text
      - id: custom.align
        value: right
      - id: thresholds
        value:
          mode: absolute
          steps:
          - color: '#C4162A'
            value: null
          - color: rgb(1, 3, 0)
            value: 0.1
    - matcher:
        id: byRegexp
        options: /(VMEM|VCPU) (Avg)/
      properties:
      - id: unit
        value: percentunit
      - id: decimals
        value: 2
      - id: custom.align
        value: null
    - matcher:
        id: byName
        options: VMEM Capacity
      properties:
      - id: unit
        value: kbytes
      - id: decimals
        value: 2
      - id: custom.align
        value: null
    - matcher:
        id: byName
        options: VCPU Capacity
      properties:
      - id: unit
        value: hertz
      - id: decimals
        value: 2
      - id: custom.align
        value: null
  gridPos:
    h: 15
    w: 24
    x: 0
    y: 0
  id: 4
  options:
    showHeader: true
  pluginVersion: 8.0.6
  targets:
  - format: table
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |
      WITH vms_by_cluster AS (
        SELECT DISTINCT ON (e.oid)
         c.name AS cluster_name,
         e.oid AS vm_oid,
         e.name AS vm_name
        FROM entity c,
          entity e,
          scope s
        WHERE e.type = 'VIRTUAL_MACHINE'
          AND c.type = 'COMPUTE_CLUSTER'
          AND s.seed_oid = c.oid
          AND s.scoped_oid = e.oid
          AND (s.start, s.finish) OVERLAPS ($__timeFrom(), $__timeTo())
        ORDER BY e.oid, s.finish, s.start
      )
      SELECT
        max(cluster_name) AS "Cluster name",
        max(vm_name) AS "VM name",
        avg(metric.capacity) FILTER (WHERE metric.type = 'VMEM') AS "VMEM Capacity",
        avg(metric.utilization) FILTER (WHERE metric.type = 'VMEM') AS "VMEM Avg",
        max(metric.utilization) FILTER (WHERE metric.type = 'VMEM') AS "VMEM Peak",
        avg(metric.capacity * 1000000) FILTER (WHERE metric.type = 'VCPU') AS "VCPU Capacity",
        avg(metric.utilization) FILTER (WHERE metric.type = 'VCPU') AS "VCPU Avg",
        max(metric.utilization) FILTER (WHERE metric.type = 'VCPU') AS "VCPU Peak"
      FROM vms_by_cluster
      JOIN metric ON
        metric.entity_oid = vm_oid
        AND metric."type" IN ('VMEM', 'VCPU')
        AND provider_oid ISNULL
        AND $__timeFilter(metric."time")
      GROUP BY vm_oid
      HAVING
        max(metric.utilization) FILTER (WHERE metric.type = 'VMEM') < 0.1 -- "VMEM Peak"
        OR max(metric.utilization) FILTER (WHERE metric.type = 'VCPU') < 0.1 -- "VCPU Peak"
    refId: B
    select:
    - - params:
        - value
        type: column
    timeColumn: time
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom: null
  timeShift: null
  title: Over-provisioned VMs
  transformations:
  - id: merge
    options:
      reducers: []
  type: table
- datasource: $DB
  description: Active VMs with CPU or Memory utilization averages that are above 85%.
    Values indicating under-provisioning are highlighted in red text.
  fieldConfig:
    defaults:
      color:
        mode: thresholds
      custom:
        align: auto
        displayMode: auto
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
    overrides:
    - matcher:
        id: byName
        options: Time
      properties:
      - id: displayName
        value: Time
      - id: unit
        value: 'time: YYYY-MM-DD HH:mm:ss'
      - id: custom.align
        value: null
    - matcher:
        id: byRegexp
        options: /.*Peak/
      properties:
      - id: unit
        value: percentunit
      - id: decimals
        value: 2
      - id: custom.displayMode
        value: color-text
      - id: custom.align
        value: right
      - id: thresholds
        value:
          mode: absolute
          steps:
          - color: rgb(1, 3, 0)
            value: null
          - color: '#E02F44'
            value: 0.85
    - matcher:
        id: byRegexp
        options: /(VMEM|VCPU) (Avg)/
      properties:
      - id: unit
        value: percentunit
      - id: decimals
        value: 2
      - id: custom.align
        value: null
    - matcher:
        id: byName
        options: VMEM Capacity
      properties:
      - id: unit
        value: kbytes
      - id: decimals
        value: 2
      - id: custom.align
        value: null
    - matcher:
        id: byName
        options: VCPU Capacity
      properties:
      - id: unit
        value: hertz
      - id: decimals
        value: 2
      - id: custom.align
        value: null
  gridPos:
    h: 15
    w: 24
    x: 0
    y: 15
  id: 7
  options:
    showHeader: true
  pluginVersion: 8.0.6
  targets:
  - format: table
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |
      WITH vms_by_cluster AS (
        SELECT DISTINCT ON (e.oid)
         c.name AS cluster_name,
         e.oid AS vm_oid,
         e.name AS vm_name
        FROM entity c,
          entity e,
          scope s
        WHERE e.type = 'VIRTUAL_MACHINE'
          AND c.type = 'COMPUTE_CLUSTER'
          AND s.seed_oid = c.oid
          AND s.scoped_oid = e.oid
          AND (s.start, s.finish) OVERLAPS ($__timeFrom(), $__timeTo())
        ORDER BY e.oid, s.finish, s.start
      )
      SELECT
        max(cluster_name) AS "Cluster name",
        max(vm_name) AS "VM name",
        avg(metric.capacity) FILTER (WHERE metric.type = 'VMEM') AS "VMEM Capacity",
        avg(metric.utilization) FILTER (WHERE metric.type = 'VMEM') AS "VMEM Avg",
        max(metric.utilization) FILTER (WHERE metric.type = 'VMEM') AS "VMEM Peak",
        avg(metric.capacity * 1000000) FILTER (WHERE metric.type = 'VCPU') AS "VCPU Capacity",
        avg(metric.utilization) FILTER (WHERE metric.type = 'VCPU') AS "VCPU Avg",
        max(metric.utilization) FILTER (WHERE metric.type = 'VCPU') AS "VCPU Peak"
      FROM vms_by_cluster
      JOIN metric ON
        metric.entity_oid = vm_oid
        AND metric."type" IN ('VMEM', 'VCPU')
        AND provider_oid IS NULL
        AND $__timeFilter(metric."time")
      GROUP BY vm_oid
      HAVING max(metric.utilization) FILTER (WHERE metric.type = 'VMEM') > 0.85
        OR max(metric.utilization) FILTER (WHERE metric.type = 'VCPU') > 0.85;
    refId: B
    select:
    - - params:
        - value
        type: column
    timeColumn: time
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom: null
  timeShift: null
  title: Under-provisioned VMs
  transformations:
  - id: merge
    options:
      reducers: []
  type: table
- datasource: $DB
  description: Group/Cluster information allowing individual VM peaks to be compared
    with the average of all of the peaks of the VMs in their corresponding cluster.
  fieldConfig:
    defaults:
      color:
        mode: thresholds
      custom:
        align: auto
        displayMode: auto
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
    overrides:
    - matcher:
        id: byRegexp
        options: /Avg.*/
      properties:
      - id: unit
        value: percentunit
      - id: decimals
        value: 2
      - id: custom.align
        value: right
  gridPos:
    h: 13
    w: 24
    x: 0
    y: 30
  id: 6
  options:
    showHeader: true
  pluginVersion: 8.0.6
  targets:
  - format: table
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |
      WITH vms_by_cluster AS (
        SELECT DISTINCT ON (e.oid)
         c.name AS cluster_name,
         e.oid AS vm_oid,
         e.name AS vm_name
        FROM entity c,
          entity e,
          scope s
        WHERE e.type = 'VIRTUAL_MACHINE'
          AND c.type = 'COMPUTE_CLUSTER'
          AND s.seed_oid = c.oid
          AND s.scoped_oid = e.oid
          AND (s.start, s.finish) OVERLAPS ($__timeFrom(), $__timeTo())
        ORDER BY e.oid, s.finish, s.start
      ),
      vm_peaks AS (
        SELECT
          max(cluster_name) AS cluster_name,
          max(metric.utilization) FILTER (WHERE metric.type = 'VMEM') AS vmem_peak,
          max(metric.utilization) FILTER (WHERE metric.type = 'VCPU') AS vcpu_peak
        FROM vms_by_cluster
        JOIN metric ON metric.entity_oid = vm_oid
        WHERE
          $__timeFilter(metric."time")
          AND metric.type IN ('VMEM', 'VCPU')
          AND provider_oid IS NULL
        GROUP BY vm_oid
      )
      SELECT
        cluster_name AS "Cluster",
        avg(vcpu_peak) AS "Avg(Peak VCPU)",
        avg(vmem_peak) AS "Avg(Peak VMem)"
      FROM vm_peaks
      GROUP BY cluster_name
    refId: A
    select:
    - - params:
        - value
        type: column
    timeColumn: time
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom: null
  timeShift: null
  title: Clusters with Average Peaks
  transformations:
  - id: merge
    options:
      reducers: []
  type: table
refresh: false
schemaVersion: 30
style: dark
tags: []
templating:
  list:
  - description: null
    error: null
    hide: 2
    includeAll: false
    label: null
    multi: false
    name: DB
    options: []
    query: postgres
    queryValue: ""
    refresh: 1
    regex: ""
    skipUrlSync: false
    type: datasource
time:
  from: now-6h
  to: now
timepicker:
  refresh_intervals:
  - 10s
  - 30s
  - 1m
  - 5m
  - 15m
  - 30m
  - 1h
  - 2h
  - 1d
timezone: ""
title: Virtual Machine Over or Under Provisioning
uid: vm_under_over_provisioning
version: 57
