package com.vmturbo.components.test.utilities.alert;

import java.util.Objects;

import javax.annotation.Nonnull;

import org.stringtemplate.v4.ST;

import com.google.common.annotations.VisibleForTesting;

import com.vmturbo.components.test.utilities.alert.MetricMeasurement.AlertStatus;

/**
 * Contains information about an alert generated by the {@link AlertManager}.
 */
public class TriggeredAlert {
    private static final String ALERT_STR_TEMPLATE =
        "<testName> triggered an alert!\n<ruleDescription>";

    /**
     * The rule associated with the alert.
     */
    private final AlertRule rule;

    /**
     * The measurement that produced the alert.
     */
    private final MetricMeasurement measurement;

    @VisibleForTesting
    TriggeredAlert(@Nonnull final AlertRule rule,
                   @Nonnull final MetricMeasurement measurement) {
        this.rule = Objects.requireNonNull(rule);
        this.measurement = Objects.requireNonNull(measurement);
    }

    @Nonnull
    public String getTestName() {
        return measurement.getTestName();
    }

    @Nonnull
    public String getTestClassName() {
        return measurement.getTestClassName();
    }

    @Nonnull
    public AlertMetricId getMetric() {
        return measurement.getMetric();
    }

    @Nonnull
    public AlertStatus getAlertStatus() {
        return measurement.getAlertStatus();
    }

    @Nonnull
    public AlertRule getRule() {
        return rule;
    }

    @Nonnull
    public MetricMeasurement getMeasurement() {
        return measurement;
    }

    @Override
    public String toString() {
        return new ST(ALERT_STR_TEMPLATE)
            .add("testName", getTestName())
            .add("ruleDescription", ruleDescription())
            .render();
    }

    public boolean isRegressionOrSlaViolation() {
        return getAlertStatus() == AlertStatus.SLA_VIOLATION ||
            getAlertStatus() == AlertStatus.REGRESSION;
    }

    public String ruleDescription() {
        return rule.describe(getMetric(), getAlertStatus());
    }
}
