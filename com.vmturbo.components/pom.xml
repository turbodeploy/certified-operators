<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>Turbonomic-XL</artifactId>
        <groupId>com.vmturbo</groupId>
        <version>8.2.0-SNAPSHOT</version>
        <relativePath>../build</relativePath>
    </parent>

    <artifactId>com.vmturbo.components</artifactId>
    <description>The parent POM of all components.</description>
    <packaging>pom</packaging>

    <properties>
        <!-- START properties for static swagger documentation generation -->
        <!-- The component's display name as it should be displayed in swagger docs -->
        <swagger.component.name>Name Not Set</swagger.component.name>

        <!-- The base path on which the component serves the API. Should begin with a slash. -->
        <swagger.basepath>/</swagger.basepath>

        <base.generated.docs.dir>${project.build.directory}/generated-docs/</base.generated.docs.dir>
        <swagger.conf.directory>${base.generated.docs.dir}/swagger</swagger.conf.directory>
        <generated.asciidoc.directory>${base.generated.docs.dir}/asciidoc</generated.asciidoc.directory>
        <asciidoctor.input.directory>${generated.asciidoc.directory}</asciidoctor.input.directory>
        <asciidoctor.html.output.directory>${base.generated.docs.dir}/html</asciidoctor.html.output.directory>
        <!-- This doesn't handle multi-level modules, but we don't really have
             multi-level modules that define components at the time of this
             writing (November 2016) so this is ok. -->
        <aggregate.adoc.dir>../com.vmturbo.components.common/src/main/resources</aggregate.adoc.dir>
        <!-- END properties for static swagger documentation generation -->
    </properties>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <!-- generate swagger.json from the annotated controllers -->
                <plugin>
                    <groupId>com.github.kongchen</groupId>
                    <artifactId>swagger-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>internal-swagger</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <configuration>
                                <apiSources>
                                    <apiSource>
                                        <springmvc>true</springmvc>
                                        <schemes>
                                            <scheme>http</scheme>
                                        </schemes>
                                        <basePath>${swagger.basepath}</basePath>
                                        <locations>
                                            <!--
                                            components with internal APIs need to provide their list
                                            of package names for scanning, as individual "location"
                                            elements, each naming a package. The configuration
                                            should be done in a matching "execution" element (with
                                            "internal-swagger" id) in the component pom.
                                            -->
                                        </locations>
                                        <outputFormats>json</outputFormats>
                                        <info>
                                            <title>${swagger.component.name}</title>
                                            <version>${api.version}</version>
                                            <description>REST API to access the ${swagger.component.name} functionality.</description>
                                        </info>
                                        <swaggerDirectory>${swagger.conf.directory}</swaggerDirectory>
                                        <outputPath>${swagger.conf.directory}</outputPath>
                                        <attachSwaggerArtifact>true</attachSwaggerArtifact>
                                    </apiSource>
                                </apiSources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.spotify</groupId>
                            <artifactId>docker-maven-plugin</artifactId>
                            <configuration>
                                <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                                <imageTags>
                                    <imageTag>${project.version}</imageTag>
                                </imageTags>
                                <labels>
                                    <label>com.vmturbo.version=${project.version}</label>
                                </labels>
                                <baseImage>${docker.image.prefix}/vmt-component-base:${project.version}</baseImage>
                                <entryPoint>["/entrypoint.sh", "${project.build.finalName}.jar"]</entryPoint>
                                <resources>
                                    <resource>
                                        <targetPath>/</targetPath>
                                        <directory>${project.build.directory}</directory>
                                        <include>${project.build.finalName}.jar</include>
                                    </resource>
                                    <resource>
                                        <targetPath>/lib</targetPath>
                                        <directory>${project.build.directory}/lib</directory>
                                    </resource>
                                    <resource>
                                        <targetPath>/swagger</targetPath>
                                        <directory>${project.build.directory}/generated-docs/swagger</directory>
                                    </resource>
                                </resources>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>build-docker-image</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>build</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>tag-docker-image</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>tag</goal>
                                    </goals>
                                    <configuration>
                                        <image>${docker.image.prefix}/${project.artifactId}</image>
                                        <newName>${docker.registry}/${docker.image.prefix}/${project.artifactId}:${project.version}</newName>
                                    </configuration>
                                </execution>
                                <execution>
                                      <id>push-docker-image</id>
                                     <phase>deploy</phase>
                                     <goals>
                                         <goal>push</goal>
                                     </goals>
                                     <configuration>
                                         <imageName>${docker.registry}/${docker.image.prefix}/${project.artifactId}</imageName>
                                    </configuration>
                                 </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>copy-dependencies</id>
                                    <goals>
                                        <goal>copy-dependencies</goal>
                                    </goals>
                                    <phase>prepare-package</phase>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                        <useBaseVersion>false</useBaseVersion>
                                        <includeScope>runtime</includeScope>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-jar-plugin</artifactId>
                            <configuration>
                                <archive>
                                    <manifest>
                                        <addClasspath>true</addClasspath>
                                        <classpathPrefix>lib/</classpathPrefix>
                                    </manifest>
                                </archive>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.components.common</artifactId>
        </dependency>
        <!-- Common test utilities. -->
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>components-api-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.immutables</groupId>
            <artifactId>value</artifactId>
        </dependency>

        <!-- testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
