<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!--
        This is parent POM for XL-related SDK probes. It is almost a copy of sdk-probe-parent pom.xml from
        OpsManager with the only difference in dependency versions included
        This pom is not inherited (does not have a parent link) from build/pom.xml in order to
        avoid lots of "dependencyManagements" from XL platform to be applied to conversion probes.
        Because probe's dependencies are completely isolated from the platform dependencies.
    -->
    <artifactId>xl-sdk-probe-parent</artifactId>
    <packaging>pom</packaging>
    <groupId>com.vmturbo</groupId>
    <version>${revision}</version>

    <properties>
        <revision>8.6.2-SNAPSHOT</revision>
        <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
        <swagger.component.name>GCP Conversion Mediation Component</swagger.component.name>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <vmturbo.mt.branch.version>${project.version}</vmturbo.mt.branch.version>
        <google.findbugs.version>2.0.3</google.findbugs.version>
        <log4j2.Version>2.17.1</log4j2.Version>
        <guava.version>31.1-jre</guava.version>
        <gson.version>2.8.9</gson.version>
        <jacocoVersion>0.8.2</jacocoVersion>
        <mockito.version>1.10.19</mockito.version>
        <powermock.version>1.6.6</powermock.version>
        <spotbugs.version>4.0.4</spotbugs.version>
        <grpc.version>1.44.0</grpc.version>
        <jackson.version>2.13.2</jackson.version>
        <jackson-databind.version>2.13.2.2</jackson-databind.version>
        <commons-logging.version>1.2</commons-logging.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <commons-codec.version>1.15</commons-codec.version>
        <httpclient.version>4.5.13</httpclient.version>
        <httpcore.version>4.4.13</httpcore.version>
        <surefire.version>3.0.0-M4</surefire.version>
        <spring.version>5.3.20</spring.version>
        <bouncycastle.version>1.69</bouncycastle.version>
        <kafka.version>3.1.0</kafka.version>
        <!-- the latest wiremock (2.27.2) has vulnerable jetty-io.  See open issue
        https://github.com/tomakehurst/wiremock/issues/1412 for details. It will be removed with OM-65681-->
        <wireMockVersion>2.27.2</wireMockVersion>
        <!-- This must match protobuf from SDK because we are using dependency
             protobuf-java libraries from SDK framework -->
        <protobuf.version>3.20.0</protobuf.version>

        <!-- Integration Testing -->
        <!-- this is needed so robot-docker container is created locally rather than remote machine,
             and the name needs to be different from DOCKER_HOST env variable, so images can be
             pushed to remote machine during team branch's nightly build -->
        <fabricateDockerHost>unix:///var/run/docker.sock</fabricateDockerHost>
        <pre-integration-test-phase>none</pre-integration-test-phase>
        <integration-test-phase>none</integration-test-phase>
        <dockerRobotImage>registry.turbonomic.com/turbonomic/robot-docker:1.0.10</dockerRobotImage>
        <it.s6.kill.finish.maxtime>60000</it.s6.kill.finish.maxtime>
        <it.fabric8.kill>30000</it.fabric8.kill>
        <it.fabric8.wait>600000</it.fabric8.wait>
        <it.suite.name>${artifactId}</it.suite.name>
        <it.test.directory>/usr/src/project/it</it.test.directory>
        <it.tag></it.tag>
        <it.docker.dir></it.docker.dir>
        <it.skip.pull>False</it.skip.pull>
        <it.debug>False</it.debug>
    </properties>

    <profiles>
        <profile>
            <id>windows-docker-host</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <!-- On Docker for Windows this will require exposing the Daemon with TLS disabled . -->
                <fabricateDockerHost>tcp://localhost:2375</fabricateDockerHost>
            </properties>
        </profile>
    </profiles>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.vmturbo</groupId>
                    <artifactId>vmturbo-sdk-plugin</artifactId>
                    <version>${vmturbo.mt.branch.version}</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <id>package-the-probe</id>
                            <goals>
                                <goal>package</goal>
                            </goals>
                        </execution>
                        <execution>
                            <phase>verify</phase>
                            <id>verify-the-probe</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                            <phase>prepare-package</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-libs</id>
                        <phase>${pre-integration-test-phase}</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!-- outputDirectory>${was.dir.path}</outputDirectory -->
                            <includeScope>compile</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                      <id>copy-it-directory</id>
                      <phase>${pre-integration-test-phase}</phase>
                      <goals>
                        <goal>copy-resources</goal>
                      </goals>
                      <configuration>
                        <outputDirectory>${project.build.directory}/it</outputDirectory>
                        <resources>
                          <resource>
                            <directory>src/it</directory>
                          </resource>
                        </resources>
                      </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <phase>${integration-test-phase}</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                            <dockerHost>${fabricateDockerHost}</dockerHost>
                            <showLogs>true</showLogs>
                            <images>
                                <image>
                                    <name>${dockerRobotImage}</name>
                                    <run>
                                        <!--
                                        pattern needs to start with "maven-" so jenkins builds
                                        will properly clean up leaked containers
                                        -->
                                        <containerNamePattern>maven-${it.suite.name}-%t
                                        </containerNamePattern>
                                        <volumes>
                                            <bind>
                                                <volume>${project.build.directory}:/usr/src/project</volume>
                                                <!-- Docker automatically handles this path on Windows. -->
                                                <volume>/var/run/docker.sock:/var/run/docker.sock</volume>
                                            </bind>
                                        </volumes>
                                        <env>
                                            <S6_KILL_FINISH_MAXTIME>${it.s6.kill.finish.maxtime}</S6_KILL_FINISH_MAXTIME>
                                            <PROJECT_NAME>${it.suite.name}</PROJECT_NAME>
                                            <PROJECT_VERSION>${project.version}</PROJECT_VERSION>
                                            <TEST_DIRECTORY>${it.test.directory}</TEST_DIRECTORY>
                                            <ROBOT_TAG>${it.tag}</ROBOT_TAG>
                                            <DOCKER_USERNAME>${docker.pull.username}</DOCKER_USERNAME>
                                            <DOCKER_PASSWORD>${docker.pull.password}</DOCKER_PASSWORD>
                                            <DOCKER_PROJECT_DIR>${it.docker.dir}</DOCKER_PROJECT_DIR>
                                            <SKIP_PULL>${it.skip.pull}</SKIP_PULL>
                                            <DEBUG_MODE>${it.debug}</DEBUG_MODE>
                                            <TEST_PROJECT_DIR>${project.build.directory}</TEST_PROJECT_DIR>
                                        </env>
                                        <wait>
                                            <log>${it.suite.name}[ ]+\| PASS \|</log>
                                            <kill>${it.fabric8.kill}</kill>
                                            <time>${it.fabric8.wait}</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-IT</id>
                        <phase>${integration-test-phase}</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                            <dockerHost>${fabricateDockerHost}</dockerHost>
                            <images>
                                <image>
                                    <name>${dockerRobotImage}</name>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.1</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>9.3</version>
                    </dependency>
                    <dependency>
                        <groupId>com.vmturbo</groupId>
                        <artifactId>com.vmturbo.checkstyle.config</artifactId>
                        <version>${vmturbo.mt.branch.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <configLocation>vmt-checkstyle.xml</configLocation>
                    <encoding>UTF-8</encoding>
                    <violationSeverity>info</violationSeverity>
                    <failOnViolation>true</failOnViolation>
                    <failsOnError>false</failsOnError>
                    <sourceDirectories>
                        <sourceDirectory>${basedir}</sourceDirectory>
                    </sourceDirectories>
                    <includes>src/**,*.xml,*.md</includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs.version}</version>
                <configuration>
                    <!-- min|less|default|more|max -->
                    <effort>More</effort>
                    <!-- Report on Low, Medium, High bugs -->
                    <threshold>High</threshold>
                    <failOnError>false</failOnError>
                    <maxHeap>1024</maxHeap>
                    <!--
                     <includeFilterFile></includeFilterFile>
                     <excludeFilterFile></excludeFilterFile>
                    -->
                </configuration>
            </plugin>
            <!-- This plugin is needed to correctly create pom files during install/deploy phase
                 Otherwise, the version '${revision}' would not be replaced properly.
                 See: https://maven.apache.org/maven-ci-friendly.html -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.2.4</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>resolveCiFriendliesOnly</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.platform.sdk.probe</artifactId>
            <version>${vmturbo.mt.branch.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-databind.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j2.Version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.platform.sdk.common</artifactId>
                <version>${vmturbo.mt.branch.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${google.findbugs.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.13.2</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>2.23.0</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>1.3</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>components-api-test</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.api.conversion</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock-jre8</artifactId>
                <version>${wireMockVersion}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons-text.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.11.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity.tools</groupId>
                <artifactId>velocity-tools-generic</artifactId>
                <version>${velocity-tools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk15on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <pluginRepositories>
        <pluginRepository>
            <id>snapshots</id>
            <name>VMTurbo plugin repository</name>
            <url>http://build.vmturbo.com:8081/nexus/content/repositories/snapshots/</url>
        </pluginRepository>
        <pluginRepository>
            <id>vmturbo</id>
            <name>VMTurbo plugin repository</name>
            <url>http://build.vmturbo.com:8081/nexus/content/repositories/vmturbo/</url>
        </pluginRepository>
    </pluginRepositories>
    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Internal Releases</name>
            <url>http://build.vmturbo.com:8081/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Internal Snapshots</name>
            <url>http://build.vmturbo.com:8081/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>
</project>
