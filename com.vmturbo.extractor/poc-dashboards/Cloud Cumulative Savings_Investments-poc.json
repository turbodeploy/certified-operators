{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 41,
  "links": [],
  "panels": [
    {
      "datasource": "Turbo Timescale",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 13,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.0.6",
      "targets": [
        {
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH\n  -- all accounts; when scoping is added to the dashboard this will be injected from\n  -- menu variables\n  accounts AS (SELECT array_agg(DISTINCT oid) AS accounts_array FROM entity WHERE type='BUSINESS_ACCOUNT'),\n  -- translate scoping oid list into an oid list of entities in scope\n  scoped_entities as (SELECT array_agg(DISTINCT s.oid) as entities_array\n    FROM accounts,\n    scope_to_types($__timeFrom(), $__timeTo(),\n      ARRAY['VIRTUAL_MACHINE','VIRTUAL_VOLUME','DATABASE','DATABASE_SERVER']::entity_type[],\n      accounts_array::bigint[], false) AS s),\n  -- raw, aggregated savings data for in-scope entities\n  raw_savings AS (SELECT e.oid,\n      coalesce(sum(es.stats_value) FILTER (WHERE es.savings_type IS NULL OR es.savings_type = 'MISSED_SAVINGS'), 0) AS missed_s,\n      coalesce(sum(es.stats_value) FILTER (WHERE es.savings_type IS NULL OR es.savings_type = 'MISSED_INVESTMENTS'), 0) AS missed_i,\n      coalesce(sum(es.stats_value) FILTER (WHERE es.savings_type IS NULL OR es.savings_type = 'REALIZED_SAVINGS'), 0) AS realized_s,\n      coalesce(sum(es.stats_value) FILTER (WHERE es.savings_type IS NULL OR es.savings_type = 'REALIZED_INVESTMENTS'), 0) realized_i\n    FROM (SELECT unnest AS oid FROM scoped_entities, unnest(entities_array)) AS e\n      LEFT OUTER JOIN entity_savings es ON (e.oid = es.entity_oid)\n    WHERE es.time BETWEEN $__timeFrom() AND $__timeTo()\n    GROUP BY 1),\n  -- compute account-name decorators for in-scope entities\n  entity_accounts as (SELECT DISTINCT seed AS oid, name\n    FROM scoped_entities, scope_to($__timeFrom(), $__timeTo(), 'BUSINESS_ACCOUNT', entities_array, false) s, entity e\n    WHERE s.oid = e.oid),\n  -- compute RG-name (resource group) decorators for in-scope entities. Since an entity\n  -- may appear in multiple RGs over the selected time span, we aggregate them all into\n  -- a single concatenation of their names. This may not be the desired treatment. PM\n  -- needs to be consulted.\n  entity_rgs as (SELECT seed AS oid, array_to_string(array_agg(DISTINCT name), ', ') AS name\n    FROM scoped_entities, scope_to($__timeFrom(), $__timeTo(), 'RESOURCE_GROUP', entities_array, false) s, entity e\n    WHERE s.oid = e.oid\n    GROUP BY 1)\n  -- decorate raw savings with entity names and tags, and add final column names\n  SELECT rs.oid as \"Entity Id\", e.name as \"Entity Name\", e.type as \"Entity Type\", \n    rs.missed_s as \"Missed Savings ($)\", rs.missed_i as \"Missed Investments ($)\",\n    rs.realized_s as \"Realized Savings ($)\", rs.realized_i as \"Realized Investments ($)\",\n    ea.name as \"Account\", coalesce(erg.name, '') as \"Resource Groups\",\n    regexp_replace((e.attrs -> 'tags')::text, '{|[|\"\\[\\]]|}'::text, ''::text, 'g') AS \"Tags\"\n  FROM raw_savings rs\n    LEFT OUTER JOIN entity_accounts ea ON (rs.oid = ea.oid)\n    LEFT OUTER JOIN entity_rgs erg ON (rs.oid = erg.oid)\n    JOIN entity e ON (rs.oid = e.oid)\n  ORDER BY 1;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Cumulative Savings/Investments",
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 30,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Cloud Cumulative Savings/Investments",
  "uid": "abcde",
  "version": 402
}
