---
annotations:
  list:
  - builtIn: 1
    datasource: -- Grafana --
    enable: true
    hide: true
    iconColor: rgba(0, 211, 255, 1)
    name: Annotations & Alerts
    type: dashboard
description: This dashboard displays current scaling actions for virtual machines
  in your on-prem environment.
editable: false
gnetId:
graphTooltip: 0
iteration: 1613752850955
links: []
panels:
- datasource: $DB
  fieldConfig:
    defaults:
      custom:
        align:
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value:
        - color: red
          value: 80
    overrides:
    - matcher:
        id: byName
        options: Peak VMem
      properties:
      - id: unit
        value: kbytes
      - id: custom.width
        value: 118
    - matcher:
        id: byName
        options: Peak VCPU
      properties:
      - id: unit
        value: hertz
    - matcher:
        id: byName
        options: Action Details
      properties:
      - id: custom.width
        value: 328
    - matcher:
        id: byName
        options: From
      properties:
      - id: custom.width
        value: 73
    - matcher:
        id: byName
        options: To
      properties:
      - id: custom.width
        value: 70
    - matcher:
        id: byName
        options: Resource Type
      properties:
      - id: custom.width
        value: 108
    - matcher:
        id: byName
        options: Resize Type
      properties:
      - id: custom.width
        value: 108
    - matcher:
        id: byName
        options: Host Cluster
      properties:
      - id: custom.width
        value: 259
    - matcher:
        id: byName
        options: Unit
      properties:
      - id: custom.width
        value: 63
    - matcher:
        id: byName
        options: VM Name
      properties:
      - id: custom.width
        value: 225
  gridPos:
    h: 15
    w: 24
    x: 0
    y: 0
  id: 2
  options:
    showHeader: true
    sortBy: []
  pluginVersion: 7.1.1
  targets:
  - format: table
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      WITH action_data AS (
        SELECT target_entity_id
                ,description
                ,resource_type
                ,(resize_info -> resource_type ->> 'from')::numeric as from_value
                ,(resize_info -> resource_type ->> 'to')::numeric as to_value
            FROM (
                  SELECT DISTINCT
                         target_entity_id
                        ,attrs -> 'resizeInfo' as resize_info
                        ,jsonb_object_keys(attrs -> 'resizeInfo') as resource_type
                        ,description
                    FROM pending_action
                   WHERE type = 'RESIZE') as resize_actions
      ),
      vms_by_cluster AS (
        SELECT DISTINCT ON (e.oid)
              g.name as cluster_name,
              e.oid as vm_oid,
              e.name as vm_name
            FROM entity e
            LEFT JOIN scope s1 ON (s1.seed_oid = e.oid)
            LEFT JOIN entity g ON (g.oid = s1.scoped_oid)
             ${ScopeJoin:raw}
             AND e.type = 'VIRTUAL_MACHINE'
             AND e.environment = 'ON_PREM'
             AND (s1.scoped_type = 'COMPUTE_CLUSTER' OR s1.scoped_type is NULL)
             AND (e.first_seen, e.last_seen) OVERLAPS ($__timeFrom(), $__timeTo())
             AND ((s1.start, s1.finish) OVERLAPS ($__timeFrom(), $__timeTo()) OR s1.start is NULL)
      ),
      data AS (
        SELECT
          cluster_name as "Host Cluster",
          vm_name as "VM Name",
          description as "Action Details",
          CASE
           WHEN resource_type in ('VMEM', 'MEM', 'VSTORAGE') THEN from_value/1024/1024
           ELSE from_value
        END as "From",
          CASE
           WHEN resource_type in ('VMEM', 'MEM', 'VSTORAGE') THEN to_value/1024/1024
           ELSE to_value
        END as "To",
        CASE
           WHEN resource_type in ('VMEM', 'MEM', 'VSTORAGE') THEN 'GB'
           ELSE 'Cores'
        END as "Unit",
          resource_type as "Resource Type",
          CASE
             WHEN to_value > from_value THEN 'Upsize'
             WHEN to_value < from_value THEN 'Downsize'
             ELSE null
          END as "Resize Type"
        FROM action_data, vms_by_cluster
        WHERE vm_oid = action_data.target_entity_id
      )
      SELECT *
      FROM data
      WHERE
        CASE
          WHEN ARRAY[ $ResizeType ] = ARRAY[ '0' ] THEN true
          ELSE "Resize Type" = $ResizeType
        END
        AND CASE
          WHEN ARRAY[ $ResourceType ] = ARRAY[ '0' ] THEN true
          ELSE "Resource Type" = $ResourceType
        END
      ORDER BY 2
    refId: A
    select:
    - - params:
        - savings
        type: column
    table: action_spec
    timeColumn: first_seen
    timeColumnType: timestamp
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom:
  timeShift:
  title: Rightsizing Recommendations
  type: table
schemaVersion: 26
style: dark
tags: []
templating:
  list:
  - hide: 2
    includeAll: false
    label:
    multi: false
    name: DB
    options: []
    query: postgres
    queryValue: ''
    refresh: 1
    regex: ''
    skipUrlSync: false
    type: datasource
  - allValue: '0'
    datasource: $DB
    definition: |-
      SELECT name as __text,
             oid as __value
      FROM entity
      WHERE ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)
      AND ((entity.type = 'GROUP'
                AND attrs -> 'member_types' ? 'VIRTUAL_MACHINE')
      OR entity.type = 'COMPUTE_CLUSTER')
      GROUP BY name, oid
      ORDER BY 1
    hide: 0
    includeAll: true
    label:
    multi: false
    name: VMGroup
    options: []
    query: |-
      SELECT name as __text,
             oid as __value
      FROM entity
      WHERE ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)
      AND ((entity.type = 'GROUP'
                AND attrs -> 'member_types' ? 'VIRTUAL_MACHINE')
      OR entity.type = 'COMPUTE_CLUSTER')
      GROUP BY name, oid
      ORDER BY 1
    refresh: 2
    regex: ''
    skipUrlSync: false
    sort: 0
    tagValuesQuery: ''
    tags: []
    tagsQuery: ''
    type: query
    useTags: false
  - allValue: "'0'"
    datasource: $DB
    definition: |-
      SELECT DISTINCT jsonb_object_keys(pending_action.attrs -> 'resizeInfo')
      FROM pending_action
      JOIN entity on entity.oid = pending_action.target_entity_id
      WHERE entity.type = 'VIRTUAL_MACHINE'
    hide: 0
    includeAll: true
    label:
    multi: false
    name: ResourceType
    options: []
    query: |-
      SELECT DISTINCT jsonb_object_keys(pending_action.attrs -> 'resizeInfo')
      FROM pending_action
      JOIN entity on entity.oid = pending_action.target_entity_id
      WHERE entity.type = 'VIRTUAL_MACHINE'
    refresh: 2
    regex: ''
    skipUrlSync: false
    sort: 0
    tagValuesQuery: ''
    tags: []
    tagsQuery: ''
    type: query
    useTags: false
  - allValue: "'0'"
    current:
      selected: true
      text: All
      value: $__all
    hide: 0
    includeAll: true
    label:
    multi: false
    name: ResizeType
    options:
    - selected: true
      text: All
      value: $__all
    - selected: false
      text: Upsize
      value: Upsize
    - selected: false
      text: Downsize
      value: Downsize
    query: Upsize,Downsize
    queryValue: ''
    skipUrlSync: false
    type: custom
  - allValue:
    datasource: $DB
    definition: |-
      SELECT CASE WHEN ARRAY[${VMGroup:csv}]::bigint[] = ARRAY[0]::bigint[]
        THEN  'WHERE true '
        ELSE concat(
          'JOIN scope s ON (s.seed_oid = e.oid) ',
          'WHERE s.scoped_oid IN (SELECT * FROM unnest(array[${VMGroup::csv}]::bigint[])) ',
          'AND (s.start, s.finish) OVERLAPS ('$__timeFrom()', '$__timeTo()') ')
        END
    hide: 2
    includeAll: false
    label:
    multi: false
    name: ScopeJoin
    options: []
    query: |-
      SELECT CASE WHEN ARRAY[${VMGroup:csv}]::bigint[] = ARRAY[0]::bigint[]
        THEN  'WHERE true '
        ELSE concat(
          'JOIN scope s ON (s.seed_oid = e.oid) ',
          'WHERE s.scoped_oid IN (SELECT * FROM unnest(array[${VMGroup::csv}]::bigint[])) ',
          'AND (s.start, s.finish) OVERLAPS ('$__timeFrom()', '$__timeTo()') ')
        END
    refresh: 2
    regex: ''
    skipUrlSync: false
    sort: 0
    tagValuesQuery: ''
    tags: []
    tagsQuery: ''
    type: query
    useTags: false
timepicker:
  refresh_intervals:
  - 10s
  - 30s
  - 1m
  - 5m
  - 15m
  - 30m
  - 1h
  - 2h
  - 1d
timezone: ''
title: On-Prem Virtual Machine Rightsizing Recommendations
uid: vm_rightsizing_actions
