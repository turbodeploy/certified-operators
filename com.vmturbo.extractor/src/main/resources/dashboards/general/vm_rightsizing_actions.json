{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": false,
  "gnetId": null,
  "graphTooltip": 0,
  "iteration": 1596225568400,
  "links": [],
  "panels": [
    {
      "datasource": "$DB",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Peak VMem"
            },
            "properties": [
              {
                "id": "unit",
                "value": "kbytes"
              },
              {
                "id": "custom.width",
                "value": 118
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Peak VCPU"
            },
            "properties": [
              {
                "id": "unit",
                "value": "hertz"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "7.0.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH action_data AS (\n    SELECT DISTINCT\n           target_entity_id\n          ,savings\n          ,description\n    FROM action, action_spec\n    WHERE spec_oid = action_spec_oid\n      AND hash = action_spec_hash\n      AND type = 'RESIZE'\n      AND state = 'READY'\n      AND time between timestamptz $__timeTo() - interval '30 minute' and $__timeTo()\n      AND ($__timeFrom(), $__timeTo()) OVERLAPS (first_seen, last_seen) \n)\n\nSELECT e.name as \"VM Name\"\n      ,MAX(m.current) FILTER (WHERE m.type = 'VCPU')*1000000 as \"Peak VCPU\"\n      ,MAX(m.current) FILTER (WHERE m.type = 'VMEM') as \"Peak VMem\"\n      ,description as \"Action Details\"\n      ,btrim(regexp_matches(description, 'from ([0-9]{0,4}|[0-9]{0,4}.[0-9] GB)')::text, '{}\"')  as \"From\"\n      ,btrim(regexp_matches(description, 'to ([0-9]{0,4}|[0-9]{0,4}.[0-9] GB)')::text, '{}\"') as \"To\"\n  FROM entity as e, metric as m, action_data\n WHERE m.entity_oid = e.oid\n   AND m.entity_hash = e.hash\n   AND e.oid = action_data.target_entity_id\n   AND $__timeFilter(\"time\")\n   AND ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen) \n   AND CASE WHEN ARRAY[ $VMGroup ] = ARRAY[ '0' ] THEN true ELSE (e.scope && ARRAY[ $VMGroup ]::bigint[]) END\n GROUP BY e.oid, description, 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "savings"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "action_spec",
          "timeColumn": "first_seen",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Rightsizing Recommendations",
      "type": "table"
    },
    {
      "datasource": "$DB",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 10
      },
      "id": 4,
      "options": {
        "showHeader": true
      },
      "pluginVersion": "7.0.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH group_data as (\n    SELECT DISTINCT on(e.oid) g.name as group_name\n        ,e.oid as vm_oid\n    FROM entity g\n    JOIN entity e on g.\"type\" = 'GROUP' \n    AND CASE WHEN ARRAY[ $VMGroup ] = ARRAY[ '0' ] THEN true ELSE (g.oid = $VMGroup) END\n    AND e.\"type\" = 'VIRTUAL_MACHINE'\n    AND g.attrs -> 'expectedTypes' ? 'VIRTUAL_MACHINE'\n    AND ($__timeFrom(),$__timeTo()) OVERLAPS (e.first_seen, e.last_seen)\n    AND ($__timeFrom(),$__timeTo()) OVERLAPS (g.first_seen, g.last_seen)\n    ),\n\nvm_peaks as (\n    SELECT e.oid\n          ,MAX(m.utilization) FILTER (WHERE m.type = 'VCPU') as peak_vcpu\n          ,MAX(m.utilization) FILTER (WHERE m.type = 'VMEM') as peak_vmem\n      FROM entity as e, metric as m\n     WHERE m.entity_oid = e.oid\n       AND m.entity_hash = e.hash\n       AND $__timeFilter(\"time\")\n       AND ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen) \n       AND CASE WHEN ARRAY[ $VMGroup ] = ARRAY[ '0' ] THEN true ELSE (e.scope && ARRAY[ $VMGroup ]::bigint[]) END\n     GROUP BY e.oid\n)\n\nSELECT group_data.group_name as \"Group Name\"\n      ,AVG(peak_vcpu) as \"Avg Peak VCPU\"\n      ,AVG(peak_vmem) as \"Avg Peak VMem\"\n  FROM group_data, vm_peaks \n WHERE vm_peaks.oid = group_data.vm_oid\n GROUP BY group_data.group_name",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "savings"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "action_spec",
          "timeColumn": "first_seen",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "VM Group Average Peaks",
      "type": "table"
    }
  ],
  "schemaVersion": 25,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "DB",
        "options": [],
        "query": "postgres",
        "queryValue": "",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": "'0'",
        "datasource": "$DB",
        "definition": "SELECT name as __text,\n       oid as __value \nFROM entity \nWHERE entity.type = 'GROUP' \nAND ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen) \nAND attrs -> 'expectedTypes' ? 'VIRTUAL_MACHINE'\nGROUP BY name, oid \nORDER BY 1",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "VMGroup",
        "options": [],
        "query": "SELECT name as __text,\n       oid as __value \nFROM entity \nWHERE entity.type = 'GROUP' \nAND ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen) \nAND attrs -> 'expectedTypes' ? 'VIRTUAL_MACHINE'\nGROUP BY name, oid \nORDER BY 1",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "timepicker": {
    "refresh_intervals": [
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "VM Rightsizing Recommendations",
  "uid": "vm_rightsizing_actions"
}