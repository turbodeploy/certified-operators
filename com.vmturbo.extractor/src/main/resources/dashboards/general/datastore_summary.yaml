---
__inputs: []
__requires:
- type: grafana
  id: grafana
  name: Grafana
  version: 8.0.6
- type: datasource
  id: postgres
  name: PostgreSQL
  version: 1.0.0
- type: panel
  id: table
  name: Table
  version: ""
annotations:
  list:
  - builtIn: 1
    datasource: -- Grafana --
    enable: true
    hide: true
    iconColor: rgba(0, 211, 255, 1)
    name: Annotations & Alerts
    type: dashboard
description: Performance and capacity profile for datastores.
editable: false
gnetId: null
graphTooltip: 0
iteration: 1627420433210
links: []
panels:
- datasource: $DB
  description: Capacity is max value. Provisioned Used, Used, IOPS and Latency are
    average values.
  fieldConfig:
    defaults:
      color:
        mode: thresholds
      custom:
        align: right
        displayMode: auto
      decimals: 2
      displayName: ""
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
      unit: mbytes
    overrides:
    - matcher:
        id: byName
        options: Time
      properties:
      - id: displayName
        value: Time
      - id: unit
        value: 'time: YYYY-MM-DD HH:mm:ss'
      - id: custom.align
        value: null
    - matcher:
        id: byName
        options: IOPS
      properties:
      - id: unit
        value: iops
      - id: decimals
        value: 2
      - id: custom.align
        value: null
    - matcher:
        id: byName
        options: Latency
      properties:
      - id: unit
        value: ms
      - id: decimals
        value: 2
      - id: custom.align
        value: null
  gridPos:
    h: 4
    w: 15
    x: 0
    y: 0
  id: 2
  options:
    showHeader: true
  pluginVersion: 8.0.6
  targets:
  - format: table
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |
      SELECT
        max(metric.capacity) FILTER (WHERE metric.type = 'STORAGE_AMOUNT') AS "Capacity",
        avg(metric.current) FILTER (WHERE metric.type = 'STORAGE_PROVISIONED') AS "Provisioned Used",
        avg(metric.current) FILTER (WHERE metric.type = 'STORAGE_AMOUNT') AS "Used",
        avg(metric.current) FILTER (WHERE metric.type = 'STORAGE_ACCESS') AS "IOPS",
        avg(metric.current) FILTER (WHERE metric.type = 'STORAGE_LATENCY') AS "Latency"
      FROM metric
      JOIN entity as e ON
        e.type = 'STORAGE'
        and e.oid = metric.entity_oid
      WHERE
        e.oid = ${Datastore:raw} + 0
        and ($__timeFrom(),$__timeTo()) OVERLAPS (e.first_seen, e.last_seen)
        and metric.time BETWEEN timestamptz $__timeFrom() AND $__timeTo()
    refId: A
    select:
    - - params:
        - value
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamptz
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom: null
  timeShift: null
  title: Datastore Summary
  transformations:
  - id: merge
    options:
      reducers: []
  type: table
- datasource: $DB
  description: Average, min and max values datastore utilization, IOPS and latency.
  fieldConfig:
    defaults:
      color:
        mode: thresholds
      custom:
        align: left
        displayMode: auto
      decimals: 2
      displayName: ""
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
      unit: mbytes
    overrides:
    - matcher:
        id: byName
        options: IOPS
      properties:
      - id: unit
        value: iops
      - id: decimals
        value: 2
      - id: custom.align
        value: left
    - matcher:
        id: byName
        options: Latency
      properties:
      - id: unit
        value: ms
      - id: decimals
        value: 2
      - id: custom.align
        value: left
    - matcher:
        id: byName
        options: order
      properties:
      - id: unit
        value: short
      - id: decimals
        value: 2
      - id: custom.align
        value: null
    - matcher:
        id: byName
        options: Utilization
      properties:
      - id: unit
        value: percentunit
      - id: decimals
        value: 2
      - id: custom.align
        value: left
  gridPos:
    h: 5
    w: 15
    x: 0
    y: 4
  id: 19
  options:
    showHeader: true
  pluginVersion: 8.0.6
  targets:
  - format: table
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |
      SELECT
        unnest(array['1','2','3']) as "order",
        unnest(array['AVG','MIN','MAX']) as "Aggregation",
        unnest(array[
          avg(metric.utilization) FILTER (WHERE metric.type = 'STORAGE_AMOUNT'),
          min(metric.utilization) FILTER (WHERE metric.type = 'STORAGE_AMOUNT'),
          max(metric.Utilization) FILTER (WHERE metric.type = 'STORAGE_AMOUNT')
        ]) AS "Utilization",
        unnest(array[
          avg(metric.current) FILTER (WHERE metric.type = 'STORAGE_ACCESS'),
          min(metric.current) FILTER (WHERE metric.type = 'STORAGE_ACCESS'),
          max(metric.current) FILTER (WHERE metric.type = 'STORAGE_ACCESS')
        ]) AS "IOPS",
        unnest(array[
          avg(metric.current) FILTER (WHERE metric.type = 'STORAGE_LATENCY'),
          min(metric.current) FILTER (WHERE metric.type = 'STORAGE_LATENCY'),
          max(metric.current) FILTER (WHERE metric.type = 'STORAGE_LATENCY')
          ]) AS "Latency"
      FROM metric
      JOIN entity as e on
        e.type = 'STORAGE'
        and e.oid = metric.entity_oid
      WHERE
        metric.time BETWEEN timestamptz $__timeFrom() AND $__timeTo()
        AND ($__timeFrom(),$__timeTo()) OVERLAPS (e.first_seen, e.last_seen)
        AND e.oid = ${Datastore:raw} + 0
      ORDER BY "order" asc
    refId: A
    select:
    - - params:
        - value
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamptz
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom: null
  timeShift: null
  title: Datastore Resource Utilization
  transformations:
  - id: merge
    options:
      reducers: []
  - id: organize
    options:
      excludeByName:
        order: true
      indexByName: {}
      renameByName: {}
  type: table
- datasource: $DB
  description: Storage used, average and max IOPS and latency for VMs consuming resources
    from datastore.
  fieldConfig:
    defaults:
      color:
        mode: thresholds
      custom:
        align: right
        displayMode: auto
      decimals: 2
      displayName: ""
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
      unit: short
    overrides:
    - matcher:
        id: byName
        options: Time
      properties:
      - id: displayName
        value: Time
      - id: unit
        value: 'time: YYYY-MM-DD HH:mm:ss'
      - id: custom.align
        value: null
    - matcher:
        id: byName
        options: VM Name
      properties:
      - id: unit
        value: short
      - id: decimals
        value: 2
      - id: custom.align
        value: left
    - matcher:
        id: byName
        options: Storage Used
      properties:
      - id: unit
        value: mbytes
      - id: decimals
        value: 2
      - id: custom.align
        value: null
    - matcher:
        id: byRegexp
        options: /.*IOPS/
      properties:
      - id: unit
        value: iops
      - id: decimals
        value: 2
      - id: custom.align
        value: null
    - matcher:
        id: byRegexp
        options: /.*Latency/
      properties:
      - id: unit
        value: ms
      - id: decimals
        value: 2
      - id: custom.align
        value: null
  gridPos:
    h: 10
    w: 24
    x: 0
    y: 9
  id: 21
  options:
    showHeader: true
    sortBy:
    - desc: false
      displayName: VM Name
  pluginVersion: 8.0.6
  targets:
  - format: table
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      WITH sub AS (
        SELECT
            m.entity_oid as oid,
            e.name as name,
            m.type as type,
            m.consumed as value
        FROM
            metric m
        JOIN scope s ON
            m.entity_oid = s.scoped_oid
            AND m.time BETWEEN s.start AND s.finish
        JOIN entity e ON
            m.entity_oid = e.oid
        WHERE
            -- fixed conditions
            m.type in ('STORAGE_LATENCY','STORAGE_ACCESS','STORAGE_AMOUNT')
            AND s.scoped_type = 'VIRTUAL_MACHINE'
            -- conditions involving dashboard vars
            AND m.time BETWEEN timestamptz $__timeFrom() AND $__timeTo()
            AND ($__timeFrom(),$__timeTo()) OVERLAPS (s.start, s.finish)
            AND s.seed_oid = ${Datastore:raw} + 0
        GROUP BY m.time, m.entity_oid, e.name, m.type, m.consumed
      )
      SELECT
          max(sub.name) as "VM Name",
          max(sub.value) FILTER (WHERE sub.type = 'STORAGE_AMOUNT') AS "Storage Used",
          avg(sub.value) FILTER (WHERE sub.type = 'STORAGE_ACCESS') AS "Avg IOPS",
          max(sub.value) FILTER (WHERE sub.type = 'STORAGE_ACCESS') AS "Max IOPS",
          avg(sub.value) FILTER (WHERE sub.type = 'STORAGE_LATENCY') AS "Avg Latency",
          max(sub.value) FILTER (WHERE sub.type = 'STORAGE_LATENCY') AS "Max Latency"
      FROM sub
      GROUP BY sub.oid
    refId: A
    select:
    - - params:
        - value
        type: column
    timeColumn: time
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom: null
  timeShift: null
  title: Virtual Machine Summary
  transformations:
  - id: merge
    options:
      reducers: []
  type: table
- datasource: $DB
  fieldConfig:
    defaults:
      custom:
        align: null
        displayMode: auto
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
    overrides:
    - matcher:
        id: byName
        options: File Size
      properties:
      - id: unit
        value: kbytes
      - id: custom.width
        value: 102
    - matcher:
        id: byName
        options: File Path
      properties:
      - id: custom.width
        value: 547
  gridPos:
    h: 14
    w: 24
    x: 0
    y: 19
  id: 23
  options:
    showHeader: true
    sortBy: []
  pluginVersion: 8.0.6
  targets:
  - format: table
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      SELECT
        path as "File Path",
        file_size_kb as "File Size",
        modification_time as "Last Modified Time"
      FROM wasted_file
      WHERE storage_oid = ${Datastore:raw} + 0
      ORDER BY 2 DESC
    refId: A
    select:
    - - params:
        - current
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamp
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom: null
  timeShift: null
  title: Wasted Files on Datastore
  type: table
refresh: false
schemaVersion: 30
style: dark
tags: []
templating:
  list:
  - description: null
    error: null
    hide: 2
    includeAll: false
    label: null
    multi: false
    name: DB
    options: []
    query: postgres
    queryValue: ""
    refresh: 1
    regex: ""
    skipUrlSync: false
    type: datasource
  - allValue: null
    current: {}
    datasource: $DB
    definition: |-
      SELECT name as __text, oid as __value
      FROM entity
      WHERE ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)
        AND entity.type = 'STORAGE'
      GROUP BY name, oid
      ORDER BY 1
    description: null
    error: null
    hide: 0
    includeAll: false
    label: null
    multi: false
    name: Datastore
    options: []
    query: |-
      SELECT name as __text, oid as __value
      FROM entity
      WHERE ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)
        AND entity.type = 'STORAGE'
      GROUP BY name, oid
      ORDER BY 1
    refresh: 2
    regex: ""
    skipUrlSync: false
    sort: 0
    tagValuesQuery: ""
    tagsQuery: ""
    type: query
    useTags: false
time:
  from: now-6h
  to: now
timepicker:
  refresh_intervals:
  - 10s
  - 30s
  - 1m
  - 5m
  - 15m
  - 30m
  - 1h
  - 2h
  - 1d
timezone: ""
title: Datastore Summary
uid: datastore_summary
version: 58
