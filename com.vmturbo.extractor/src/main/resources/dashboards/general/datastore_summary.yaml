annotations:
  list:
    - builtIn: 1
      datasource: -- Grafana --
      enable: true
      hide: true
      iconColor: rgba(0, 211, 255, 1)
      name: Annotations & Alerts
      type: dashboard
description: Performance and capacity profile for datastores.
editable: false
gnetId:
graphTooltip: 0
iteration: 1596225780243
links: []
panels:
  - columns: []
    datasource: $DB
    description: Capacity is max value. Provisioned Used, Used, IOPS and Latency are
      average values.
    fieldConfig:
      defaults:
        custom: {}
      overrides: []
    fontSize: 100%
    gridPos:
      h: 4
      w: 15
      x: 0
      y: 0
    id: 2
    pageSize:
    showHeader: true
    sort:
      col: 1
      desc: false
    styles:
      - $$hashKey: object:374
        alias: Time
        align: auto
        dateFormat: YYYY-MM-DD HH:mm:ss
        pattern: Time
        type: date
      - $$hashKey: object:375
        alias: ''
        align: auto
        colorMode:
        colors:
          - rgba(245, 54, 54, 0.9)
          - rgba(237, 129, 40, 0.89)
          - rgba(50, 172, 45, 0.97)
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        mappingType: 1
        pattern: IOPS
        thresholds: []
        type: number
        unit: iops
      - $$hashKey: object:376
        alias: ''
        align: auto
        colorMode:
        colors:
          - rgba(245, 54, 54, 0.9)
          - rgba(237, 129, 40, 0.89)
          - rgba(50, 172, 45, 0.97)
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        mappingType: 1
        pattern: Latency
        thresholds: []
        type: number
        unit: ms
      - $$hashKey: object:377
        alias: ''
        align: right
        colorMode:
        colors:
          - rgba(245, 54, 54, 0.9)
          - rgba(237, 129, 40, 0.89)
          - rgba(50, 172, 45, 0.97)
        decimals: 2
        pattern: /.*/
        thresholds: []
        type: number
        unit: mbytes
    targets:
      - format: table
        group: []
        metricColumn: none
        rawQuery: true
        rawSql: |
          SELECT
            max(metric.capacity) FILTER (WHERE metric.type = 'STORAGE_AMOUNT') AS "Capacity",
            avg(metric.current) FILTER (WHERE metric.type = 'STORAGE_PROVISIONED') AS "Provisioned Used",
            avg(metric.current) FILTER (WHERE metric.type = 'STORAGE_AMOUNT') AS "Used",
            avg(metric.current) FILTER (WHERE metric.type = 'STORAGE_ACCESS') AS "IOPS",
            avg(metric.current) FILTER (WHERE metric.type = 'STORAGE_LATENCY') AS "Latency"
          FROM metric
          JOIN entity as e ON
            e.type = 'STORAGE'
            and e.oid = metric.entity_oid
          WHERE
            e.oid = ${Datastore:raw} + 0
            and ($__timeFrom(),$__timeTo()) OVERLAPS (e.first_seen, e.last_seen)
            and metric.time BETWEEN timestamptz $__timeFrom() AND $__timeTo()
        refId: A
        select:
          - - params:
                - value
              type: column
        table: metric
        timeColumn: '"time"'
        timeColumnType: timestamptz
        where:
          - name: $__timeFilter
            params: []
            type: macro
    timeFrom:
    timeShift:
    title: Datastore Summary
    transform: table
    type: table-old
  - columns: []
    datasource: $DB
    description: Average, min and max values datastore utilization, IOPS and latency.
    fieldConfig:
      defaults:
        custom: {}
      overrides: []
    fontSize: 100%
    gridPos:
      h: 5
      w: 15
      x: 0
      y: 4
    id: 19
    pageSize:
    showHeader: true
    sort:
      col:
      desc: false
    styles:
      - $$hashKey: object:464
        alias: ''
        align: left
        colorMode:
        colors:
          - rgba(245, 54, 54, 0.9)
          - rgba(237, 129, 40, 0.89)
          - rgba(50, 172, 45, 0.97)
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        mappingType: 1
        pattern: IOPS
        thresholds: []
        type: number
        unit: iops
      - $$hashKey: object:465
        alias: ''
        align: left
        colorMode:
        colors:
          - rgba(245, 54, 54, 0.9)
          - rgba(237, 129, 40, 0.89)
          - rgba(50, 172, 45, 0.97)
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        mappingType: 1
        pattern: Latency
        thresholds: []
        type: number
        unit: ms
      - $$hashKey: object:466
        alias: ''
        align: auto
        colorMode:
        colors:
          - rgba(245, 54, 54, 0.9)
          - rgba(237, 129, 40, 0.89)
          - rgba(50, 172, 45, 0.97)
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        mappingType: 1
        pattern: order
        thresholds: []
        type: hidden
        unit: short
      - $$hashKey: object:467
        alias: ''
        align: left
        colorMode:
        colors:
          - rgba(245, 54, 54, 0.9)
          - rgba(237, 129, 40, 0.89)
          - rgba(50, 172, 45, 0.97)
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        mappingType: 1
        pattern: Utilization
        thresholds: []
        type: number
        unit: percentunit
      - $$hashKey: object:468
        alias: ''
        align: left
        colorMode:
        colors:
          - rgba(245, 54, 54, 0.9)
          - rgba(237, 129, 40, 0.89)
          - rgba(50, 172, 45, 0.97)
        decimals: 2
        pattern: /.*/
        thresholds: []
        type: number
        unit: mbytes
    targets:
      - format: table
        group: []
        metricColumn: none
        rawQuery: true
        rawSql: |
          SELECT
            unnest(array['1','2','3']) as "order",
            unnest(array['AVG','MIN','MAX']) as "Aggregation",
            unnest(array[
              avg(metric.utilization) FILTER (WHERE metric.type = 'STORAGE_AMOUNT'),
              min(metric.utilization) FILTER (WHERE metric.type = 'STORAGE_AMOUNT'),
              max(metric.Utilization) FILTER (WHERE metric.type = 'STORAGE_AMOUNT')
            ]) AS "Utilization",
            unnest(array[
              avg(metric.current) FILTER (WHERE metric.type = 'STORAGE_ACCESS'),
              min(metric.current) FILTER (WHERE metric.type = 'STORAGE_ACCESS'),
              max(metric.current) FILTER (WHERE metric.type = 'STORAGE_ACCESS')
            ]) AS "IOPS",
            unnest(array[
              avg(metric.current) FILTER (WHERE metric.type = 'STORAGE_LATENCY'),
              min(metric.current) FILTER (WHERE metric.type = 'STORAGE_LATENCY'),
              max(metric.current) FILTER (WHERE metric.type = 'STORAGE_LATENCY')
              ]) AS "Latency"
          FROM metric
          JOIN entity as e on
            e.type = 'STORAGE'
            and e.oid = metric.entity_oid
          WHERE
            metric.time BETWEEN timestamptz $__timeFrom() AND $__timeTo()
            AND ($__timeFrom(),$__timeTo()) OVERLAPS (e.first_seen, e.last_seen)
            AND e.oid = ${Datastore:raw} + 0
          ORDER BY "order" asc
        refId: A
        select:
          - - params:
                - value
              type: column
        table: metric
        timeColumn: '"time"'
        timeColumnType: timestamptz
        where:
          - name: $__timeFilter
            params: []
            type: macro
    timeFrom:
    timeShift:
    title: Datastore Resource Utilization
    transform: table
    type: table-old
  - columns: []
    datasource: $DB
    description: Storage used, average and max IOPS and latency for VMs consuming resources
      from datastore.
    fieldConfig:
      defaults:
        custom: {}
      overrides: []
    fontSize: 100%
    gridPos:
      h: 10
      w: 24
      x: 0
      y: 9
    id: 21
    pageSize:
    showHeader: true
    sort:
      col: 5
      desc: true
    styles:
      - $$hashKey: object:96
        alias: Time
        align: auto
        dateFormat: YYYY-MM-DD HH:mm:ss
        pattern: Time
        type: date
      - $$hashKey: object:97
        alias: ''
        align: left
        colorMode:
        colors:
          - rgba(245, 54, 54, 0.9)
          - rgba(237, 129, 40, 0.89)
          - rgba(50, 172, 45, 0.97)
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        mappingType: 1
        pattern: VM Name
        thresholds: []
        type: string
        unit: short
      - $$hashKey: object:98
        alias: ''
        align: auto
        colorMode:
        colors:
          - rgba(245, 54, 54, 0.9)
          - rgba(237, 129, 40, 0.89)
          - rgba(50, 172, 45, 0.97)
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        mappingType: 1
        pattern: Storage Used
        thresholds: []
        type: number
        unit: mbytes
      - $$hashKey: object:99
        alias: ''
        align: auto
        colorMode:
        colors:
          - rgba(245, 54, 54, 0.9)
          - rgba(237, 129, 40, 0.89)
          - rgba(50, 172, 45, 0.97)
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        mappingType: 1
        pattern: /.*IOPS/
        thresholds: []
        type: number
        unit: iops
      - $$hashKey: object:100
        alias: ''
        align: auto
        colorMode:
        colors:
          - rgba(245, 54, 54, 0.9)
          - rgba(237, 129, 40, 0.89)
          - rgba(50, 172, 45, 0.97)
        dateFormat: YYYY-MM-DD HH:mm:ss
        decimals: 2
        mappingType: 1
        pattern: /.*Latency/
        thresholds: []
        type: number
        unit: ms
      - $$hashKey: object:101
        alias: ''
        align: right
        colorMode:
        colors:
          - rgba(245, 54, 54, 0.9)
          - rgba(237, 129, 40, 0.89)
          - rgba(50, 172, 45, 0.97)
        decimals: 2
        pattern: /.*/
        thresholds: []
        type: number
        unit: short
    targets:
      - format: table
        group: []
        metricColumn: none
        rawQuery: true
        rawSql: |-
          WITH sub AS (
            SELECT
                e.oid as oid,
                e.name as name,
                m.type as type,
                m.consumed as value
            FROM
                metric m
            JOIN scope s ON
                m.entity_oid = s.seed_oid
                AND m.time BETWEEN s.start AND s.finish
            JOIN entity e ON
                m.entity_oid = e.oid
            WHERE
                -- fixed conditions
                m.type in ('STORAGE_LATENCY','STORAGE_ACCESS','STORAGE_AMOUNT')
                AND s.scoped_type = 'VIRTUAL_MACHINE'
                -- conditions involving dashboard vars
                AND m.time BETWEEN timestamptz $__timeFrom() AND $__timeTo()
                AND ($__timeFrom(),$__timeTo()) OVERLAPS (s.start, s.finish)
                AND s.scoped_oid = ${Datastore:raw} + 0
            GROUP BY m.time, e.oid, e.name, m.type, m.consumed
          )
          SELECT
              max(sub.name) as "VM Name",
              max(sub.value) FILTER (WHERE sub.type = 'STORAGE_AMOUNT') AS "Storage Used",
              avg(sub.value) FILTER (WHERE sub.type = 'STORAGE_ACCESS') AS "Avg IOPS",
              max(sub.value) FILTER (WHERE sub.type = 'STORAGE_ACCESS') AS "Max IOPS",
              avg(sub.value) FILTER (WHERE sub.type = 'STORAGE_LATENCY') AS "Avg Latency",
              max(sub.value) FILTER (WHERE sub.type = 'STORAGE_LATENCY') AS "Max Latency"
          FROM sub
          GROUP BY sub.oid
        refId: A
        select:
          - - params:
                - value
              type: column
        timeColumn: time
        where:
          - name: $__timeFilter
            params: []
            type: macro
    timeFrom:
    timeShift:
    title: Virtual Machine Summary
    transform: table
    type: table-old
  - datasource: $DB
    fieldConfig:
      defaults:
        custom:
          align:
        mappings: []
        thresholds:
          mode: absolute
          steps:
            - color: green
              value:
            - color: red
              value: 80
      overrides:
        - matcher:
            id: byName
            options: File Size
          properties:
            - id: unit
              value: kbytes
            - id: custom.width
              value: 102
        - matcher:
            id: byName
            options: File Path
          properties:
            - id: custom.width
              value: 547
    gridPos:
      h: 14
      w: 24
      x: 0
      y: 19
    id: 23
    options:
      showHeader: true
      sortBy: []
    pluginVersion: 7.0.1
    targets:
      - format: table
        group: []
        metricColumn: none
        rawQuery: true
        rawSql: |-
          SELECT
            path as "File Path",
            file_size_kb as "File Size",
            modification_time as "Last Modified Time"
          FROM wasted_file
          WHERE storage_oid = ${Datastore:raw} + 0
          ORDER BY 2 DESC
        refId: A
        select:
          - - params:
                - current
              type: column
        table: metric
        timeColumn: '"time"'
        timeColumnType: timestamp
        where:
          - name: $__timeFilter
            params: []
            type: macro
    timeFrom:
    timeShift:
    title: Wasted Files on Datastore + 0
    type: table
refresh: false
schemaVersion: 25
style: dark
tags: []
templating:
  list:
    - hide: 2
      includeAll: false
      label:
      multi: false
      name: DB
      options: []
      query: postgres
      queryValue: ''
      refresh: 1
      regex: ''
      skipUrlSync: false
      type: datasource
    - allValue:
      datasource: $DB
      definition: |-
        SELECT name as __text, oid as __value
        FROM entity
        WHERE ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)
          AND entity.type = 'STORAGE'
        GROUP BY name, oid
        ORDER BY 1
      hide: 0
      includeAll: false
      label:
      multi: false
      name: Datastore
      options: []
      query: |-
        SELECT name as __text, oid as __value
        FROM entity
        WHERE ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)
          AND entity.type = 'STORAGE'
        GROUP BY name, oid
        ORDER BY 1
      refresh: 2
      regex: ''
      skipUrlSync: false
      sort: 0
      tagValuesQuery: ''
      tags: []
      tagsQuery: ''
      type: query
      useTags: false
timepicker:
  refresh_intervals:
    - 10s
    - 30s
    - 1m
    - 5m
    - 15m
    - 30m
    - 1h
    - 2h
    - 1d
timezone: ''
title: Datastore Summary
uid: datastore_summary
