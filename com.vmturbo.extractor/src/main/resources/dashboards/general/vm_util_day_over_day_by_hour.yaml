annotations:
  list:
  - builtIn: 1
    datasource: -- Grafana --
    enable: true
    hide: true
    iconColor: rgba(0, 211, 255, 1)
    name: Annotations & Alerts
    type: dashboard
description: This dashboard compares average hourly utilization measurements for virtual
  machines day-over-day for the two consecutive days. All VMs in the selected group
  are included in the averages.
editable: false
gnetId:
graphTooltip: 1
iteration: 1597070550382
links: []
panels:
- aliasColors: {}
  bars: false
  dashLength: 10
  dashes: false
  datasource: $DB
  decimals: 2
  description: Average Virtual Memory utilization for VM's
  fieldConfig:
    defaults:
      custom: {}
    overrides: []
  fill: 1
  fillGradient: 0
  gridPos:
    h: 11
    w: 24
    x: 0
    y: 0
  hiddenSeries: false
  id: 2
  legend:
    alignAsTable: true
    avg: true
    current: false
    max: false
    min: false
    rightSide: true
    show: true
    total: false
    values: true
  lines: true
  linewidth: 2
  nullPointMode: 'null'
  options:
    dataLinks: []
  percentage: false
  pointradius: 2
  points: true
  renderer: flot
  seriesOverrides:
  - alias: Previous Day
    color: rgba(232, 0, 6, 0.5)
    dashes: true
    fill: 0
  - alias: /Ending/
    color: '#56A64B'
  spaceLength: 10
  stack: false
  steppedLine: false
  targets:
  - format: time_series
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      WITH vms as (
        ${VMSelector:raw}
      ),
      data as (
        SELECT m.time, avg(m.utilization) AS avg_util
        FROM  metric m, vms v
        WHERE m.entity_oid = v.oid
        AND m.type = 'VMEM'
        AND m.provider_oid IS NULL
        AND m.time BETWEEN $__timeFrom()::timestamptz - interval '24 hour' AND date_trunc('hour', $__timeTo()::timestamptz)
        AND ${ScopeCondition:raw}
        GROUP BY 1
      )
      SELECT
          INTERVAL '1 HOUR'  + CASE
            WHEN time BETWEEN date_trunc('hour', $__timeFrom()::TIMESTAMPTZ - interval '24 HOUR')
                AND date_trunc('hour', $__timeTo()::TIMESTAMPTZ - interval '24 HOUR')
              THEN date_trunc('HOUR', time + interval '24 HOUR')
            ELSE date_trunc('HOUR', time)
          END as "time",
          CASE
            WHEN time BETWEEN $__timeFrom()::TIMESTAMPTZ - interval '24 HOUR'
                AND $__timeTo()::TIMESTAMPTZ - interval '24 HOUR'
              THEN 'Previous Day'
            ELSE 'Ending ' || DATE($__timeTo()::TIMESTAMPTZ)::TEXT
          END as metric,
          avg(avg_util)
        FROM data
        GROUP BY 1, 2
        ORDER BY 1
    refId: A
    select:
    - - params:
        - current
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamp
    where:
    - name: $__timeFilter
      params: []
      type: macro
  thresholds: []
  timeFrom:
  timeRegions: []
  timeShift:
  title: VM Avg VMem Utilization
  tooltip:
    shared: true
    sort: 0
    value_type: individual
  type: graph
  xaxis:
    buckets:
    mode: time
    name:
    show: true
    values: []
  yaxes:
  - decimals:
    format: percentunit
    label:
    logBase: 1
    max:
    min:
    show: true
  - format: short
    label:
    logBase: 1
    max:
    min:
    show: true
  yaxis:
    align: false
    alignLevel:
- aliasColors: {}
  bars: false
  dashLength: 10
  dashes: false
  datasource: $DB
  decimals: 2
  description: Average Virtual CPU utilization for VM's
  fieldConfig:
    defaults:
      custom: {}
    overrides: []
  fill: 1
  fillGradient: 0
  gridPos:
    h: 9
    w: 24
    x: 0
    y: 11
  hiddenSeries: false
  id: 4
  legend:
    alignAsTable: true
    avg: true
    current: false
    max: false
    min: false
    rightSide: true
    show: true
    total: false
    values: true
  lines: true
  linewidth: 2
  nullPointMode: 'null'
  options:
    dataLinks: []
  percentage: false
  pointradius: 2
  points: true
  renderer: flot
  seriesOverrides:
  - alias: Previous Day
    color: rgba(232, 0, 6, 0.5)
    dashes: true
    fill: 0
  - alias: /Ending/
    color: '#56A64B'
  spaceLength: 10
  stack: false
  steppedLine: false
  targets:
  - format: time_series
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      WITH vms as (
        ${VMSelector:raw}
      ),
      data as (
        SELECT m.time, avg(m.utilization) AS avg_util
        FROM  metric m, vms v
        WHERE m.entity_oid = v.oid
        AND m.type = 'VCPU'
        AND m.provider_oid IS NULL
        AND m.time BETWEEN $__timeFrom()::timestamptz - interval '24 hour' AND date_trunc('hour', $__timeTo()::timestamptz)
        AND ${ScopeCondition:raw}
        GROUP BY 1
      )
       SELECT
          INTERVAL '1 HOUR'  + CASE
            WHEN time BETWEEN date_trunc('hour', $__timeFrom()::TIMESTAMPTZ - interval '24 HOUR')
                AND date_trunc('hour', $__timeTo()::TIMESTAMPTZ - interval '24 HOUR')
              THEN date_trunc('HOUR', time + interval '24 HOUR')
            ELSE date_trunc('HOUR', time)
          END as "time",
          CASE
            WHEN time BETWEEN $__timeFrom()::TIMESTAMPTZ - interval '24 HOUR'
                AND $__timeTo()::TIMESTAMPTZ - interval '24 HOUR'
              THEN 'Previous Day'
            ELSE 'Ending ' || DATE($__timeTo()::TIMESTAMPTZ)::TEXT
          END as metric,
          avg(avg_util)
        FROM data
        GROUP BY 1, 2
        ORDER BY 1
    refId: A
    select:
    - - params:
        - current
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamp
    where:
    - name: $__timeFilter
      params: []
      type: macro
  thresholds: []
  timeFrom:
  timeRegions: []
  timeShift:
  title: VM Avg VCPU Utilization
  tooltip:
    shared: true
    sort: 0
    value_type: individual
  type: graph
  xaxis:
    buckets:
    mode: time
    name:
    show: true
    values: []
  yaxes:
  - decimals:
    format: percentunit
    label:
    logBase: 1
    max:
    min:
    show: true
  - format: short
    label:
    logBase: 1
    max:
    min:
    show: true
  yaxis:
    align: false
    alignLevel:
schemaVersion: 25
style: dark
tags: []
templating:
  list:
  - hide: 2
    includeAll: false
    label:
    multi: false
    name: DB
    options: []
    query: postgres
    queryValue: ''
    refresh: 1
    regex: ''
    skipUrlSync: false
    type: datasource
  - allValue:
    datasource: $DB
    definition: |-
      SELECT name as __text,
             oid as __value
      FROM entity
      WHERE entity.type = 'GROUP'
      AND ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)
      AND attrs -> 'member_types' ? 'VIRTUAL_MACHINE'
      GROUP BY name, oid
      ORDER BY 1
    hide: 0
    includeAll: true
    label:
    multi: false
    name: Group
    options: []
    query: |-
      SELECT name as __text,
             oid as __value
      FROM entity
      WHERE entity.type = 'GROUP'
      AND ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)
      AND attrs -> 'member_types' ? 'VIRTUAL_MACHINE'
      GROUP BY name, oid
      ORDER BY 1
    refresh: 2
    regex: ''
    skipUrlSync: false
    sort: 0
    tagValuesQuery: ''
    tags: []
    tagsQuery: ''
    type: query
    useTags: false
  - allValue:
    datasource: $DB
    definition: |-
      SELECT CASE
         WHEN '${Group:csv}' = '0' THEN
           'SELECT oid from entity where type=''VIRTUAL_MACHINE'''
         ELSE concat(
           'SELECT distinct s.scoped_oid as oid, start, finish ',
           'FROM scope s ',
           'WHERE s.scoped_type = ''VIRTUAL_MACHINE'' ',
           '  AND ('$__timeFrom()'::timestamptz - interval ''24 hour'', date_trunc(''hour'', '$__timeTo()'::timestamptz)) ',
                'OVERLAPS (s.start, s.finish) ',
           '  AND s.seed_oid IN (SELECT * FROM unnest(ARRAY[${Group:csv}]::bigint[]))')
         END
    hide: 2
    includeAll: true
    label:
    multi: false
    name: VMSelector
    options: []
    query: |-
      SELECT CASE
         WHEN '${Group:csv}' = '0' THEN
           'SELECT oid from entity where type=''VIRTUAL_MACHINE'''
         ELSE concat(
           'SELECT distinct s.scoped_oid as oid, start, finish ',
           'FROM scope s ',
           'WHERE s.scoped_type = ''VIRTUAL_MACHINE'' ',
           '  AND ('$__timeFrom()'::timestamptz - interval ''24 hour'', date_trunc(''hour'', '$__timeTo()'::timestamptz)) ',
                'OVERLAPS (s.start, s.finish) ',
           '  AND s.seed_oid IN (SELECT * FROM unnest(ARRAY[${Group:csv}]::bigint[]))')
         END
    refresh: 2
    regex: ''
    skipUrlSync: false
    sort: 0
    tagValuesQuery: ''
    tags: []
    tagsQuery: ''
    type: query
    useTags: false
  - allValue:
    datasource: $DB
    definition: |-
      SELECT CASE
         WHEN '${Group:csv}' = '0' THEN 'true'
         ELSE 'm.time BETWEEN v.start AND v.finish'
      END
    hide: 2
    includeAll: true
    label:
    multi: false
    name: ScopeCondition
    options: []
    query: |-
      SELECT CASE
         WHEN '${Group:csv}' = '0' THEN 'true'
         ELSE 'm.time BETWEEN v.start AND v.finish'
      END
    refresh: 2
    regex: ''
    skipUrlSync: false
    sort: 0
    tagValuesQuery: ''
    tags: []
    tagsQuery: ''
    type: query
    useTags: false
timepicker:
  refresh_intervals:
  - 10s
  - 30s
  - 1m
  - 5m
  - 15m
  - 30m
  - 1h
  - 2h
  - 1d
timezone: ''
title: Virtual Machine Utilization Day over Day By Hour
uid: vm_util_day_over_day_by_hour
