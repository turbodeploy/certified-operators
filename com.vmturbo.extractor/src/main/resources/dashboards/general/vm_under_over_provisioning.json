{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "This report shows Virtual Machines that are over or under provisioned, as indicated by their utilization levels of allocated resources.",
  "editable": false,
  "gnetId": null,
  "graphTooltip": 0,
  "iteration": 1594313448158,
  "links": [],
  "panels": [
    {
      "columns": [],
      "datasource": "$DB",
      "description": "Active VMs with CPU or Memory utilization peaks that are below 10%. Values indicating over- provisioning are highlighted with red text. ",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fontSize": "100%",
      "gridPos": {
        "h": 15,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "pageSize": 50,
      "showHeader": true,
      "sort": {
        "col": null,
        "desc": false
      },
      "styles": [
        {
          "$$hashKey": "object:279",
          "alias": "Time",
          "align": "auto",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "date"
        },
        {
          "$$hashKey": "object:280",
          "alias": "",
          "align": "right",
          "colorMode": "value",
          "colors": [
            "#C4162A",
            "rgb(1, 3, 0)",
            "rgb(1, 3, 0)"
          ],
          "decimals": 2,
          "pattern": "/.*Peak/",
          "thresholds": [
            "0.1"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "$$hashKey": "object:281",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "/(VMEM|VCPU) (Avg)/",
          "thresholds": [],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "$$hashKey": "object:282",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "VMEM Capacity",
          "thresholds": [],
          "type": "number",
          "unit": "deckbytes"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with vms_by_cluster as (\n    select distinct on (e.oid) g.name as cluster_name, e.oid as vm_oid, e.name as vm_name\n\tfrom entity g\n\tjoin entity e on g.\"type\" = 'COMPUTE_CLUSTER' and\n\t     array[g.oid] <@ e.scope\n\t     and e.\"type\" = 'VIRTUAL_MACHINE' and e.state = 'POWERED_ON'\n\t     and (e.first_seen, e.last_seen) overlaps ($__timeFrom(),$__timeTo()))\nselect max(cluster_name) as \"Cluster name\",\n       max(vm_name) as \"VM name\",\n       AVG(metric.capacity) filter (where metric.type = 'VMEM') as \"VMEM Capacity\",\n       AVG(metric.utilization) filter (where metric.type = 'VMEM') as \"VMEM Avg\",\n       max(metric.utilization) filter (where metric.type = 'VMEM') as \"VMEM Peak\",\n       AVG(metric.capacity) filter (where metric.type = 'VCPU') as \"VCPU Capacity\",\n       AVG(metric.utilization) filter (where metric.type = 'VCPU') as \"VCPU Avg\",\n       max(metric.utilization) filter (where metric.type = 'VCPU') as \"VCPU Peak\"\nfrom vms_by_cluster\njoin metric on\n       metric.entity_oid = vm_oid and \n       metric.\"type\" in ('VMEM', 'VCPU') and provider_oid isnull and $__timeFilter(metric.\"time\")\ngroup by vm_oid\nhaving max(metric.utilization) filter (where metric.type = 'VMEM') < 0.1 OR\n       max(metric.utilization) filter (where metric.type = 'VCPU') < 0.1\n",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Over-provisioned VMs",
      "transform": "table",
      "type": "table-old"
    },
    {
      "columns": [],
      "datasource": "$DB",
      "description": "Active VMs with CPU or Memory utilization averages that are above 85%. Values indicating under-provisioning are highlighted in red text.",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fontSize": "100%",
      "gridPos": {
        "h": 15,
        "w": 24,
        "x": 0,
        "y": 15
      },
      "id": 7,
      "pageSize": 50,
      "showHeader": true,
      "sort": {
        "col": 7,
        "desc": true
      },
      "styles": [
        {
          "$$hashKey": "object:511",
          "alias": "Time",
          "align": "auto",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "date"
        },
        {
          "$$hashKey": "object:512",
          "alias": "",
          "align": "right",
          "colorMode": "value",
          "colors": [
            "rgb(1, 3, 0)",
            "#E02F44",
            "#E02F44"
          ],
          "decimals": 2,
          "pattern": "/.*Peak/",
          "thresholds": [
            "0.85"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "$$hashKey": "object:513",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "/(VMEM|VCPU) (Avg)/",
          "thresholds": [],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "$$hashKey": "object:514",
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "VMEM Capacity",
          "thresholds": [],
          "type": "number",
          "unit": "deckbytes"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with vms_by_cluster as (\n    select distinct on (e.oid) g.name as cluster_name, e.oid as vm_oid, e.name as vm_name\n\tfrom entity g\n\tjoin entity e on g.\"type\" = 'COMPUTE_CLUSTER' and\n\t     array[g.oid] <@ e.scope\n\t     and e.\"type\" = 'VIRTUAL_MACHINE' and e.state = 'POWERED_ON'\n\t     and (e.first_seen, e.last_seen) overlaps ($__timeFrom(),$__timeTo()))\nselect max(cluster_name) as \"Cluster name\",\n       max(vm_name) as \"VM name\",\n       AVG(metric.capacity) filter (where metric.type = 'VMEM') as \"VMEM Capacity\",\n       AVG(metric.utilization) filter (where metric.type = 'VMEM') as \"VMEM Avg\",\n       max(metric.utilization) filter (where metric.type = 'VMEM') as \"VMEM Peak\",\n       AVG(metric.capacity) filter (where metric.type = 'VCPU') as \"VCPU Capacity\",\n       AVG(metric.utilization) filter (where metric.type = 'VCPU') as \"VCPU Avg\",\n       max(metric.utilization) filter (where metric.type = 'VCPU') as \"VCPU Peak\"\nfrom vms_by_cluster\njoin metric on\n       metric.entity_oid = vm_oid and \n       metric.\"type\" in ('VMEM', 'VCPU') and provider_oid isnull and $__timeFilter(metric.\"time\")\ngroup by vm_oid\nhaving max(metric.utilization) filter (where metric.type = 'VMEM') > 0.85 OR\n       max(metric.utilization) filter (where metric.type = 'VCPU') > 0.85\n",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Under-provisioned VMs",
      "transform": "table",
      "type": "table-old"
    },
    {
      "columns": [],
      "datasource": "$DB",
      "description": "Group/Cluster information allowing individual VM peaks to be compared with the average of all of the peaks of the VMs in their corresponding cluster.",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fontSize": "100%",
      "gridPos": {
        "h": 13,
        "w": 24,
        "x": 0,
        "y": 30
      },
      "id": 6,
      "pageSize": 50,
      "showHeader": true,
      "sort": {
        "col": 2,
        "desc": true
      },
      "styles": [
        {
          "alias": "",
          "align": "right",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "pattern": "/Avg.*/",
          "thresholds": [],
          "type": "number",
          "unit": "percentunit"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with vms_by_cluster as (\n  select distinct on(e.oid) g.name as cluster_name, e.oid as vm_oid\n\tfrom entity g\n\tjoin entity e on g.\"type\" = 'COMPUTE_CLUSTER' and array[g.oid] <@ e.scope and e.\"type\" = 'VIRTUAL_MACHINE'\n\t  \t\t\t\tand e.\"type\" = 'VIRTUAL_MACHINE' and e.state = 'POWERED_ON'\n\t  \t\t\t\tand (e.first_seen, e.last_seen) overlaps ($__timeFrom(),$__timeTo())),\nvm_peaks as (\n    SELECT MAX(cluster_name) as cluster_name,\n\t       MAX(metric.utilization) filter (where metric.type = 'VMEM') as vmem_peak,\n\t       MAX(metric.utilization) filter (where metric.type = 'VCPU') as vcpu_peak\n\tFROM vms_by_cluster\n\tjoin metric on vm_oid = metric.entity_oid \n\t      and $__timeFilter(metric.\"time\")\n\t      and metric.\"type\" in ('VMEM', 'VCPU')\n\t      and provider_oid isnull\n\tgroup by vm_oid)\nselect cluster_name as \"Cluster\", avg(vcpu_peak) as \"Avg(Peak VCPU)\", avg(vmem_peak) as \"Avg(Peak VMem)\"\nfrom vm_peaks\ngroup by cluster_name\n\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Clusters with Average Peaks",
      "transform": "table",
      "type": "table-old"
    }
  ],
  "refresh": false,
  "schemaVersion": 25,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "DB",
        "options": [],
        "query": "postgres",
        "queryValue": "",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      }
    ]
  },
  "timepicker": {
    "refresh_intervals": [
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "VM Over or Under Provisioning",
  "uid": "vm_under_over_provisioning"
}
