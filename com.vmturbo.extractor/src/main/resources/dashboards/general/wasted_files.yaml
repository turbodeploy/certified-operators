---
__inputs: []
__requires:
- type: panel
  id: bargauge
  name: Bar gauge
  version: ""
- type: grafana
  id: grafana
  name: Grafana
  version: 7.3.8
- type: datasource
  id: postgres
  name: PostgreSQL
  version: 1.0.0
- type: panel
  id: table
  name: Table
  version: ""
- type: panel
  id: text
  name: Text
  version: ""
annotations:
  list:
  - builtIn: 1
    datasource: -- Grafana --
    enable: true
    hide: true
    iconColor: rgba(0, 211, 255, 1)
    name: Annotations & Alerts
    type: dashboard
description: This dashboard displays information on data stores organized by wasted
  storage amounts. Wasted amounts are those that are allocated on a data store, and
  occupy space, but are not associated with a virtual machine.
editable: true
gnetId: null
graphTooltip: 0
iteration: 1622831307339
links: []
panels:
- datasource: $DB
  fieldConfig:
    defaults:
      custom: {}
      links:
      - title: Scope Dashboard to ${__field.name}
        url: /d/wasted_files?var-Datastore=${__field.name}&var-MinFileSize=${MinFileSize}
      mappings: []
      min: 0
      thresholds:
        mode: absolute
        steps:
        - color: light-red
          value: null
      unit: kbytes
    overrides: []
  gridPos:
    h: 9
    w: 24
    x: 0
    y: 0
  id: 2
  options:
    displayMode: basic
    orientation: vertical
    reduceOptions:
      calcs:
      - mean
      fields: ""
      limit: 10
      values: true
    showUnfilled: false
  pluginVersion: 7.3.8
  targets:
  - format: time_series
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      SELECT now() as time,
             storage_name as "Datastore",
             SUM(file_size_kb) as "Wasted Storage Amount"
        FROM wasted_file
       WHERE ARRAY[storage_oid]::text[] && Array[$Datastore]::text[]
         AND (file_size_kb >= $MinFileSize OR $MinFileSize = 0)
       GROUP BY 1, 2
       ORDER BY 3 DESC
    refId: A
    select:
    - - params:
        - current
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamp
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom: null
  timeShift: null
  title: Total Wasted Amount Per Datastore
  type: bargauge
- datasource: $DB
  fieldConfig:
    defaults:
      custom:
        align: null
        filterable: false
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
      unit: kbytes
    overrides:
    - matcher:
        id: byName
        options: Wasted File Count
      properties:
      - id: unit
        value: none
    - matcher:
        id: byName
        options: Datastore
      properties:
      - id: links
        value:
        - title: Scope Dashboard to ${__value.text}
          url: /d/wasted_files?var-Datastore=${__value.text}&var-MinFileSize=${MinFileSize}
  gridPos:
    h: 10
    w: 15
    x: 0
    y: 9
  id: 4
  options:
    showHeader: true
  pluginVersion: 7.3.8
  targets:
  - format: table
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      SELECT storage_name as "Datastore",
             SUM(file_size_kb) as "Wasted Storage Amount",
             COUNT(file_size_kb) as "Wasted File Count"
        FROM wasted_file
       WHERE ARRAY[storage_oid]::text[] && Array[$Datastore]::text[]
         AND (file_size_kb >= $MinFileSize OR $MinFileSize = 0)
       GROUP BY storage_oid, storage_name
       ORDER BY 2 DESC;
    refId: A
    select:
    - - params:
        - current
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamp
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom: null
  timeShift: null
  title: Total Wasted Storage Per Datastore
  type: table
- datasource: $DB
  fieldConfig:
    defaults:
      custom:
        align: null
      links:
      - title: Scope Dashboard to ${__field.name}
        url: /d/wasted_files?var-Datastore=${__field.name}&var-MinFileSize=${MinFileSize}
      mappings: []
      min: 0
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
    overrides: []
  gridPos:
    h: 10
    w: 9
    x: 15
    y: 9
  id: 8
  options:
    displayMode: basic
    orientation: horizontal
    reduceOptions:
      calcs:
      - mean
      fields: ""
      limit: 5
      values: true
    showUnfilled: true
  pluginVersion: 7.3.8
  targets:
  - format: time_series
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      SELECT now() as time,
             storage_name as "Datastore",
             COUNT(*) as "Wasted File Count"
        FROM wasted_file
       WHERE ARRAY[storage_oid]::text[] && Array[$Datastore]::text[]
         AND (file_size_kb >= $MinFileSize OR $MinFileSize = 0)
       GROUP BY 1, storage_oid, storage_name
       ORDER BY 3 DESC
    refId: A
    select:
    - - params:
        - current
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamp
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom: null
  timeShift: null
  title: Wasted File Count Per Datastore
  type: bargauge
- datasource: null
  fieldConfig:
    defaults:
      custom: {}
    overrides: []
  gridPos:
    h: 2
    w: 24
    x: 0
    y: 19
  id: 7
  options:
    content: |-
      <p style="text-align: center; color: red; background-color: white">
      The information in this report is correct as of the time the
      data was collected. The data can be up to one day older than the date
      of report generation. Before you delete files based on this report,
      verify that the files are indeed unused.</p>
    mode: html
  pluginVersion: 7.3.8
  timeFrom: null
  timeShift: null
  title: Caution
  type: text
- datasource: $DB
  fieldConfig:
    defaults:
      custom:
        align: null
        filterable: false
      mappings: []
      thresholds:
        mode: absolute
        steps:
        - color: green
          value: null
        - color: red
          value: 80
    overrides:
    - matcher:
        id: byName
        options: File Size
      properties:
      - id: custom.align
        value: center
      - id: unit
        value: kbytes
    - matcher:
        id: byName
        options: Datastore
      properties:
      - id: custom.width
        value: 207
    - matcher:
        id: byName
        options: File Path
      properties:
      - id: custom.width
        value: 422
    - matcher:
        id: byName
        options: Last Modified Time
      properties:
      - id: custom.align
        value: center
  gridPos:
    h: 12
    w: 24
    x: 0
    y: 21
  id: 6
  options:
    showHeader: true
    sortBy: []
  pluginVersion: 7.3.8
  targets:
  - format: table
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      SELECT storage_name as "Datastore",
             path as "File Path",
             coalesce(file_size_kb::text, '-') as "File Size",
             coalesce(to_char(modification_time, 'DD-MON-YYYY HH24:MI:SS TZH:TZM'), '-') as "Last Modified Time"
        FROM wasted_file
       WHERE (file_size_kb >= $MinFileSize OR $MinFileSize = 0)
         AND ARRAY[storage_oid]::text[] && Array[$Datastore]::text[]
       ORDER BY 3 DESC
    refId: A
    select:
    - - params:
        - current
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamp
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom: null
  timeShift: null
  title: Individual Wasted Files
  type: table
refresh: false
schemaVersion: 26
style: dark
tags: []
templating:
  list:
  - current:
      selected: false
      text: Turbo Timescale
      value: Turbo Timescale
    error: null
    hide: 2
    includeAll: false
    label: null
    multi: false
    name: DB
    options: []
    query: postgres
    queryValue: ""
    refresh: 1
    regex: ""
    skipUrlSync: false
    type: datasource
  - allValue: null
    current: {}
    datasource: $DB
    definition: |-
      SELECT DISTINCT storage_name as __text,
             storage_oid as __value
      FROM wasted_file
      ORDER BY storage_name
    error: null
    hide: 0
    includeAll: true
    label: null
    multi: true
    name: Datastore
    options: []
    query: |-
      SELECT DISTINCT storage_name as __text,
             storage_oid as __value
      FROM wasted_file
      ORDER BY storage_name
    refresh: 2
    regex: ""
    skipUrlSync: false
    sort: 0
    tagValuesQuery: ""
    tags: []
    tagsQuery: ""
    type: query
    useTags: false
  - allValue: null
    current: {}
    datasource: $DB
    definition: |-
      SELECT  col || ' MB' as __text,
                      row as __value
      FROM (
              VALUES (0,0),
                         (1,1024)
              ) AS q (col, row)
      UNION
      SELECT generate_series || ' MB' as __text,
             generate_series*1024 as __value
        FROM generate_series(10,100,10)
       ORDER BY __value
    error: null
    hide: 0
    includeAll: false
    label: null
    multi: false
    name: MinFileSize
    options: []
    query: |-
      SELECT  col || ' MB' as __text,
                      row as __value
      FROM (
              VALUES (0,0),
                         (1,1024)
              ) AS q (col, row)
      UNION
      SELECT generate_series || ' MB' as __text,
             generate_series*1024 as __value
        FROM generate_series(10,100,10)
       ORDER BY __value
    refresh: 2
    regex: ""
    skipUrlSync: false
    sort: 0
    tagValuesQuery: ""
    tags: []
    tagsQuery: ""
    type: query
    useTags: false
time:
  from: now-6h
  to: now
timepicker:
  hidden: true
  refresh_intervals:
  - 10s
  - 30s
  - 1m
  - 5m
  - 15m
  - 30m
  - 1h
  - 2h
  - 1d
timezone: ''
title: Wasted Storage Files
uid: wasted_files
