annotations:
  list:
  - builtIn: 1
    datasource: -- Grafana --
    enable: true
    hide: true
    iconColor: rgba(0, 211, 255, 1)
    name: Annotations & Alerts
    type: dashboard
description: This report shows hourly averaged for CPU and Memory utilization measurements
  for physical and virtual machines. Averages are rolled up for all machines.
editable: false
gnetId:
graphTooltip: 0
iteration: 1596479923641
links: []
panels:
- aliasColors: {}
  bars: false
  dashLength: 10
  dashes: false
  datasource: $DB
  description: Average is rolled up for all virtual machines.
  fieldConfig:
    defaults:
      custom: {}
    overrides: []
  fill: 0
  fillGradient: 0
  gridPos:
    h: 8
    w: 24
    x: 0
    y: 0
  hiddenSeries: false
  id: 4
  interval: ''
  legend:
    avg: false
    current: false
    hideEmpty: false
    hideZero: false
    max: false
    min: false
    show: true
    total: false
    values: false
  lines: true
  linewidth: 3
  nullPointMode: 'null'
  options:
    dataLinks: []
  percentage: false
  pointradius: 2
  points: true
  renderer: flot
  seriesOverrides: []
  spaceLength: 10
  stack: false
  steppedLine: false
  targets:
  - format: time_series
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      SELECT
          date_trunc('hour', m.time) as "time",
          avg(m.utilization) FILTER (WHERE m.type = 'VMEM') AS "VMem",
          avg(m.utilization) FILTER (WHERE m.type = 'VCPU') AS "VCPU",
          avg(m.utilization) FILTER (WHERE m.type = 'VSTORAGE') AS "VStorage"
      FROM entity e
      JOIN metric m ON m.entity_oid = e.oid AND
          m.time BETWEEN $__timeFrom() AND $__timeTo()
      WHERE
          e.type = 'VIRTUAL_MACHINE' AND
          e.environment = 'ON_PREM' AND
          ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)
          and m.type in ('VMEM', 'VCPU', 'VSTORAGE')
      GROUP BY 1
      ORDER BY 1
    refId: A
    select:
    - - params:
        - current
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamp
    where:
    - name: $__timeFilter
      params: []
      type: macro
    - datatype: timestamptz
      name: ''
      params:
      - '"time"'
      - '='
      - $Day
      type: expression
  thresholds: []
  timeFrom:
  timeRegions: []
  timeShift:
  title: Average Hourly Virtual Machine Utilization
  tooltip:
    shared: true
    sort: 0
    value_type: individual
  type: graph
  xaxis:
    buckets:
    mode: time
    name:
    show: true
    values: []
  yaxes:
  - $$hashKey: object:1961
    format: percentunit
    label:
    logBase: 1
    max: 1
    min: 0
    show: true
  - $$hashKey: object:1962
    format: short
    label:
    logBase: 1
    max:
    min:
    show: true
  yaxis:
    align: false
    alignLevel:
- aliasColors: {}
  bars: false
  dashLength: 10
  dashes: false
  datasource: $DB
  description: Average is rolled up for all physical machines.
  fieldConfig:
    defaults:
      custom: {}
    overrides: []
  fill: 0
  fillGradient: 0
  gridPos:
    h: 9
    w: 24
    x: 0
    y: 8
  hiddenSeries: false
  id: 2
  legend:
    avg: false
    current: false
    max: false
    min: false
    show: true
    total: false
    values: false
  lines: true
  linewidth: 3
  nullPointMode: 'null'
  options:
    dataLinks: []
  percentage: false
  pointradius: 2
  points: true
  renderer: flot
  seriesOverrides: []
  spaceLength: 10
  stack: false
  steppedLine: false
  targets:
  - format: time_series
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      SELECT
        date_trunc('hour', m.time) as "time",
        avg(m.utilization) FILTER (WHERE m.type = 'MEM') AS "Mem",
        avg(m.utilization) FILTER (WHERE m.type = 'CPU') AS "CPU",
        avg(m.utilization) FILTER (WHERE m.type = 'BALLOONING') AS "Ballooning",
        avg(m.utilization) FILTER (WHERE m.type = 'IO_THROUGHPUT') AS "IOThroughput",
        avg(m.utilization) FILTER (WHERE m.type = 'NET_THROUGHPUT') AS "NetThroughput",
        avg(m.utilization) FILTER (WHERE m.type = 'SWAPPING') AS "Swapping",
        avg(m.utilization) FILTER (WHERE m.type = 'Q1_VCPU') AS "Q1_VCPU",
        avg(m.utilization) FILTER (WHERE m.type = 'Q2_VCPU') AS "Q2_VCPU",
        avg(m.utilization) FILTER (WHERE m.type = 'Q4_VCPU') AS "Q4_VCPU",
        avg(m.utilization) FILTER (WHERE m.type = 'Q8_VCPU') AS "Q8_VCPU",
        avg(m.utilization) FILTER (WHERE m.type = 'Q16_VCPU') AS "Q16_VCPU",
        avg(m.utilization) FILTER (WHERE m.type = 'Q32_VCPU') AS "Q32_VCPU",
        avg(m.utilization) FILTER (WHERE m.type = 'Q64_VCPU') AS "Q64_VCPU"
      FROM entity e
      JOIN metric m ON m.entity_oid = e.oid AND
        m."time" BETWEEN $__timeFrom() AND $__timeTo()
      WHERE
        e.type = 'PHYSICAL_MACHINE'  AND
        ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)
      and m.type in ('MEM', 'CPU', 'BALLOONING', 'IO_THROUGHPUT', 'NET_THROUGHPUT', 'SWAPPING', 'Q1_VCPU', 'Q2_VCPU', 'Q4_VCPU', 'Q8_VCPU', 'Q16_VCPU', 'Q32_VCPU', 'Q64_VCPU')
      GROUP BY 1
      ORDER BY 1
    refId: A
    select:
    - - params:
        - current
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamp
    where:
    - name: $__timeFilter
      params: []
      type: macro
  thresholds: []
  timeFrom:
  timeRegions: []
  timeShift:
  title: Average Hourly Physical Machine Utilization
  tooltip:
    shared: true
    sort: 0
    value_type: individual
  type: graph
  xaxis:
    buckets:
    mode: time
    name:
    show: true
    values: []
  yaxes:
  - $$hashKey: object:2041
    format: percentunit
    label:
    logBase: 1
    max: 1
    min: 0
    show: true
  - $$hashKey: object:2042
    format: short
    label:
    logBase: 1
    max:
    min:
    show: true
  yaxis:
    align: false
    alignLevel:
refresh: false
schemaVersion: 25
style: dark
tags: []
templating:
  list:
  - hide: 2
    includeAll: false
    label:
    multi: false
    name: DB
    options: []
    query: postgres
    queryValue: ''
    refresh: 1
    regex: ''
    skipUrlSync: false
    type: datasource
timepicker:
  refresh_intervals:
  - 10s
  - 30s
  - 1m
  - 5m
  - 15m
  - 30m
  - 1h
  - 2h
  - 1d
timezone: ''
title: Daily Infrastructure Utilization Levels by Hour
uid: utilization_by_hour
