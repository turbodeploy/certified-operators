{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": false,
  "gnetId": null,
  "graphTooltip": 0,
  "iteration": 1600812107378,
  "links": [],
  "panels": [
    {
      "datasource": "$DB",
      "description": "This panel shows counts for the entire cluster based on the most recent date in the time selection",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null
          },
          "mappings": [
            {
              "from": "",
              "id": 0,
              "text": "",
              "to": "",
              "type": 1,
              "value": ""
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 7,
        "x": 0,
        "y": 0
      },
      "id": 6,
      "options": {
        "showHeader": true
      },
      "pluginVersion": "7.0.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with pm_counts as (\n    SELECT count(distinct oid) as pm_count\n          ,sum(cpus) as cpu_count\n          ,sum(mem) as pm_mem\n      FROM\n        (SELECT oid\n               ,avg((attrs -> 'num_cpus')::int) as cpus\n               ,avg(capacity) as mem\n           FROM entity\n          INNER JOIN LATERAL (\n            SELECT capacity\n              FROM metric \n             WHERE metric.entity_oid = entity.oid\n               AND metric.entity_hash = entity.hash \n               AND metric.type = 'MEM'\n               AND metric.time between timestamptz $__timeTo() - INTERVAL '1 hour' and $__timeTo()\n             LIMIT 1\n          ) as foo ON true \n          WHERE type = 'PHYSICAL_MACHINE'\n            AND (timestamptz $__timeTo() - INTERVAL '1 hour', $__timeTo() ) OVERLAPS (first_seen, last_seen)\n            AND scope && ARRAY[ [[Cluster]] ] \n          GROUP BY 1) as bar\n    ),\n\nvm_counts as (\n    SELECT count(distinct oid) as vm_count\n          ,sum(vcpus) as vcpu_count\n          ,sum(vmem) as vm_vmem\n      FROM\n        (SELECT oid\n               ,avg((attrs -> 'num_cpus')::int) as vcpus\n               ,avg(capacity) as vmem\n           FROM entity\n          INNER JOIN LATERAL (\n            SELECT capacity\n              FROM metric \n             WHERE metric.entity_oid = entity.oid\n               AND metric.entity_hash = entity.hash \n               AND metric.type = 'VMEM'\n               AND metric.time between timestamptz $__timeTo() - INTERVAL '1 hour' and $__timeTo()  \n          ) as foo ON true \n          WHERE type = 'VIRTUAL_MACHINE'\n            AND (timestamptz $__timeTo() - INTERVAL '1 hour', $__timeTo()) OVERLAPS (first_seen, last_seen)\n            AND scope && ARRAY[ [[Cluster]] ] \n          GROUP BY 1) as bar\n    ),\n\nstorage_stats as (\n    SELECT sum(stor_used) as stor_used\n          ,sum(stor_cap) as stor_cap\n          ,sum(stor_prov) as stor_prov\n      FROM\n        (SELECT oid\n               ,MAX(current) FILTER (WHERE foo.type = 'STORAGE_AMOUNT') as stor_used\n               ,MAX(capacity) FILTER (WHERE foo.type = 'STORAGE_AMOUNT') as stor_cap\n               ,MAX(current) FILTER (WHERE foo.type = 'STORAGE_PROVISIONED') as stor_prov\n           FROM entity\n          INNER JOIN LATERAL (\n            SELECT type\n                  ,current\n                  ,capacity\n              FROM metric \n             WHERE metric.entity_oid = entity.oid\n               AND metric.entity_hash = entity.hash \n               AND metric.type in ('STORAGE_AMOUNT', 'STORAGE_PROVISIONED')\n               AND metric.time between timestamptz $__timeTo() - INTERVAL '1 hour' and $__timeTo() \n          ) as foo ON true \n          WHERE entity.type = 'STORAGE'\n            AND (timestamptz $__timeTo() - INTERVAL '1 hour', $__timeTo()) OVERLAPS (first_seen, last_seen)\n            AND scope && ARRAY[ [[Cluster]] ] \n          GROUP BY 1) as bar\n    )\n\nSELECT pm_count as \"Hosts\"\n      ,vm_count as \"VMs\"\n      ,pm_mem/1024/1024 as \"Mem Capacity\"\n      ,vm_vmem/1024/1024 as \"VMem Provisioned\"\n      ,cpu_count as \"Host CPUs\"\n      ,vcpu_count as \"VCPUs Provisioned\"\n      ,stor_cap/1024 as \"Total Storage\"\n      ,(stor_cap - stor_used)/1024 as \"Available Storage\"\n      ,stor_prov/1024 as \"Allocated Storage\"\n  FROM pm_counts, vm_counts, storage_stats",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "savings"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "action_spec",
          "timeColumn": "first_seen",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Current Counts",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Allocated Storage": true,
              "Available Storage": true,
              "Hosts": false,
              "Mem": true,
              "Mem Capacity": true,
              "Total Storage": true,
              "VMem": true,
              "VMem Provisioned": true,
              "VMs": false
            },
            "indexByName": {},
            "renameByName": {}
          }
        },
        {
          "id": "reduce",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "Max": "Stats"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$DB",
      "decimals": 2,
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "fill": 0,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 17,
        "x": 7,
        "y": 0
      },
      "hiddenSeries": false,
      "id": 4,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 2,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pluginVersion": "7.1.5",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with pm_counts as (\n     SELECT date_trunc('day', foo.time) as time\n           ,count(distinct oid) as pm_count\n       FROM entity\n      INNER JOIN LATERAL (\n        SELECT time\n          FROM metric \n         WHERE metric.entity_oid = entity.oid\n           AND metric.entity_hash = entity.hash \n           AND metric.type = 'MEM'\n           AND metric.time between timestamptz $__timeFrom() and $__timeTo() \n           AND metric.time - date_trunc('day', metric.time) < interval '10 minutes'\n      ) as foo ON true \n      WHERE type = 'PHYSICAL_MACHINE'\n        AND ($__timeFrom() , $__timeTo()) OVERLAPS (first_seen, last_seen)\n        AND scope && ARRAY[ [[Cluster]] ] \n      GROUP BY 1),\n\nvm_counts as (\n     SELECT date_trunc('day', foo.time) as time\n           ,count(distinct oid) as vm_count\n       FROM entity\n      INNER JOIN LATERAL (\n        SELECT time\n          FROM metric \n         WHERE metric.entity_oid = entity.oid\n           AND metric.entity_hash = entity.hash \n           AND metric.type = 'VMEM'\n           AND metric.time between timestamptz $__timeFrom() and $__timeTo() \n           AND metric.time - date_trunc('day', metric.time) < interval '10 minutes'\n      ) as foo ON true \n      WHERE type = 'VIRTUAL_MACHINE'\n        AND ($__timeFrom() , $__timeTo()) OVERLAPS (first_seen, last_seen)\n        AND scope && ARRAY[ [[Cluster]] ] \n      GROUP BY 1)\n\nSELECT pm_counts.time as time\n      ,pm_count as \"Hosts\"\n      ,vm_count as \"VMs\"\n  FROM pm_counts, vm_counts\n WHERE pm_counts.time = vm_counts.time",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "VM and Host Count Over Time",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "alias": "VM / Host Ratio",
            "binary": {
              "left": "VMs",
              "operator": "/",
              "reducer": "sum",
              "right": "Hosts"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        }
      ],
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "datasource": "-- Dashboard --",
      "description": "This panel shows current Memory and Storage stats across the cluster, based on the most recent date in the time selection.",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "gbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 7,
        "x": 0,
        "y": 6
      },
      "id": 14,
      "options": {
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Stats"
          }
        ]
      },
      "pluginVersion": "7.0.1",
      "targets": [
        {
          "panelId": 6,
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Current Stats",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "Total Storage",
                "Available Storage",
                "Allocated Storage",
                "Mem Capacity",
                "VMem Provisioned"
              ]
            }
          }
        },
        {
          "id": "reduce",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "Max": "Stats"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$DB",
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "unit": "mbytes"
        },
        "overrides": []
      },
      "fill": 0,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 17,
        "x": 7,
        "y": 7
      },
      "hiddenSeries": false,
      "id": 10,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 2,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pluginVersion": "7.1.5",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [
        {
          "alias": "Total Storage",
          "color": "#37872D"
        },
        {
          "alias": "Allocated Storage",
          "color": "#E0B400"
        },
        {
          "alias": "Used Storage",
          "color": "#8AB8FF"
        }
      ],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT time\n      ,sum(stor_cap) as \"Total Storage\"\n      ,sum(stor_used) as \"Used Storage\"\n      ,sum(stor_prov) as \"Allocated Storage\"\n  FROM\n    (SELECT date_trunc('day', foo.time) as time\n           ,oid\n           ,MAX(current) FILTER (WHERE foo.type = 'STORAGE_AMOUNT') as stor_used\n           ,MAX(capacity) FILTER (WHERE foo.type = 'STORAGE_AMOUNT') as stor_cap\n           ,MAX(current) FILTER (WHERE foo.type = 'STORAGE_PROVISIONED') as stor_prov\n       FROM entity\n      INNER JOIN LATERAL (\n        SELECT time\n               ,type\n               ,current\n               ,capacity\n          FROM metric \n         WHERE metric.entity_oid = entity.oid\n           AND metric.entity_hash = entity.hash \n           AND metric.type in ('STORAGE_AMOUNT', 'STORAGE_PROVISIONED')\n           AND metric.time between timestamptz $__timeFrom() and $__timeTo()\n      ) as foo ON true \n      WHERE entity.type = 'STORAGE'\n        AND ($__timeFrom() , $__timeTo()) OVERLAPS (first_seen, last_seen)\n        AND scope && ARRAY[ [[Cluster]] ] \n      GROUP BY 1,2) as bar\n GROUP BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "savings"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "action_spec",
          "timeColumn": "first_seen",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Storage Over Time",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "transformations": [],
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "mbytes",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "datasource": "-- Dashboard --",
      "description": "This panel shows current VM ratios across the cluster, based on the most recent date in the time selection.",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Field"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 196
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 7,
        "x": 0,
        "y": 13
      },
      "id": 8,
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "7.0.1",
      "targets": [
        {
          "panelId": 6,
          "refId": "A"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Current Ratios",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "VMs",
              "operator": "/",
              "reducer": "sum",
              "right": "Hosts"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            },
            "replaceFields": false
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "VMs / Mem (GB)",
            "binary": {
              "left": "VMs",
              "operator": "/",
              "reducer": "sum",
              "right": "Mem Capacity"
            },
            "mode": "binary",
            "reduce": {
              "include": [],
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "VMs / VCPUs",
            "binary": {
              "left": "VMs",
              "operator": "/",
              "reducer": "sum",
              "right": "VCPUs Provisioned"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Mem (GB) / VMs",
            "binary": {
              "left": "Mem Capacity",
              "operator": "/",
              "reducer": "sum",
              "right": "VMs"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "VCPUs / VMs",
            "binary": {
              "left": "VCPUs Provisioned",
              "operator": "/",
              "reducer": "sum",
              "right": "VMs"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "Allocated_TB",
            "binary": {
              "left": "Allocated Storage",
              "operator": "/",
              "reducer": "sum",
              "right": "1024"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "VMs / Storage Allocated (TB)",
            "binary": {
              "left": "VMs",
              "operator": "/",
              "reducer": "sum",
              "right": "Allocated_TB"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "calculateField",
          "options": {
            "alias": "VCPUs / CPUs",
            "binary": {
              "left": "VCPUs Provisioned",
              "operator": "/",
              "reducer": "sum",
              "right": "Host CPUs"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "time",
                "VMs / Hosts",
                "VMs / Mem (GB)",
                "VMs / VCPUs",
                "Mem (GB) / VMs",
                "VCPUs / VMs",
                "VMs / Storage Allocated (TB)",
                "VCPUs / CPUs"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "Mem (GB) / VMs": 6,
              "VCPUs / CPUs": 2,
              "VCPUs / VMs": 4,
              "VMs / Hosts": 1,
              "VMs / Mem (GB)": 5,
              "VMs / Storage Allocated (TB)": 7,
              "VMs / VCPUs": 3,
              "time": 0
            },
            "renameByName": {}
          }
        },
        {
          "id": "reduce",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "Max": "Ratios"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$DB",
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "unit": "percent"
        },
        "overrides": []
      },
      "fill": 0,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 17,
        "x": 7,
        "y": 14
      },
      "hiddenSeries": false,
      "id": 12,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 2,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pluginVersion": "7.1.5",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": " SELECT date_trunc('day', foo.time) as time\n       ,sum(current) FILTER (WHERE foo.type = 'CPU') /\n            sum(capacity) FILTER (WHERE foo.type = 'CPU') * 100 as \"CPU Utilization\"\n       ,sum(current) FILTER (WHERE foo.type = 'MEM') /\n            sum(capacity) FILTER (WHERE foo.type = 'MEM') * 100 as \"Mem Utilization\"\n   FROM entity\n  INNER JOIN LATERAL (\n    SELECT time\n          ,type\n          ,current\n          ,capacity\n      FROM metric \n     WHERE metric.entity_oid = entity.oid\n       AND metric.entity_hash = entity.hash \n       AND metric.type IN ('MEM', 'CPU')\n       AND metric.time between timestamptz $__timeFrom() and $__timeTo()  \n  ) as foo ON true \n  WHERE entity.type = 'PHYSICAL_MACHINE'\n    AND (timestamptz $__timeTo(), $__timeTo() ) OVERLAPS (first_seen, last_seen)\n    AND scope && ARRAY[ [[Cluster]] ] \n  GROUP BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "CPU and Mem Utilization Over Time",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "schemaVersion": 25,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "DB",
        "options": [],
        "query": "postgres",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": null,
        "datasource": "$DB",
        "definition": "SELECT name as __text,\n               oid as __value \nFROM entity\nWHERE entity.type = 'COMPUTE_CLUSTER' \nAND ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen) \nORDER BY 1",
        "hide": 0,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "Cluster",
        "options": [],
        "query": "SELECT name as __text,\n               oid as __value \nFROM entity\nWHERE entity.type = 'COMPUTE_CLUSTER' \nAND ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen) \nORDER BY 1",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "Individual Host Cluster Summary",
  "uid": "individual_cluster_summary"
}