{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "Performance and capacity profile, including trends, for selected datastores.",
  "editable": false,
  "gnetId": null,
  "graphTooltip": 0,
  "iteration": 1596572009638,
  "links": [],
  "panels": [
    {
      "datasource": "$DB",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "mbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Utilization"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 12,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "options": {
        "showHeader": true
      },
      "pluginVersion": "7.0.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT sum(used) as \"Storage Used\"\n      ,sum(capacity) as \"Storage Capacity\"\n      ,round((sum(used)/NULLIF(sum(capacity),0))::numeric, 4) as \"Utilization\"\nFROM\n        (SELECT e.oid\n              ,avg(m.current) AS used\n              ,avg(m.capacity)::numeric AS capacity\n        FROM entity e\n        JOIN metric m ON m.entity_oid = e.oid\n          AND m.type = 'STORAGE_AMOUNT'\n          AND m.entity_hash = e.hash\n          AND e.type = 'STORAGE'\n          AND $__timeFilter(m.\"time\")\n          AND ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)\n          AND CASE WHEN ARRAY[ [[Group]] ]::text[] = ARRAY[ '0' ] THEN true ELSE (e.scope && ARRAY[ [[Group]] ]::bigint[]) END\n        GROUP BY 1) as data_tbl",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "current"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "metric",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Overall Datastore Avg Consumption",
      "type": "table"
    },
    {
      "datasource": "$DB",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "right"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Utilization"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              },
              {
                "id": "custom.width",
                "value": null
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "IOPS"
            },
            "properties": [
              {
                "id": "unit",
                "value": "iops"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Latency"
            },
            "properties": [
              {
                "id": "unit",
                "value": "ms"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 5,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 6,
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "7.0.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \nunnest(array['AVG','MIN','MAX']) as \"Aggregation\",\nunnest(array[avg(metric.utilization) FILTER (WHERE metric.type = 'STORAGE_AMOUNT'),\nmin(metric.utilization) FILTER (WHERE metric.type = 'STORAGE_AMOUNT'),\nmax(metric.Utilization) FILTER (WHERE metric.type = 'STORAGE_AMOUNT')\n]) AS \"Utilization\",\nunnest(array[avg(metric.current) FILTER (WHERE metric.type = 'STORAGE_ACCESS'),\nmin(metric.current) FILTER (WHERE metric.type = 'STORAGE_ACCESS'),\nmax(metric.current) FILTER (WHERE metric.type = 'STORAGE_ACCESS')\n]) AS \"IOPS\",\nunnest(array[avg(metric.current) FILTER (WHERE metric.type = 'STORAGE_LATENCY'),\nmin(metric.current) FILTER (WHERE metric.type = 'STORAGE_LATENCY'),\nmax(metric.current) FILTER (WHERE metric.type = 'STORAGE_LATENCY')\n]) AS \"Latency\"\nFROM metric, entity\nWHERE entity.type = 'STORAGE' and \nCASE WHEN ARRAY[ [[Group]] ] = ARRAY[ '0' ] THEN true ELSE (entity.scope && array[ [[Group]] ]::bigint[]) END and \nentity.oid = metric.entity_oid and entity.hash = metric.entity_hash and\n$__timeFilter(\"time\") and ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "current"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "metric",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Datastore Performance Stats",
      "transformations": [
        {
          "id": "organize",
          "options": {}
        }
      ],
      "type": "table"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$DB",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fill": 0,
      "fillGradient": 0,
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 3
      },
      "hiddenSeries": false,
      "id": 2,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 3,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n      date_trunc('hour', m.time) as \"time\",\n      ROUND((sum(m.current)/sum(m.capacity))::NUMERIC, 4) AS \"Storage Amount Used\"\nFROM entity e\nJOIN metric m ON m.entity_oid = e.oid\n  AND m.type = 'STORAGE_AMOUNT'\n  AND m.entity_hash = e.hash\n  AND e.type = 'STORAGE'\n  AND $__timeFilter(m.\"time\")\n  AND ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)\n  AND CASE WHEN ARRAY[ [[Group]] ]::text[] = ARRAY[ '0' ] THEN true ELSE (e.scope && ARRAY[ [[Group]] ]::bigint[]) END\nGROUP BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "current"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "metric",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Datastore Consumption Trend",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:754",
          "decimals": 2,
          "format": "percentunit",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "$$hashKey": "object:755",
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "$DB",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fill": 0,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 5
      },
      "hiddenSeries": false,
      "id": 8,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 3,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [
        {
          "$$hashKey": "object:844",
          "alias": "Latency Avg",
          "yaxis": 2
        }
      ],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT m.time\n      ,avg(m.current) FILTER (WHERE m.type = 'STORAGE_ACCESS') AS \"IOPS Avg\"\n      ,avg(m.current) FILTER (WHERE m.type = 'STORAGE_LATENCY') AS \"Latency Avg\"\nFROM entity e\nJOIN metric m ON m.entity_oid = e.oid\n  AND m.type IN ('STORAGE_ACCESS', 'STORAGE_LATENCY')\n  AND m.entity_hash = e.hash\n  AND e.type = 'STORAGE'\n  AND $__timeFilter(m.\"time\")\n  AND ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)\n  AND CASE WHEN ARRAY[ [[Group]] ]::text[] = ARRAY[ '0' ] THEN true ELSE (e.scope && ARRAY[ [[Group]] ]::bigint[]) END\nGROUP BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "current"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "metric",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Datastore Performance Trends",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:851",
          "decimals": 2,
          "format": "iops",
          "label": "",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "$$hashKey": "object:852",
          "decimals": 2,
          "format": "ms",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "datasource": "$DB",
      "description": "Average values. ",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "mbytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Data Store"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 198
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Storage Utilization"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              },
              {
                "id": "decimals",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Storage Over-Provisioned"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              },
              {
                "id": "decimals",
                "value": 2
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Datastore"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Go to Datastore Summary for ${__value.text}",
                    "url": "/d/datastore_summary?var-Datastore=${__value.text}&var-DB=${DB}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 10,
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "7.0.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT e.name as \"Datastore\"\n      ,avg(m.capacity) FILTER (WHERE m.type = 'STORAGE_AMOUNT') AS \"Storage Capacity\"\n      ,avg(m.current) FILTER (WHERE m.type = 'STORAGE_AMOUNT') AS \"Storage Used\"\n      ,avg(m.utilization) FILTER (WHERE m.type = 'STORAGE_AMOUNT') as \"Storage Utilization\"\n      ,avg(m.current) FILTER (WHERE m.type = 'STORAGE_PROVISIONED') as \"Storage Provisioned\"\n      ,avg(m.current) FILTER (WHERE m.type = 'STORAGE_PROVISIONED') / \n            NULLIF(avg(m.capacity) FILTER (WHERE m.type = 'STORAGE_AMOUNT'), 0) as \"Storage Over-Provisioned\"\nFROM entity e\nJOIN metric m ON m.entity_oid = e.oid\n  AND m.type IN ('STORAGE_AMOUNT', 'STORAGE_PROVISIONED')\n  AND m.entity_hash = e.hash\n  AND e.type = 'STORAGE'\n  AND $__timeFilter(m.\"time\")\n  AND ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)\n  AND CASE WHEN ARRAY[ [[Group]] ]::text[] = ARRAY[ '0' ] THEN true ELSE (e.scope && ARRAY[ [[Group]] ]::bigint[]) END\nGROUP BY 1\nORDER BY 4 DESC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "current"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "metric",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Consumption Stats By Datastore",
      "type": "table"
    },
    {
      "datasource": "$DB",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": null
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "iops"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Latency Avg"
            },
            "properties": [
              {
                "id": "unit",
                "value": "ms"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Latency Max"
            },
            "properties": [
              {
                "id": "unit",
                "value": "ms"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Datastore"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "Go to Datastore Summary for ${__value.text}",
                    "url": "/d/datastore_summary?var-Datastore=${__value.text}&var-DB=${DB}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 21
      },
      "id": 12,
      "options": {
        "showHeader": true
      },
      "pluginVersion": "7.0.1",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT e.name as \"Datastore\"\n      ,avg(m.current) FILTER (WHERE m.type = 'STORAGE_ACCESS') AS \"IOPS Avg\"\n      ,max(m.current) FILTER (WHERE m.type = 'STORAGE_ACCESS') AS \"IOPS Max\"\n      ,avg(m.current) FILTER (WHERE m.type = 'STORAGE_LATENCY') AS \"Latency Avg\"\n      ,max(m.current) FILTER (WHERE m.type = 'STORAGE_LATENCY') AS \"Latency Max\"\nFROM entity e\nJOIN metric m ON m.entity_oid = e.oid\n  AND m.type IN ('STORAGE_ACCESS', 'STORAGE_LATENCY')\n  AND m.entity_hash = e.hash\n  AND e.type = 'STORAGE'\n  AND $__timeFilter(m.\"time\")\n  AND ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)\n  AND CASE WHEN ARRAY[ [[Group]] ]::text[] = ARRAY[ '0' ] THEN true ELSE (e.scope && ARRAY[ [[Group]] ]::bigint[]) END\nGROUP BY 1\nORDER BY 2 DESC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "current"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "metric",
          "timeColumn": "\"time\"",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Performance Stats By Datastore",
      "type": "table"
    }
  ],
  "refresh": false,
  "schemaVersion": 25,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "DB",
        "options": [],
        "query": "postgres",
        "queryValue": "",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": "'0'",
        "datasource": "$DB",
        "definition": "SELECT name as __text, \n       oid as __value \nFROM entity \nWHERE ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen) \nAND type = 'STORAGE_CLUSTER'\nOR (type = 'GROUP' \n   AND attrs -> 'member_types' ? 'STORAGE')\n",
        "hide": 0,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "Group",
        "options": [],
        "query": "SELECT name as __text, \n       oid as __value \nFROM entity \nWHERE ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen) \nAND type = 'STORAGE_CLUSTER'\nOR (type = 'GROUP' \n   AND attrs -> 'member_types' ? 'STORAGE')\n",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "timepicker": {
    "refresh_intervals": [
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "Datastore Group Summary",
  "uid": "datastore_group_summary"
}