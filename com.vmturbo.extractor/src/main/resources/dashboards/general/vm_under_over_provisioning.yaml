annotations:
  list:
  - builtIn: 1
    datasource: -- Grafana --
    enable: true
    hide: true
    iconColor: rgba(0, 211, 255, 1)
    name: Annotations & Alerts
    type: dashboard
description: This dashboard shows virtual machines that are over or under provisioned,
  as indicated by their utilization levels of allocated resources.
editable: false
gnetId:
graphTooltip: 0
iteration: 1597070835900
links: []
panels:
- columns: []
  datasource: $DB
  description: Active VMs with CPU or Memory utilization peaks that are below 10%.
    Values indicating over- provisioning are highlighted with red text.
  fieldConfig:
    defaults:
      custom: {}
    overrides: []
  fontSize: 100%
  gridPos:
    h: 15
    w: 24
    x: 0
    y: 0
  id: 4
  pageSize: 50
  showHeader: true
  sort:
    col:
    desc: false
  styles:
  - $$hashKey: object:279
    alias: Time
    align: auto
    dateFormat: YYYY-MM-DD HH:mm:ss
    pattern: Time
    type: date
  - $$hashKey: object:280
    alias: ''
    align: right
    colorMode: value
    colors:
    - '#C4162A'
    - rgb(1, 3, 0)
    - rgb(1, 3, 0)
    decimals: 2
    pattern: /.*Peak/
    thresholds:
    - 0.1
    type: number
    unit: percentunit
  - $$hashKey: object:281
    alias: ''
    align: auto
    colorMode:
    colors:
    - rgba(245, 54, 54, 0.9)
    - rgba(237, 129, 40, 0.89)
    - rgba(50, 172, 45, 0.97)
    dateFormat: YYYY-MM-DD HH:mm:ss
    decimals: 2
    mappingType: 1
    pattern: /(VMEM|VCPU) (Avg)/
    thresholds: []
    type: number
    unit: percentunit
  - $$hashKey: object:282
    alias: ''
    align: auto
    colorMode:
    colors:
    - rgba(245, 54, 54, 0.9)
    - rgba(237, 129, 40, 0.89)
    - rgba(50, 172, 45, 0.97)
    dateFormat: YYYY-MM-DD HH:mm:ss
    decimals: 2
    mappingType: 1
    pattern: VMEM Capacity
    thresholds: []
    type: number
    unit: kbytes
  - $$hashKey: object:291
    alias: ''
    align: auto
    colorMode:
    colors:
    - rgba(245, 54, 54, 0.9)
    - rgba(237, 129, 40, 0.89)
    - rgba(50, 172, 45, 0.97)
    dateFormat: YYYY-MM-DD HH:mm:ss
    decimals: 2
    mappingType: 1
    pattern: VCPU Capacity
    thresholds: []
    type: number
    unit: hertz
  targets:
  - format: table
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |
      WITH vms_by_cluster AS (
        SELECT DISTINCT ON (e.oid) c.name AS cluster_name, e.oid AS vm_oid, e.name AS vm_name
        FROM entity e
          JOIN scope s ON (e.oid = s.seed_oid)
          JOIN entity c ON (c.oid = s.scoped_oid)
        WHERE e.type = 'VIRTUAL_MACHINE'
          AND c.type = 'COMPUTE_CLUSTER'
          AND (s.start, s.finish) OVERLAPS ($__timeFrom(), $__timeTo()))
      SELECT max(cluster_name) AS "Cluster name",
        max(vm_name) AS "VM name",
        avg(metric.capacity) FILTER (WHERE metric.type = 'VMEM') AS "VMEM Capacity",
        avg(metric.utilization) FILTER (WHERE metric.type = 'VMEM') AS "VMEM Avg",
        max(metric.utilization) FILTER (WHERE metric.type = 'VMEM') AS "VMEM Peak",
        avg(metric.capacity * 1000000) FILTER (WHERE metric.type = 'VCPU') AS "VCPU Capacity",
        avg(metric.utilization) FILTER (WHERE metric.type = 'VCPU') AS "VCPU Avg",
        max(metric.utilization) FILTER (WHERE metric.type = 'VCPU') AS "VCPU Peak"
      FROM vms_by_cluster
        JOIN metric ON metric.entity_oid = vm_oid
      WHERE metric."type" IN ('VMEM', 'VCPU')
        AND provider_oid IS NULL
        AND metric."time" BETWEEN $__timeFrom() AND $__timeTo()
      GROUP BY vm_oid
      HAVING max(metric.utilization) FILTER (WHERE metric.type = 'VMEM') < 0.1
        OR max(metric.utilization) FILTER (WHERE metric.type = 'VCPU') < 0.1;
    refId: B
    select:
    - - params:
        - value
        type: column
    timeColumn: time
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom:
  timeShift:
  title: Over-provisioned VMs
  transform: table
  type: table-old
- columns: []
  datasource: $DB
  description: Active VMs with CPU or Memory utilization averages that are above 85%.
    Values indicating under-provisioning are highlighted in red text.
  fieldConfig:
    defaults:
      custom: {}
    overrides: []
  fontSize: 100%
  gridPos:
    h: 15
    w: 24
    x: 0
    y: 15
  id: 7
  pageSize: 50
  showHeader: true
  sort:
    col:
    desc: false
  styles:
  - $$hashKey: object:511
    alias: Time
    align: auto
    dateFormat: YYYY-MM-DD HH:mm:ss
    pattern: Time
    type: date
  - $$hashKey: object:512
    alias: ''
    align: right
    colorMode: value
    colors:
    - rgb(1, 3, 0)
    - '#E02F44'
    - '#E02F44'
    decimals: 2
    pattern: /.*Peak/
    thresholds:
    - 0.85
    type: number
    unit: percentunit
  - $$hashKey: object:513
    alias: ''
    align: auto
    colorMode:
    colors:
    - rgba(245, 54, 54, 0.9)
    - rgba(237, 129, 40, 0.89)
    - rgba(50, 172, 45, 0.97)
    dateFormat: YYYY-MM-DD HH:mm:ss
    decimals: 2
    mappingType: 1
    pattern: /(VMEM|VCPU) (Avg)/
    thresholds: []
    type: number
    unit: percentunit
  - $$hashKey: object:514
    alias: ''
    align: auto
    colorMode:
    colors:
    - rgba(245, 54, 54, 0.9)
    - rgba(237, 129, 40, 0.89)
    - rgba(50, 172, 45, 0.97)
    dateFormat: YYYY-MM-DD HH:mm:ss
    decimals: 2
    mappingType: 1
    pattern: VMEM Capacity
    thresholds: []
    type: number
    unit: kbytes
  - $$hashKey: object:541
    alias: ''
    align: auto
    colorMode:
    colors:
    - rgba(245, 54, 54, 0.9)
    - rgba(237, 129, 40, 0.89)
    - rgba(50, 172, 45, 0.97)
    dateFormat: YYYY-MM-DD HH:mm:ss
    decimals: 2
    mappingType: 1
    pattern: VCPU Capacity
    thresholds: []
    type: number
    unit: hertz
  targets:
  - format: table
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |
      WITH vms_by_cluster AS (
        SELECT DISTINCT ON (e.oid) c.name AS cluster_name, e.oid AS vm_oid, e.name AS vm_name
        FROM entity e
          JOIN scope s ON (e.oid = s.seed_oid)
          JOIN entity c ON (c.oid = s.scoped_oid)
        WHERE e.type = 'VIRTUAL_MACHINE'
          AND c.type = 'COMPUTE_CLUSTER'
          AND (s.start, s.finish) OVERLAPS ($__timeFrom(), $__timeTo()))
      SELECT max(cluster_name) AS "Cluster name",
        max(vm_name) AS "VM name",
        avg(metric.capacity) FILTER (WHERE metric.type = 'VMEM') AS "VMEM Capacity",
        avg(metric.utilization) FILTER (WHERE metric.type = 'VMEM') AS "VMEM Avg",
        max(metric.utilization) FILTER (WHERE metric.type = 'VMEM') AS "VMEM Peak",
        avg(metric.capacity * 1000000) FILTER (WHERE metric.type = 'VCPU') AS "VCPU Capacity",
        avg(metric.utilization) FILTER (WHERE metric.type = 'VCPU') AS "VCPU Avg",
        max(metric.utilization) FILTER (WHERE metric.type = 'VCPU') AS "VCPU Peak"
      FROM vms_by_cluster
        JOIN metric ON metric.entity_oid = vm_oid
      WHERE metric."type" IN ('VMEM', 'VCPU')
        AND provider_oid IS NULL
        AND metric."time" BETWEEN $__timeFrom() AND $__timeTo()
      GROUP BY vm_oid
      HAVING max(metric.utilization) FILTER (WHERE metric.type = 'VMEM') < 0.1
        OR max(metric.utilization) FILTER (WHERE metric.type = 'VCPU') < 0.1;
    refId: B
    select:
    - - params:
        - value
        type: column
    timeColumn: time
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom:
  timeShift:
  title: Under-provisioned VMs
  transform: table
  type: table-old
- columns: []
  datasource: $DB
  description: Group/Cluster information allowing individual VM peaks to be compared
    with the average of all of the peaks of the VMs in their corresponding cluster.
  fieldConfig:
    defaults:
      custom: {}
    overrides: []
  fontSize: 100%
  gridPos:
    h: 13
    w: 24
    x: 0
    y: 30
  id: 6
  pageSize: 50
  showHeader: true
  sort:
    col: 2
    desc: true
  styles:
  - alias: ''
    align: right
    colorMode:
    colors:
    - rgba(245, 54, 54, 0.9)
    - rgba(237, 129, 40, 0.89)
    - rgba(50, 172, 45, 0.97)
    decimals: 2
    pattern: /Avg.*/
    thresholds: []
    type: number
    unit: percentunit
  targets:
  - format: table
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |
      WITH vms_by_cluster AS (
        SELECT DISTINCT ON (e.oid) c.name AS cluster_name, e.oid AS vm_oid, e.name AS vm_name
        FROM entity e
          JOIN scope s ON (e.oid = s.seed_oid)
          JOIN entity c ON (c.oid = s.scoped_oid)
        WHERE e.type = 'VIRTUAL_MACHINE'
          AND c.type = 'COMPUTE_CLUSTER'
          AND (s.start, s.finish) OVERLAPS ($__timeFrom(), $__timeTo())),
      vm_peaks AS (
        SELECT
          max(cluster_name) AS cluster_name,
          max(metric.utilization) FILTER (WHERE metric.type = 'VMEM') AS vmem_peak,
          max(metric.utilization) FILTER (WHERE metric.type = 'VCPU') AS vcpu_peak
        FROM vms_by_cluster
        JOIN metric ON metric.entity_oid = vm_oid
        WHERE
          $__timeFilter(metric."time")
          AND metric.type IN ('VMEM', 'VCPU')
          AND provider_oid IS NULL
        GROUP BY vm_oid
      )
      SELECT
        cluster_name AS "Cluster",
        avg(vcpu_peak) AS "Avg(Peak VCPU)",
        avg(vmem_peak) AS "Avg(Peak VMem)"
      FROM vm_peaks
      GROUP BY cluster_name
    refId: A
    select:
    - - params:
        - value
        type: column
    timeColumn: time
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom:
  timeShift:
  title: Clusters with Average Peaks
  transform: table
  type: table-old
refresh: false
schemaVersion: 25
style: dark
tags: []
templating:
  list:
  - hide: 2
    includeAll: false
    label:
    multi: false
    name: DB
    options: []
    query: postgres
    queryValue: ''
    refresh: 1
    regex: ''
    skipUrlSync: false
    type: datasource
timepicker:
  refresh_intervals:
  - 10s
  - 30s
  - 1m
  - 5m
  - 15m
  - 30m
  - 1h
  - 2h
  - 1d
timezone: ''
title: Virtual Machine Over or Under Provisioning
uid: vm_under_over_provisioning
