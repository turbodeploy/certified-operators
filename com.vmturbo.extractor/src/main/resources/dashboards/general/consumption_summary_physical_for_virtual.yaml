annotations:
  list:
  - builtIn: 1
    datasource: -- Grafana --
    enable: true
    hide: true
    iconColor: rgba(0, 211, 255, 1)
    name: Annotations & Alerts
    type: dashboard
description: Average consumption of physical resources for a group of virtual machines.
editable: false
gnetId:
graphTooltip: 0
iteration: 1600436048145
links: []
panels:
- aliasColors: {}
  bars: false
  dashLength: 10
  dashes: false
  datasource: $DB
  description: Average CPU usage measurement
  fieldConfig:
    defaults:
      custom: {}
    overrides: []
  fill: 0
  fillGradient: 0
  gridPos:
    h: 6
    w: 24
    x: 0
    y: 0
  hiddenSeries: false
  id: 4
  legend:
    avg: false
    current: false
    max: false
    min: false
    show: true
    total: false
    values: false
  lines: true
  linewidth: 2
  nullPointMode: 'null'
  options:
    dataLinks: []
  percentage: false
  pointradius: 2
  points: true
  renderer: flot
  seriesOverrides: []
  spaceLength: 10
  stack: false
  steppedLine: false
  targets:
  - format: time_series
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      WITH metrics_data AS (
        SELECT m.time, m.entity_oid, m.consumed as value
        FROM metric m,
          scope_to($__timeFrom(), $__timeTo(), 'VIRTUAL_MACHINE', ARRAY[${Group}]::bigint[], '${Group:raw}' = '0') s
        WHERE
          m.entity_oid = s.oid
          AND m.time BETWEEN s.from_time AND s.to_time
          AND m.type = 'CPU'
          AND m.time  BETWEEN $__timeFrom() AND $__timeTo()
      ),
      daily_avg_metrics as (
        SELECT
          date_trunc('day', m.time) as "time",
          m.entity_oid,
          avg(m.value) as value
        FROM metrics_data m
        GROUP BY 1, 2
      )
      SELECT
        daily_avg_metrics.time,
        sum(daily_avg_metrics.value) as "CPU Usage"
      FROM daily_avg_metrics
      GROUP BY 1
      ORDER BY 1
    refId: A
    select:
    - - params:
        - current
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamp
    where:
    - name: $__timeFilter
      params: []
      type: macro
  thresholds: []
  timeFrom:
  timeRegions: []
  timeShift:
  title: CPU Usage
  tooltip:
    shared: true
    sort: 0
    value_type: individual
  type: graph
  xaxis:
    buckets:
    mode: time
    name:
    show: true
    values: []
  yaxes:
  - $$hashKey: object:1300
    format: none
    label: MHz
    logBase: 1
    max:
    min:
    show: true
  - $$hashKey: object:1301
    format: short
    label:
    logBase: 1
    max:
    min:
    show: true
  yaxis:
    align: false
    alignLevel:
- aliasColors: {}
  bars: false
  dashLength: 10
  dashes: false
  datasource: $DB
  description: Average memory usage measurement
  fieldConfig:
    defaults:
      custom: {}
    overrides: []
  fill: 0
  fillGradient: 0
  gridPos:
    h: 7
    w: 24
    x: 0
    y: 6
  hiddenSeries: false
  id: 2
  legend:
    avg: false
    current: false
    max: false
    min: false
    show: true
    total: false
    values: false
  lines: true
  linewidth: 3
  nullPointMode: 'null'
  options:
    dataLinks: []
  percentage: false
  pointradius: 2
  points: true
  renderer: flot
  seriesOverrides: []
  spaceLength: 10
  stack: false
  steppedLine: false
  targets:
  - format: time_series
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      WITH metrics_data AS (
        SELECT m.time, m.entity_oid, m.consumed as value
        FROM metric m,
          scope_to($__timeFrom(), $__timeTo(), 'VIRTUAL_MACHINE', ARRAY[${Group}]::bigint[], '${Group:raw}' = '0') s
        WHERE m.time  BETWEEN $__timeFrom() AND $__timeTo()
          AND m.type = 'MEM'
          AND s.oid = m.entity_oid
      ), daily_avg_metrics as (
        SELECT
          date_trunc('day', m.time) as "time",
          m.entity_oid,
          avg(m.value) as value
          FROM metrics_data m
        GROUP BY 1, 2
      )
      SELECT
        daily_avg_metrics.time,
        sum(daily_avg_metrics.value) as "Mem Usage"
      FROM daily_avg_metrics
      GROUP BY 1
      ORDER BY 1
    refId: A
    select:
    - - params:
        - current
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamp
    where:
    - name: $__timeFilter
      params: []
      type: macro
  thresholds: []
  timeFrom:
  timeRegions: []
  timeShift:
  title: Mem Usage
  tooltip:
    shared: true
    sort: 0
    value_type: individual
  type: graph
  xaxis:
    buckets:
    mode: time
    name:
    show: true
    values: []
  yaxes:
  - $$hashKey: object:1219
    format: kbytes
    label:
    logBase: 1
    max:
    min:
    show: true
  - $$hashKey: object:1220
    format: short
    label:
    logBase: 1
    max:
    min:
    show: true
  yaxis:
    align: false
    alignLevel:
- aliasColors: {}
  bars: false
  dashLength: 10
  dashes: false
  datasource: $DB
  description: Average storage used measurement
  fieldConfig:
    defaults:
      custom: {}
    overrides: []
  fill: 0
  fillGradient: 0
  gridPos:
    h: 7
    w: 24
    x: 0
    y: 13
  hiddenSeries: false
  id: 6
  legend:
    avg: false
    current: false
    max: false
    min: false
    show: true
    total: false
    values: false
  lines: true
  linewidth: 3
  nullPointMode: 'null'
  options:
    dataLinks: []
  percentage: false
  pointradius: 2
  points: true
  renderer: flot
  seriesOverrides: []
  spaceLength: 10
  stack: false
  steppedLine: false
  targets:
  - format: time_series
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      WITH metrics_data AS (
        SELECT m.time, m.entity_oid, m.consumed as value
        FROM metric m,
          scope_to($__timeFrom(), $__timeTo(), 'VIRTUAL_MACHINE', ARRAY[${Group}]::bigint[], '${Group:raw}' = '0') s
        WHERE m.time  BETWEEN $__timeFrom() AND $__timeTo()
          AND m.type = 'STORAGE_AMOUNT'
          AND s.oid = m.entity_oid
      ), entity_timestamp_aggregation AS (
        SELECT time, entity_oid, sum(value) as value
        FROM metrics_data
        GROUP BY time, entity_oid
      ), daily_avg_metrics as (
        SELECT
          date_trunc('day', m.time) as "time",
          m.entity_oid,
          avg(m.value) as value
          FROM entity_timestamp_aggregation m
        GROUP BY 1, 2
      )
      SELECT
        daily_avg_metrics.time,
        sum(daily_avg_metrics.value) as "Storage Used"
      FROM daily_avg_metrics
      GROUP BY 1
      ORDER BY 1
    refId: A
    select:
    - - params:
        - current
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamp
    where:
    - name: $__timeFilter
      params: []
      type: macro
  thresholds: []
  timeFrom:
  timeRegions: []
  timeShift:
  title: Storage Usage
  tooltip:
    shared: true
    sort: 0
    value_type: individual
  type: graph
  xaxis:
    buckets:
    mode: time
    name:
    show: true
    values: []
  yaxes:
  - $$hashKey: object:1386
    format: mbytes
    label:
    logBase: 1
    max:
    min:
    show: true
  - $$hashKey: object:1387
    format: short
    label:
    logBase: 1
    max:
    min:
    show: true
  yaxis:
    align: false
    alignLevel:
- aliasColors: {}
  bars: false
  dashLength: 10
  dashes: false
  datasource: $DB
  description: Average storage IOPS measurement
  fieldConfig:
    defaults:
      custom: {}
    overrides: []
  fill: 0
  fillGradient: 0
  gridPos:
    h: 7
    w: 24
    x: 0
    y: 20
  hiddenSeries: false
  id: 8
  legend:
    avg: false
    current: false
    max: false
    min: false
    show: true
    total: false
    values: false
  lines: true
  linewidth: 3
  nullPointMode: 'null'
  options:
    dataLinks: []
  percentage: false
  pointradius: 2
  points: true
  renderer: flot
  seriesOverrides: []
  spaceLength: 10
  stack: false
  steppedLine: false
  targets:
  - format: time_series
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      WITH metrics_data AS (
        SELECT m.time, m.entity_oid, m.consumed as value
        FROM metric m,
          scope_to($__timeFrom(), $__timeTo(), 'VIRTUAL_MACHINE', ARRAY[${Group}]::bigint[], '${Group:raw}' = '0') s
        WHERE m.time  BETWEEN $__timeFrom() AND $__timeTo()
          AND m.type = 'STORAGE_ACCESS'
          AND s.oid = m.entity_oid
      ), entity_timestamp_aggregation AS (
        SELECT time, entity_oid, sum(value) as value
        FROM metrics_data
        GROUP BY time, entity_oid
      ), daily_avg_metrics as (
        SELECT
          date_trunc('day', m.time) as "time",
          m.entity_oid,
          avg(m.value) as value
          FROM entity_timestamp_aggregation m
        GROUP BY 1, 2
      )
      SELECT
        daily_avg_metrics.time,
        sum(daily_avg_metrics.value) as "Storage Access - IOPS"
      FROM daily_avg_metrics
      GROUP BY 1
      ORDER BY 1
    refId: A
    select:
    - - params:
        - current
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamp
    where:
    - name: $__timeFilter
      params: []
      type: macro
  thresholds: []
  timeFrom:
  timeRegions: []
  timeShift:
  title: Storage Access - IOPS
  tooltip:
    shared: true
    sort: 0
    value_type: individual
  type: graph
  xaxis:
    buckets:
    mode: time
    name:
    show: true
    values: []
  yaxes:
  - $$hashKey: object:1480
    format: none
    label: IOPS
    logBase: 1
    max:
    min:
    show: true
  - $$hashKey: object:1481
    format: short
    label:
    logBase: 1
    max:
    min:
    show: true
  yaxis:
    align: false
    alignLevel:
- columns: []
  datasource: $DB
  description: Average measurement for each VM in the selected group
  fieldConfig:
    defaults:
      custom: {}
    overrides: []
  fontSize: 100%
  gridPos:
    h: 8
    w: 24
    x: 0
    y: 27
  id: 10
  pageSize:
  showHeader: true
  sort:
    col: 1
    desc: true
  styles:
  - alias: Time
    align: auto
    dateFormat: YYYY-MM-DD HH:mm:ss
    pattern: Time
    type: date
  - alias: ''
    align: right
    colorMode:
    colors:
    - rgba(245, 54, 54, 0.9)
    - rgba(237, 129, 40, 0.89)
    - rgba(50, 172, 45, 0.97)
    decimals: 2
    pattern: Mem
    thresholds: []
    type: number
    unit: kbytes
  - alias: ''
    align: auto
    colorMode:
    colors:
    - rgba(245, 54, 54, 0.9)
    - rgba(237, 129, 40, 0.89)
    - rgba(50, 172, 45, 0.97)
    dateFormat: YYYY-MM-DD HH:mm:ss
    decimals: 2
    mappingType: 1
    pattern: Storage
    thresholds: []
    type: number
    unit: mbytes
  - alias: ''
    align: auto
    colorMode:
    colors:
    - rgba(245, 54, 54, 0.9)
    - rgba(237, 129, 40, 0.89)
    - rgba(50, 172, 45, 0.97)
    dateFormat: YYYY-MM-DD HH:mm:ss
    decimals: 2
    mappingType: 1
    pattern: CPU
    thresholds: []
    type: number
    unit: none
  targets:
  - format: table
    group: []
    metricColumn: none
    rawQuery: true
    rawSql: |-
      WITH metrics_data AS (
        SELECT m.entity_oid, e.name as entity_name, m.consumed as value, m.type as metric_type, m.time
        FROM metric m,
          scope_to($__timeFrom(), $__timeTo(), 'VIRTUAL_MACHINE', ARRAY[${Group}]::bigint[], '${Group:raw}' = '0') s,
          entity e
        WHERE m.time  BETWEEN $__timeFrom() AND $__timeTo()
          AND m.type IN ('CPU', 'MEM', 'STORAGE_AMOUNT')
          AND s.oid = m.entity_oid
          AND e.oid = m.entity_oid
      ), entity_timestamp_aggregation AS (
         SELECT entity_oid, entity_name, sum(value) as value, metric_type
         FROM metrics_data
         GROUP BY time, entity_oid, entity_name, metric_type
      )
      SELECT
        m.entity_name as "VM Name",
        avg(m.value) FILTER (WHERE m.metric_type = 'MEM') AS "Mem",
        avg(m.value) FILTER (WHERE m.metric_type = 'CPU') AS "CPU",
        avg(m.value) FILTER (WHERE m.metric_type = 'STORAGE_AMOUNT') AS "Storage"
      FROM entity_timestamp_aggregation m
      GROUP BY m.entity_oid, m.entity_name
      ORDER BY m.entity_name, m.entity_oid
    refId: A
    select:
    - - params:
        - current
        type: column
    table: metric
    timeColumn: '"time"'
    timeColumnType: timestamp
    where:
    - name: $__timeFilter
      params: []
      type: macro
  timeFrom:
  timeShift:
  title: Virtual Machine Physical Resource Usage
  transform: table
  type: table-old
refresh: false
schemaVersion: 25
style: dark
tags: []
templating:
  list:
    - hide: 2
      includeAll: false
      label:
      multi: false
      name: DB
      options: []
      query: postgres
      queryValue: ''
      refresh: 1
      regex: ''
      skipUrlSync: false
      type: datasource
    - allValue: "0"
      datasource: $DB
      definition: |-
        SELECT
          name as __text,
          oid as __value
        FROM entity
        WHERE
          entity.type = 'GROUP'
          AND ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)
          AND attrs -> 'member_types' ? 'VIRTUAL_MACHINE'
        GROUP BY name, oid
        ORDER BY 1
      hide: 0
      includeAll: true
      label:
      multi: false
      name: Group
      options: []
      query: |-
        SELECT
          name as __text,
          oid as __value
        FROM entity
        WHERE
          entity.type = 'GROUP'
          AND ($__timeFrom(),$__timeTo()) OVERLAPS (first_seen, last_seen)
          AND attrs -> 'member_types' ? 'VIRTUAL_MACHINE'
        GROUP BY name, oid
        ORDER BY 1
      refresh: 2
      regex: ''
      skipUrlSync: false
      sort: 0
      tagValuesQuery: ''
      tags: []
      tagsQuery: ''
      type: query
      useTags: false
time:
  from: now-7d
  to: now
timepicker:
  refresh_intervals:
  - 10s
  - 30s
  - 1m
  - 5m
  - 15m
  - 30m
  - 1h
  - 2h
  - 1d
timezone: ''
title: Consumption Summary of Physical Resources for Virtual Machines
uid: consumption_summary_physical_for_virtual

