<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>Turbonomic-XL</artifactId>
        <groupId>com.vmturbo</groupId>
        <version>7.0.b8-SNAPSHOT</version>
        <relativePath>../build/pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>system-tests</artifactId>
    <description>System Tests</description>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <forkCount>0</forkCount><!-- sequential execution -->
                    <includes>
                        <include>**/SystemTestSuite.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/SimpleTest.java</exclude>
                        <exclude>**/PlanOverPlanSysTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <!-- Disable test execution in release & development profiles so that we can run compile and compileTest
         but not actually run tests in these profiles. Tests may be run by special jobs or
         manually by developers, but they are too slow to run as part of the normal build.
         However, we want to make sure the test compile is not broken by accident.-->
    <profiles>
        <profile>
            <id>release</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>default-test</id>
                                    <phase>none</phase>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>development</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>default-test</id>
                                    <phase>none</phase>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>components-test-utilities</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>common-protobuf</artifactId>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_hotspot</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.repository.api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.mediation.delegatingprobe</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
