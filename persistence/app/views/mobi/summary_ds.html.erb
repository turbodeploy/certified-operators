
<p id="top_section_label">Datastore Summary</p>

<hr />


<h4 style="margin:4px 0;">Datastore: <%= @ds_name %> </h4>

<h3 id="section_label">Resource Utilization</h3>

<table border="0" cellspacing="4">
  <tr>
    <th>Resource</th><th>&nbsp;</th><th>Capacity</th><th>Avg Utilized</th><th>Peak Utilized</th>

    <% for stat in @stats.sort{|a,b| b.max_property_value.to_f <=> a.max_property_value.to_f} do %>
        <%# next if stat.property_type.downcase =~ /ballooning|swapping|q.*vcpu/ %>

      <tr>
        <td><%= stat.property_type.gsub("Throughput","").gsub(/Q(\d+)VCPU/,'VCPU \1 Wait') %></td>
        <td>&nbsp;</td>
        <td style="text-align: right;"><%= number_with_delimiter(stat.capacity.to_i)%></td>
        <td style="text-align: right;"><%= sprintf("%6.1f",stat.property_value.to_f*100)+'%'%></td>
        <td style="text-align: right;"><%= sprintf("%6.1f",stat.max_property_value.to_f*100)+'%'%></td>
      </tr>
    <% end %>
  </tr>
</table>


<h3 id="section_label" style="margin:4px 0;">Client VMs</h3>

<%
  keys = @grouped_stats.keys.sort{|a,b| @grouped_stats[a]['display_name'].to_s.downcase <=> @grouped_stats[b]['display_name'].to_s.downcase}

  unless keys.empty?
    names = @grouped_stats.values.last.keys.reject{|k| k.downcase =~ /ballooning|swapping|q.*vcpu|display_name/}
%>

<table border="0" cellspacing="4">
  <tr>
    <th>Virtual Machine</th><th style="text-align: right;"><%= names.collect{|n| n.gsub("Throughput","")}.join("</th><th style=\"text-align: right;\">") %></th>
  </tr>
  <% for key in keys do %>
    <tr>
      <td><%= link_to @grouped_stats[key]['display_name'], :controller => 'mobi', :action => 'summary_vm', :vm_uuid => key %>
        </td><td style="text-align: right;"><%= names.collect{|n| number_with_delimiter(@grouped_stats[key][n].to_i)}.join("</td><td style=\"text-align: right;\">") %></td>
    </tr>
  <% end %>
</table>

<%
  else
%>

<p>No VM clients identified in currently monitored domain</p>

<%
  end
%>



