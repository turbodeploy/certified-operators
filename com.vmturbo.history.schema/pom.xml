<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>Turbonomic-XL</artifactId>
        <groupId>com.vmturbo</groupId>
        <version>7.4.0-SNAPSHOT</version>
        <relativePath>../build/pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>com.vmturbo.history.schema</artifactId>

    <properties>
        <db.url>jdbc:mysql://localhost:3306</db.url>
        <db.username>root</db.username>
        <db.password>vmturbo</db.password>
        <target.db.schema>vmtdb</target.db.schema>
        <db.driver>org.mariadb.jdbc.Driver</db.driver>

        <!-- these DB-related version should be in sync with ones in com.vmturbo.reports -->
        <jooq.version>3.1.0</jooq.version>
        <flyway.version>3.0</flyway.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- generate a unique schema name for this build -->
                        <id>set-db-name</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <configuration>
                            <name>db.schema</name>
                            <pattern>'${project.name}'-yyyyMMddHHmmssSS</pattern>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>4.2.0</version>
                <executions>
                    <execution>
                        <id>clean</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>migrate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <url>${db.url}</url>
                    <user>${db.username}</user>
                    <password>${db.password}</password>
                    <locations>
                        <!-- add a vmtplatform user just for the purpose of the flyway/jooq execution -->
                        <location>filesystem:${basedir}/src/build/resources/jooq-setup</location>
                        <!-- run the flyway/jooq generation on the primary DB schema -->
                        <location>filesystem:${basedir}/src/main/resources/db/migration</location>
                    </locations>
                    <schemas>
                        <schema>${db.schema}</schema>
                    </schemas>
                </configuration>
            </plugin>
            <!-- See comment from michael-simons at https://github.com/spring-projects/spring-boot/issues/6975
     on recommended configuration for a Spring Boot + Flyway + jOOQ setup-->
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq.version}</version>

                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <dependencies>
                    <dependency>
                        <groupId>org.mariadb.jdbc</groupId>
                        <artifactId>mariadb-java-client</artifactId>
                        <version>1.1.7</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <!-- Configure the database connection here -->
                    <jdbc>
                        <!-- <driver>com.mysql.jdbc.Driver</driver> -->
                        <driver>${db.driver}</driver>
                        <url>${db.url}</url>
                        <user>${db.username}</user>
                        <password>${db.password}</password>
                    </jdbc>

                    <generator>
                        <database>

                            <name>org.jooq.util.mysql.MySQLDatabase</name>
                            <includes>.*</includes>

                            <inputSchema>${db.schema}</inputSchema>
                            <outputSchema>${target.db.schema}</outputSchema>


                            <!-- Map Data Types -->
                            <customTypes>
                                <customType>
                                    <!-- Specify the fully-qualified class name of your custom type -->
                                    <name>com.vmturbo.history.schema.RelationType</name>

                                    <!-- Associate that custom type with your converter. Note, a
                                         custom type can only have one converter in jOOQ -->
                                    <converter>com.vmturbo.history.schema.RelationTypeConverter</converter>
                                </customType>
                                <customType>
                                    <name>com.vmturbo.api.enums.Period</name>
                                    <converter>com.vmturbo.history.schema.PeriodConverter</converter>
                                </customType>
                                <customType>
                                    <name>com.vmturbo.api.enums.DayOfWeek</name>
                                    <converter>com.vmturbo.history.schema.DayOfWeekConverter</converter>
                                </customType>
                                <customType>
                                    <name>com.vmturbo.api.enums.ReportType</name>
                                    <converter>com.vmturbo.history.schema.ReportTypeConverter</converter>
                                </customType>
                                <customType>
                                    <name>com.vmturbo.api.enums.ReportOutputFormat</name>
                                    <converter>com.vmturbo.history.schema.ReportOutputFormatConverter</converter>
                                </customType>
                                <customType>
                                    <name>com.vmturbo.api.dto.report.ReportAttributeType</name>
                                    <converter>com.vmturbo.history.schema.ReportAttributeTypeConverter</converter>
                                </customType>
                            </customTypes>
                            <forcedTypes>
                                <!-- EXAMPLE:
                                <forcedType>
                                  <name>
                                    Specify again he fully-qualified class name of your custom type
                                  </name>
                                  <expressions>
                                    Add a Java regular expression matching fully-qualified columns.
                                    Use the pipe to separate several expressions.
                                    If provided, both "expressions" and "types" must match.
                                  </expressions>
                                </forcedType>
                                -->
                                <forcedType>
                                    <name>com.vmturbo.history.schema.RelationType</name>
                                    <expressions>.*\.relation</expressions>
                                </forcedType>

                                <forcedType>
                                    <name>com.vmturbo.api.enums.ReportOutputFormat</name>
                                    <expressions>.*\.format</expressions>
                                </forcedType>

                                <forcedType>
                                    <name>com.vmturbo.api.enums.ReportType</name>
                                    <expressions>.*\.report_type</expressions>
                                </forcedType>

                                <forcedType>
                                    <name>com.vmturbo.api.enums.Period</name>
                                    <expressions>(?i)(.*\.period.*)</expressions>
                                </forcedType>

                                <forcedType>
                                    <name>com.vmturbo.api.enums.DayOfWeek</name>
                                    <expressions>(?i)(.*\.day_type.*)</expressions>
                                </forcedType>

                                <forcedType>
                                    <name>com.vmturbo.api.dto.report.ReportAttributeType</name>
                                    <expressions>.*\.report_attrs\.att_type</expressions>
                                </forcedType>

                                <forcedType>
                                    <name>Double</name>
                                    <expressions>(?i)(.*\.capacity.*|.*\.avg_value.*|.*\.min_value.*|.*\.max_value.*|.*\.rate.*)</expressions>
                                </forcedType>
                            </forcedTypes>

                        </database>

                        <generate>
                            <!-- Generation flags: See advanced configuration properties -->
                        </generate>

                        <target>
                            <!-- The destination package of your generated classes (within the
                                 destination directory) -->
                            <packageName>com.vmturbo.history.schema.abstraction</packageName>

                            <!-- The destination directory of your generated classes -->
                            <directory>${project.build.directory}/generated-sources/jooq</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <!-- Turbonomic Dependencies -->
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.api</artifactId>
        </dependency>
        <!-- Other Dependencies -->
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
    </dependencies>


</project>
