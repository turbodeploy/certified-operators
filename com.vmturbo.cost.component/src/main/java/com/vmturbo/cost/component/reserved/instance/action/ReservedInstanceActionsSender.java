package com.vmturbo.cost.component.reserved.instance.action;

import java.util.Objects;

import javax.annotation.Nonnull;

import com.vmturbo.common.protobuf.action.ActionDTO.ActionPlan;
import com.vmturbo.communication.CommunicationException;
import com.vmturbo.components.api.server.ComponentNotificationSender;
import com.vmturbo.components.api.server.IMessageSender;

/**
 * Class to publish actions generated by Reserved Instance analysis algorithm
 * to Kafka.
 */
public class ReservedInstanceActionsSender extends
        ComponentNotificationSender<ActionPlan> {

    private final IMessageSender<ActionPlan> actionPlanSender;

    public ReservedInstanceActionsSender(@Nonnull IMessageSender<ActionPlan> actionPlanSender) {
        this.actionPlanSender = Objects.requireNonNull(actionPlanSender);
    }

    /**
     * Send actions the market is recommending notification synchronously.
     *
     * @param actionPlan The {@link ActionPlan} protobuf objects describing the RI actions.
     * @throws CommunicationException if persistent communication error occurs
     * @throws InterruptedException if thread is interrupted
     */
    public void notifyActionsRecommended(@Nonnull final ActionPlan actionPlan)
            throws CommunicationException, InterruptedException {
        sendMessage(actionPlanSender, actionPlan);
    }


    protected String describeMessage(
            @Nonnull ActionPlan actionPlan) {
        return ActionPlan.class.getSimpleName() + "[" +
                actionPlan.getTopologyId() + "]";
    }
}
