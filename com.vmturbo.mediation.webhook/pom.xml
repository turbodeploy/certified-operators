<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>xl-sdk-probe-parent</artifactId>
        <groupId>com.vmturbo</groupId>
        <version>8.3.5-SNAPSHOT</version>
        <relativePath>../com.vmturbo.mediation.probe.parent/pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>com.vmturbo.mediation.webhook</artifactId>
    <packaging>jar</packaging>

    <properties>
        <integration-test-phase>integration-test</integration-test-phase>
        <dockerImageName>turbonomic/robot-docker</dockerImageName>
        <dockerImageVersion>1.0.0</dockerImageVersion>
        <turborepo>registry.turbonomic.com</turborepo>
        <dockerRobotImage>${turborepo}/${dockerImageName}:${dockerImageVersion}</dockerRobotImage>
        <robotCommand>'cd /usr/src/project/target; robot --name ${project.artifactId} --outputdir integrationTest ../src/it'</robotCommand>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>com.vmturbo</groupId>
                <artifactId>vmturbo-sdk-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <!-- enable jacoco reporting for line coverage visualizations -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacocoVersion}</version>
                <configuration>
                    <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                </configuration>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>jacoco.agent.argLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>CLASS</element>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.80</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Need to use argLine in order to get jacoco to play nice with other plugins -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <argLine>${jacoco.agent.argLine}</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs.version}</version>
                <configuration>
                    <effort>More</effort>
                    <threshold>High</threshold>
                    <failOnError>true</failOnError>
                    <maxHeap>512</maxHeap>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-libs</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!-- outputDirectory>${was.dir.path}</outputDirectory -->
                            <includeScope>compile</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>integration-tests</id>
            <activation>
                <os>
                    <family>!windows</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <environmentVariables>
                                <DOCKER_HOST>unix:///var/run/docker.sock</DOCKER_HOST>
                            </environmentVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <phase>${integration-test-phase}</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>${project.basedir}/src/it/execute.sh</argument>
                                        <argument>${project.version}</argument>
                                        <argument>${project.basedir}</argument>
                                        <argument>${dockerRobotImage}</argument>
                                        <argument>'${robotCommand}'</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <!-- Logging -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j2.Version}</version>
        </dependency>
        <!-- Logging comes from SDK class loader, so scope is provided -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <scope>provided</scope>
            <version>${log4j2.Version}</version>
        </dependency>

        <!-- SDK -->
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.platform.sdk.common</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Unit testing related libraries: junit and mockito -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.mediation.connector.common</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- needed by wiremock, otherwise it throws a NoSuchMethodError. -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <!-- Needed for probeharness test-->
        <dependency>
            <groupId>javax.websocket</groupId>
            <artifactId>javax.websocket-api</artifactId>
            <version>1.1</version>
        </dependency>
    </dependencies>
</project>
