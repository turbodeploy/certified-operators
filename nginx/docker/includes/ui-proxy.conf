###
# !!! WARNING: this include requires the `$ui_servers` variable to be declared !!!
#
# We are using variables for the upstream servers instead of an upstream entry because
# of the DNS caching problem -- only nginx plus will dynamically resolve the upstream
# servers
#
# For details see https://www.nginx.com/blog/dns-service-discovery-nginx-plus/
##

# Add response header for debugging
add_header X-Turbo-Upstream "UI" always;

proxy_intercept_errors on;
recursive_error_pages on;

# UI Proxy Failover in case the UI Pod has not been deployed b/c of old tc8-operator
# This is temporary until the latest version of tc8-operator has been fully adopted in the wild
error_page 501 = @ui_upstream_failover;
error_page 502 = @ui_upstream_failover;
error_page 504 = @ui_upstream_failover;
error_page 503 = @ui_upstream_failover;
if ($ui_servers = unset) {
    return 501;
}

proxy_pass         http://$ui_servers:8080;
proxy_set_header   Host $http_host;
proxy_set_header   X-Real-IP $remote_addr;
proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_connect_timeout 10s;
proxy_read_timeout 6000s;

# START:  NGINX HARDENING
# Hide Nginx version
server_tokens off;

#Add cookie security and httponly headers
proxy_cookie_path / "/; HTTPOnly; Secure";
# END:  NGINX HARDENING

# Ensure the proxy-side redirect from API gets rewritten to the gateway address
proxy_set_header   X-Forwarded-Proto $scheme;
proxy_redirect     http://$http_host/ $scheme://$http_host/;

access_log  /var/log/nginx/access.log  upstream_ws;