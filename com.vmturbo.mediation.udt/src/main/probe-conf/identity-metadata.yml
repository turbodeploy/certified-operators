# PURPOSE
# This file specifies metadata specifying which fields on an EntityDTO should be used to uniquely identify
# entities discovered by this probe. Each type of entity discovered by the probe should specify which
# properties to use in order to uniquely identify entities of that type.

# PROPERTY TYPES
# A nonVolatile Identifying property is constant for a given Entity for the duration of its lifetime.
#    Example: Virtual Machine id.
# A Volatile Identifying property is constant for a given Entity until that Entity goes through some major
# externally initiated change.
#    Example: The id of the Physical Machine hosting a Virtual Machine (this can change - ie a VM move -
#    but happens very infrequently).
# Heuristic properties are properties that can be consulted when primary properties are identical between
# two objects, but volatile primary properties have changed.  By comparing heuristic properties we can come
# up with a best match for a real-world entity.
#
# The heuristicThreshold is used by the identity service when matching heuristic properties
# to determine what percentage of heuristic properties must match in order to consider
# two objects to be the same. A heuristicThreshold of 50 would mean that at least 1/2 of
# the heuristic properties must match for two entities to be considered to be the same.
# If provided, the heuristicThreshold must be in the range [0,100]
# If no heuristicThreshold is provided, a default of 75 will be used.

# SYNTAX:
# Optional or required properties are referenced by their name in the .proto definition.
#    Example: "id" will reference the "id" property present on any EntityDTO.
# Nested properties are separated by a slash.
#    Example: "physicalMachineData/numCPUs" will reference the "numCPUs" property present on
#    EntityDTOs of type PHYSICAL_MACHINE.
# Repeated properties are referenced by their name followed by the string "List".
#    Example: "underlyingList" will reference the list of underlying entities present on any entity.
# Aggregate a single property off a list of elements by using the "*" suffix
#    Example: physicalMachineRelatedData/ioList/macAddress* will reference the list of all macAddresses
#    from the related ios present on an EntityDTO of type PHYSICAL_MACHINE.
# Retrieve a value from a map by indexing it with a string key using the [] notation.
#    Example: entityProperties[myKey] will retrieve the value associated with the string "myKey"
#    in the map of generic properties present on any EntityDTO.

BUSINESS_APPLICATION:
  nonVolatileProperties:
  - id

BUSINESS_TRANSACTION:
  nonVolatileProperties:
  - id

SERVICE:
  nonVolatileProperties:
  - id

APPLICATION_COMPONENT:
  nonVolatileProperties:
  - id

DATABASE_SERVER:
  nonVolatileProperties:
  - id

DATABASE:
  nonVolatileProperties:
  - id

CONTAINER:
  nonVolatileProperties:
  - id

CONTAINER_POD:
  nonVolatileProperties:
  - id

VIRTUAL_MACHINE:
  nonVolatileProperties:
  - id
