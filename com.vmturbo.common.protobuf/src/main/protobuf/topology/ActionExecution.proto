syntax = "proto2";
package topology;

option java_package = "com.vmturbo.common.protobuf.topology";

import "action/ActionDTO.proto";
import "workflow/WorkflowDTO.proto";

message ExecuteActionRequest {
    // The ID of the action being executed.
    // The Action Orchestrator is responsible
    // for managing ID's.
    optional int64 action_id = 1;

    // The ID of the target on which the action
    // should be executed. All entities involved
    // in the action should exist on this target.
    optional int64 target_id = 2;

    // The ID of the target which discovers the entities of the action.
    optional int64 origin_target_id = 7;

    // The action information.
    optional action.ActionSpec action_spec = 3;

    // Any action may be overridden by a "workflow" specification
    optional workflow.Workflow workflow = 4;

    // The Action Type that will be mapped to the Probe Action Type.
    optional action.ActionType action_type = 5;

    optional string explanation = 6;
}

message ExecuteActionResponse {}

service ActionExecutionService {
    // Start executing an action. The call returns
    // once the action is started. Updates about the
    // progress, success, or failure of the action come
    // in asynchronously over the notification system.
    //
    // TODO (roman, Feb 6 2017): Consider returning updates
    // in a stream here, instead of over the message bus.
    rpc ExecuteAction(ExecuteActionRequest) returns (ExecuteActionResponse);
}
