syntax = "proto2";
package action;

option java_package = "com.vmturbo.common.protobuf.action";

import "action/ActionDTO.proto";

// Sent as an update when an action is in progress.
message ActionProgress {
    // The ID of the action whose status is described by this message.
    required int64 actionId = 1;

    // current action progress represented as a percentage (0..100)
    required int32 progressPercentage = 2;

    // action state description, for example ("Moving VM...")
    optional string description = 3;

    // The stable ID of the action whose status is described by this message.
    optional int64 actionStableId = 4;
}

// Sent as an update when an action completes successfully.
message ActionSuccess {
    // The ID of the action whose status is described by this message.
    required int64 actionId = 1;

    // A description of what was successfully completed.
    optional string successDescription = 2;

    // The action spec for the action.
    optional ActionSpec action_spec = 3;

    // The stable ID of the action whose status is described by this message.
    optional int64 actionStableId = 4;
}

// Sent as an update when an action completes and fails.
message ActionFailure {
    // The ID of the action whose status is described by this message.
    required int64 actionId = 1;

    // A description of the error that caused the failure.
    optional string errorDescription = 2;

    // The action spec for the action.
    optional ActionSpec action_spec = 3;

    // The stable ID of the action whose status is described by this message.
    optional int64 actionStableId = 4;
}

// Sent when the set of actions have been updated in the action orchestrator
message ActionsUpdated {
    // The ID of the action plan that was consumed.
    optional int64 action_plan_id = 1;

    // Information about the generated action plan.
    optional ActionPlanInfo action_plan_info = 2;

    // Deprecated in favour of the context ID inside ActionPlanInfo.
    //
    // The ID of the topology context. Used to differentiate, for example, between real and plan contexts.
    // If not set, it is an error.
    optional int64 __deprecated__topology_context_id = 3 [deprecated = true];

    optional UpdateFailure updateFailure = 4;

    // Number of actions recorded in the action orchestrator when processing the plan.
    optional int32 action_count = 5;

    message UpdateFailure {
        optional string error_message = 1;
    }

}