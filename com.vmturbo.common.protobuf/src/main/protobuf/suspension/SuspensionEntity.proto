syntax = "proto2";
package suspension_entity;

option java_package = "com.vmturbo.common.protobuf.suspension";

import "suspension/SuspensionFilter.proto";

message SuspensionEntity {
  optional int64 oid = 1;
  optional string name = 2;
  optional int64 account_oid = 3;
  optional string account_name = 4;
  optional SuspensionEntityProvider provider = 5;
  optional SuspensionEntityState state = 6;
  optional bool suspendable = 7;
  optional SuspensionEntityType entity_type = 8;
  optional int64 region_oid = 9;
  optional string region_name = 10;
  optional string instance_type = 11;
  repeated SuspensionEntityTags tags = 12;
  optional CurrencyAmount cost = 13;
  repeated SuspensionEntitySchedule schedules = 14;
}

message SuspensionEntitySchedule {
  optional int64 oid = 1;
  optional string name = 2;
}

enum SuspensionEntityProvider {
  SUSPENSION_ENTITY_PROVIDER_UNSPECIFIED = 0;
  SUSPENSION_ENTITY_PROVIDER_AWS = 1;
  SUSPENSION_ENTITY_PROVIDER_AZURE = 2;
  SUSPENSION_ENTITY_PROVIDER_GCP = 3;
}


enum SuspensionEntityState {
  SUSPENSION_ENTITY_STATE_UNSPECIFIED = 0;
  SUSPENSION_ENTITY_STATE_STOPPED = 1;
  SUSPENSION_ENTITY_STATE_RUNNING = 2;
  SUSPENSION_ENTITY_STATE_STARTING = 3;
  SUSPENSION_ENTITY_STATE_STOPPING = 4;
  SUSPENSION_ENTITY_STATE_TERMINATING = 5;
  SUSPENSION_ENTITY_STATE_TERMINATED = 6;
  SUSPENSION_ENTITY_STATE_MISSING = 7;
}

enum SuspensionEntityType {
  SUSPENSION_ENTITY_TYPE_UNSPECIFIED = 0;
  SUSPENSION_ENTITY_TYPE_COMPUTE = 1;
  SUSPENSION_ENTITY_TYPE_ACCOUNT = 2;
  SUSPENSION_ENTITY_TYPE_REGION = 3;
}

message SuspensionEntityResolvedScopeRequest {
  optional int64 oid = 1;
  optional SuspensionEntityType type = 2;
}

message SuspensionEntityResolvedScope {
  optional int64 oid = 1;
  repeated SuspensionEntityResolvedScopeRequest entities = 2;
}

enum SuspensionEntityOrderBy {
  SUSPENSION_ENTITY_ORDER_BY_UNSPECIFIED = 0;
  SUSPENSION_ENTITY_ORDER_BY_DISPLAY_NAME = 1;
  SUSPENSION_ENTITY_ORDER_BY_TYPE = 2;
  SUSPENSION_ENTITY_ORDER_BY_STATE = 3;
  SUSPENSION_ENTITY_ORDER_BY_ACCOUNT_NAME = 4;
  SUSPENSION_ENTITY_ORDER_BY_PROVIDER = 5;
  SUSPENSION_ENTITY_ORDER_BY_REGION_NAME = 6;
  SUSPENSION_ENTITY_ORDER_BY_INSTANCE_TYPE = 7;
  SUSPENSION_ENTITY_ORDER_BY_COST = 8;
  SUSPENSION_ENTITY_ORDER_BY_SCHEDULE_DISPLAY_NAME = 9;
}

message SuspensionEntityRequest {
  repeated suspension_filter.StringFilter display_name = 1;
  repeated SuspensionEntityType type = 2;
  repeated SuspensionEntityState status = 3;
  repeated suspension_filter.StringFilter account_names = 4;
  repeated SuspensionEntityProvider providers = 5;
  repeated suspension_filter.StringFilter region_names = 6;
  repeated suspension_filter.StringFilter instance_types = 7;
  repeated suspension_filter.DoubleFilter cost = 8;
  repeated suspension_filter.StringFilter tags = 9;
  optional string cursor = 10;
  optional int32 limit = 11;
  optional SuspensionEntityOrderBy order_by = 12;
  optional bool descending = 13;
  repeated int64 scopes = 14;
  repeated SuspensionEntityResolvedScope resolved_scopes = 15;
  optional suspension_filter.LogicalOperator logical_operator = 16;
  repeated suspension_filter.StringFilter schedule_names = 17;
}

message SuspensionEntityTags {
  optional string key = 1;
  repeated string values = 2;
}

// An amount of money, expressed in some currency.
message CurrencyAmount {
  // The currency in which the amount is expressed.
  // This is the ISO 4217 numeric code.
  // The default (840) is the USD currency code.
  //
  // We use the ISO 4217 standard so that in the future it would be easier to integrate
  // with JSR 354: Money and Currency API.
  optional int32 currency = 1 [default = 840];

  // The value, in the currency.
  optional double amount = 2;
}

message SuspensionEntityResponse {
  optional int32 total = 1;
  optional string next_cursor = 2;
  repeated SuspensionEntity suspension_entities = 3;
}

service SuspensionEntityService {
  rpc List(SuspensionEntityRequest) returns (SuspensionEntityResponse);
}
