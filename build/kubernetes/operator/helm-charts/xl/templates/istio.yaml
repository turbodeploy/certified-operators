{{- if .Values.istioingress.enabled }}
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: t8c-gateway
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    istio: t8c-ingressgateway-{{ .Release.Name }}
  servers:
  - hosts:
    - {{ .Values.global.ingress.domain | default "*.turbonomic.com" | quote }}
    port:
      number: 80
      name: http
      protocol: HTTP
    tls:
      httpsRedirect: true
      minProtocolVersion: TLSV1_2
  - hosts:
    - {{ .Values.global.ingress.domain | default "*.turbonomic.com" | quote }}
    port:
      number: 443
      name: https
      protocol: HTTPS
    tls:
      mode: SIMPLE
      serverCertificate: /etc/istio/ingressgateway-certs/tls.crt
      privateKey: /etc/istio/ingressgateway-certs/tls.key
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: ui
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  gateways:
    - t8c-gateway
  hosts:
    - {{ .Values.global.ingress.domain | default "*.turbonomic.com" | quote }}
  http:
  - match:
    - uri:
        exact: /apidoc
    - uri:
        exact: /swagger
    redirect:
      uri: /apidoc/
  - match:
    - uri:
        exact: /apidoc/
    - uri:
        exact: /swagger/
    - uri:
        exact: /swagger/external/
    redirect:
      uri: /apidoc/index.html
  - match:
    - uri:
        prefix: /apidoc/
    - uri:
        prefix: /swagger/
    rewrite:
      uri: /swagger/external/
    route:
    - destination:
        host: api.{{ .Release.Namespace }}.svc.cluster.local
        port:
          number: 8080
  - match:
    - uri:
        exact: /
    - uri:
        prefix: /api
    - uri:
        prefix: /app
    - uri:
        prefix: /assets
    - uri:
        prefix: /doc
    - uri:
        prefix: /vmturbo/rest
    - uri:
        prefix: /vmturbo/saml
    route:
    - destination:
        host: api.{{ .Release.Namespace }}.svc.cluster.local
        port:
          number: 8080
  - match:
    - uri:
        prefix: /vmturbo/messages
    route:
    - destination:
        host: api.{{ .Release.Namespace }}.svc.cluster.local
        port:
          number: 8080
    websocketUpgrade: true
{{- if .Values.istioingress.routes }}
{{ toYaml .Values.istioingress.routes | indent 2 }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: t8c-istio-ingressgateway
  labels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      istio: t8c-ingressgateway-{{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      istio: t8c-ingressgateway-{{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        istio: t8c-ingressgateway-{{ .Release.Name }}
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - name: istio-proxy
        image: docker.io/istio/proxyv2:1.4.0
        imagePullPolicy: IfNotPresent
        args:
        - proxy
        - router
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --log_output_level
        - info
        - --drainDuration
        - '45s' #drainDuration
        - --parentShutdownDuration
        - '1m0s' #parentShutdownDuration
        - --connectTimeout
        - '10s' #connectTimeout
        - --serviceCluster
        - t8c-istio-ingressgateway
        - --zipkinAddress
        - zipkin:9411
        - --proxyAdminPort
        - "15000"
        - --statusPort
        - "15020"
{{- if .Values.istioingress.mtls }}
        - --controlPlaneAuthPolicy
        - MUTUAL_TLS
        - --discoveryAddress
        - istio-pilot.istio-system.svc.cluster.local:15011
{{ else }}
        - --controlPlaneAuthPolicy
        - NONE
        - --discoveryAddress
        - istio-pilot.istio-system.svc.cluster.local:15010
{{- end }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.serviceAccountName
        - name: ISTIO_META_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: ISTIO_META_CONFIG_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ISTIO_META_ROUTER_MODE
          value: sni-dnat
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: ISTIO_META_WORKLOAD_NAME
          value: t8c-istio-ingressgateway
        - name: ISTIO_META_OWNER
          value: kubernetes://api/apps/v1/namespaces/{{ .Release.Namespace }}/deployments/t8c-istio-ingressgateway
        - name: ISTIO_META_USER_SDS
          value: "false"
        - name: SDS_ENABLED
          value: "false"
        - name: ISTIO_META_CLUSTER_ID
          value: Kubernetes
        - name: ISTIO_METAJSON_LABELS
          value: '{"app":"{{ .Chart.Name }}","istio":"t8c-ingressgateway-{{ .Release.Name }}"}'
        - name: ISTIO_META_MESH_ID
          value: cluster.local
        ports:
        - containerPort: 15020
          name: status-port
        - containerPort: 80
          name: http2
        - containerPort: 443
          name: https
        - containerPort: 15443
          name: tls
        - containerPort: 15090
          name: http-envoy-prom
        readinessProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz/ready
            port: 15020
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "2"
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: istio-certs
          mountPath: /etc/certs
          readOnly: true
        - name: ingressgateway-certs
          mountPath: "/etc/istio/ingressgateway-certs"
          readOnly: true
        - name: ingressgateway-ca-certs
          mountPath: "/etc/istio/ingressgateway-ca-certs"
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: istio-certs
        secret:
          secretName: istio.default
          optional: true
      - name: ingressgateway-certs
        secret:
          secretName: "istio-ingressgateway-certs"
          optional: true
      - name: ingressgateway-ca-certs
        secret:
          secretName: "istio-ingressgateway-ca-certs"
          optional: true
---
apiVersion: v1
kind: Service
metadata:
  name: t8c-istio-ingressgateway
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    istio: t8c-ingressgateway-{{ .Release.Name }}
  {{- with .Values.global.ingress.annotations }}
  annotations:
{{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    istio: t8c-ingressgateway-{{ .Release.Name }}
  {{- if .Values.global }}
    {{- if .Values.global.externalIP }}
  externalIPs:
  - {{ .Values.global.externalIP }}
    {{ end }}
  ports:
  - name: status-port
    port: 15020
  - name: http2
    port: 80
  - name: https
    port: 443
  - name: tls
    port: 15443
---
  {{- end }}
  {{- if .Values.global.certmanager.enabled }}
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: t8c-istio-gateway
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  secretName: istio-ingressgateway-certs
  issuerRef:
    name: {{ .Values.global.certmanager.issuer }}
  commonName: {{ .Values.global.ingress.domain | default "*.turbonomic.com" | quote }}
  acme:
    config:
    - dns01:
        provider: cloud-dns
      domains:
        - {{ .Values.global.ingress.domain | default "*.turbonomic.com" | quote }}
---
  {{ else }}
    {{- range .Values.global.ingress.secrets }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .name }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .certificate | b64enc }}
  tls.key: {{ .key | b64enc }}
---
    {{- end }}
  {{- end }}
{{- end }}
