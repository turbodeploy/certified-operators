{{ if .Values.global }}
  {{ if not .Values.global.enableExternalSecrets }}
    {{/* Kubernetes secrets are disabled for auth, so use the PV legacy behavior instead */}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: {{ .Chart.Name }}
        {{- if or .Values.storageAnnotations .Values.global.storageAnnotations }}
    annotations:
        {{- with .Values.storageAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.storageAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
    labels:
        zone: dmz
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
    accessModes:
        - ReadWriteOnce
        {{- if .Values.global }}
        {{- if .Values.global.storageSelector }}
    selector:
        matchLabels:
            partition: {{ .Release.Namespace }}-auth
        {{- end }}
        {{- if .Values.global.storageClassName }}
    storageClassName: {{ .Values.global.storageClassName }}
        {{- end }}
        {{- end }}
    resources:
        requests:
            storage: 1Gi
---
  {{- end }}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    zone: dmz
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  template:
    metadata:
{{- if .Values.global }}
  {{- if or .Values.annotations .Values.global.annotations }}
      annotations:
    {{- with .Values.annotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.global.annotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}
{{- end }}
      labels:
{{- include "labels" . | nindent 8 }}
        zone: dmz
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
{{- if .Values.global }}
  {{- if or .Values.serviceAccountName .Values.global.serviceAccountName }}
      serviceAccountName: {{ template "serviceAccountName" . }}
  {{- end }}
{{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ template "image" . }}
        imagePullPolicy: {{ template "pullPolicy" . }}
        env:
{{ template "java.setJVMEnvironmentOptions" . }}
{{ toYaml .Values.env | indent 8 }}
{{- if .Values.global }}
  {{- if or .Values.logtostdout .Values.global.logtostdout }}
        - name: LOG_TO_STDOUT
          value: "true"
  {{- end }}
{{- end }}
        ports:
          - containerPort: 8080
          - containerPort: 9001
        livenessProbe:
          httpGet:
            port: 8080
            path: /health
{{- include "common.getLivenessThresholds" . | indent 10 }}
        readinessProbe:
          httpGet:
            port: 8080
            path: /health
{{- include "common.getReadinessThresholds" . | indent 10 }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
{{ if .Values.global }}
  {{ if .Values.global.disableSameTrustStore }}
        - mountPath: /vault/trust
          name: auth-truststore-secret
          readOnly: true
  {{- else }}
        - mountPath: /vault/trust
          name: common-truststore-secret
          readOnly: true
  {{- end }}
{{- end }}
        - mountPath: /vault/key
          name: auth-keystore-secret
          readOnly: true
        - mountPath: /vault/mtlsSecrets
          name: auth-mtls-secret
          readOnly: true
{{ if .Values.global }}
  {{ if not .Values.global.enableExternalSecrets }}
    {{/* Kubernetes secrets are disabled for auth, so use the PV legacy behavior instead */}}
        - mountPath: /home/turbonomic/data
          name: auth
  {{- end }}
{{- end }}
{{- if .Values.global }}
  {{- if .Values.global.enableExternalSecrets }}
    {{/* Kubernetes secrets are enabled for auth. */}}
        - mountPath: /home/turbonomic/data/master_keys
          name: master-key-secret
          readOnly: true
    {{/* Optionally mount the legacy encryption key to be read in as part of upgrades. */}}
        - mountPath: /home/turbonomic/data/helper_dir
          name: auth-secret
          readOnly: true
  {{- end }}
{{- end }}
        - mountPath: /etc/turbonomic
          name: turbo-volume
          readOnly: true
        - mountPath: /tmp
          name: auth-tmpfs0
{{- if .Values.global }}
  {{- if or .Values.dbSecretName .Values.global.dbSecretName }}
        - mountPath: /vault/secrets
          name: db-creds
          readOnly: true
  {{- end -}}
  {{- if .Values.global.registry }}
    {{- if .Values.global.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.imagePullSecret }}
    {{- else -}}
      {{- if and .Values.global.imageUsername .Values.global.imagePassword }}
      imagePullSecrets:
      - name: turbocred
      {{- end -}}
    {{- end -}}
  {{- end -}}
  {{- with .Values.global.nodeSelector }}
      nodeSelector:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.affinity }}
      affinity:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.tolerations }}
      tolerations:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.securityContext }}
      securityContext:
{{- toYaml . | nindent 8 }}
  {{- end }}
{{- end }}
      restartPolicy: Always
      volumes:
{{ if .Values.global }}
  {{ if not .Values.global.enableExternalSecrets }}
    {{/* Kubernetes secrets are disabled for auth, so use the PV legacy behavior instead */}}
      - name: auth
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}
  {{- end }}
{{- end }}
      - name: turbo-volume
        configMap:
          name: global-properties-{{ .Release.Name }}
          optional: true
      - name: auth-truststore-secret
        secret:
          secretName: auth-truststore-secret
          optional: true
      - name: common-truststore-secret
        secret:
          secretName: common-truststore-secret
          optional: true
      - name: auth-keystore-secret
        secret:
          secretName: auth-keystore-secret
          optional: true
      - name: auth-mtls-secret
        secret:
          secretName: auth-mtls-secret
          optional: true
{{- if .Values.global }}
  {{- if .Values.global.enableExternalSecrets }}
    {{/* Kubernetes secrets are enabled for auth. Attach one secret for the directory of secret files. */}}
      - name: master-key-secret
        secret:
          secretName: master-key-secret
          optional: true
    {{/* Optionally mount the legacy encryption key to be read in as part of upgrades. */}}
      - name: auth-secret
        secret:
          secretName: auth-secret
          optional: true
  {{- end }}
{{- end }}
      - name: auth-tmpfs0
        emptyDir: {}
{{- if .Values.global }}
  {{- if or .Values.dbSecretName .Values.global.dbSecretName }}
      - name: db-creds
        secret:
          secretName: {{ template "dbSecretName" . }}
          optional: true
  {{- end }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
  annotations:
{{- include "serviceAnnotations" . | nindent 4 }}
  labels:
{{- include "serviceLabels" . | nindent 4 }}
    zone: dmz
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  ports:
  - name: http-auth
    port: 8080
{{- if .Values.global }}
  {{- if or .Values.debug .Values.global.debug }}
  - name: tcp-auth-debug
    port: 8000
  {{- end -}}
{{- end }}
  - name: grpc-auth
    port: 9001
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
