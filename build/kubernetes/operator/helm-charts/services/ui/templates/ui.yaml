apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    zone: dmz
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  template:
    metadata:
{{- if .Values.global }}
  {{- if or .Values.annotations .Values.global.annotations }}
      annotations:
    {{- with .Values.annotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.global.annotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}
{{- end }}
      labels:
        zone: dmz
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ template "image" . }}
        imagePullPolicy: {{ template "pullPolicy" . }}
        env:
{{ toYaml .Values.env | indent 8 }}
        ports:
          - containerPort: 8080
        livenessProbe:
          httpGet:
            path: "/healthz/ready"
            port: 8080
            scheme: HTTP
{{- include "common.getLivenessThresholds" . | indent 10 }}
        readinessProbe:
          httpGet:
            path: "/healthz/ready"
            port: 8080
            scheme: HTTP
{{- include "common.getReadinessThresholds" . | indent 10 }}
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /var/cache/nginx
          name: ui-data
        - mountPath: /var/run
          name: ui-run
        - mountPath: /var/lib/nginx
          name: ui-nginx-lib
        - mountPath: /tmp
          name: ui-tmpfs0
{{- if .Values.global }}
  {{- if .Values.global.registry }}
    {{- if .Values.global.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.imagePullSecret }}
    {{- else -}}
      {{- if and .Values.global.imageUsername .Values.global.imagePassword }}
      imagePullSecrets:
      - name: turbocred
      {{- end -}}
    {{- end -}}
  {{- end -}}
  {{- with .Values.global.nodeSelector }}
      nodeSelector:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.affinity }}
      affinity:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.tolerations }}
      tolerations:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.securityContext }}
      securityContext:
{{- toYaml . | nindent 8 }}
  {{- end }}
{{- end }}
      restartPolicy: Always
      volumes:
      - name: ui-data
        emptyDir: {}
      - name: ui-run
        emptyDir: {}
      - name: ui-nginx-lib
        emptyDir: {}
      - name: ui-tmpfs0
        emptyDir: {}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
  labels:
    zone: dmz
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- if .Values.global }}
  {{- with .Values.global.ingress.annotations }}
  annotations:
{{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
spec:
  ports:
  - name: http-ui
    port: 8080
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
