apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Chart.Name }}-certs
  labels:
    zone: public
    app.kubernetes.io/name: {{ .Chart.Name }}-certs
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    zone: public
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        zone: public
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ template "image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: API
          value: api.{{ .Release.Namespace }}.svc.cluster.local
        - name: TOPOLOGY
          value: topology-processor.{{ .Release.Namespace }}.svc.cluster.local
{{ toYaml .Values.env | indent 8 -}}
        readinessProbe:
          tcpSocket:
            port: 8443
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/nginx/certs
          name: nginx-certs
        - mountPath: /var/www/load-status
          name: nginx-load-status
        - mountPath: /var/cache/nginx
          name: nginx-data
        - mountPath: /var/run
          name: nginx-run
        - mountPath: /tmp
          name: nginx-tmpfs0
{{- if .Values.global }}
  {{- if and .Values.global.registry .Values.global.imageUsername .Values.global.imagePassword }}
      imagePullSecrets:
      - name: turbocred
  {{- end -}}
{{- end }}
      restartPolicy: Always
      securityContext:
        fsGroup: 2000
      volumes:
      - name: nginx-certs
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}-certs
      - name: nginx-load-status
        emptyDir: {}
      - name: nginx-data
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      - name: nginx-tmpfs0
        emptyDir: {}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
  labels:
    zone: internal
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  type: LoadBalancer
  ports:
  - name: https-nginx
    port: 443
    targetPort: 8443
  - name: http-nginx
    port: 80
    targetPort: 8000
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
{{- if .Values.global }}
  {{- if .Values.global.externalIP }}
  externalIPs:
    - {{ .Values.global.externalIP }}
  {{- end -}}
{{- end -}}
