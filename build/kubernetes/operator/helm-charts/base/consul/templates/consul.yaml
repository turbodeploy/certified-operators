{{ if .Values.global }}
  {{ if and (not .Values.global.externalConsul) (not .Values.global.externalConsulIP) }}
    {{/* Consul is not external, so define a PVC and a Deployment for it. */}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Chart.Name }}-data
  {{- if or .Values.storageAnnotations .Values.global.storageAnnotations }}
  annotations:
    {{- with .Values.storageAnnotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.global.storageAnnotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}
  labels:
    zone: secure
    app.kubernetes.io/name: {{ .Chart.Name }}-data
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  accessModes:
  - ReadWriteOnce
{{- if .Values.global }}
  {{- if .Values.global.storageSelector }}
  selector:
    matchLabels:
      partition: {{ .Release.Namespace }}-consul-data
  {{- end }}
  {{- if .Values.global.storageClassName }}
  storageClassName: {{ .Values.global.storageClassName }}
  {{- end }}
{{- end }}
  resources:
    requests:
      storage: {{ .Values.persistence.size }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    zone: secure
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
{{- if .Values.global }}
  {{- if or .Values.annotations .Values.global.annotations }}
      annotations:
    {{- with .Values.annotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.global.annotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}
{{- end }}
      labels:
{{- include "labels" . | nindent 8 }}
        zone: secure
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
{{- if .Values.global }}
  {{- if or .Values.serviceAccountName .Values.global.serviceAccountName }}
      serviceAccountName: {{ template "serviceAccountName" . }}
  {{- end }}
{{- end }}
      containers:
      - name: {{ .Chart.Name }}
{{- if .Values.global }}
  {{- if .Values.global.customImageNames }}
        image: {{ template "consul_image" . }}
  {{- else }}
        image: {{ template "image" . }}
  {{- end }}
        imagePullPolicy: {{ template "pullPolicy" . }}
{{- end }}
        args:
        - vmt-server
        - -client=0.0.0.0
        - -ui
        env:
        - name: CONSUL_BIND_INTERFACE
          value: eth0
{{- if .Values.global }}
  {{- if or .Values.logtostdout .Values.global.logtostdout }}
        - name: LOG_TO_STDOUT
          value: "true"
  {{- end }}
{{- end }}
        ports:
          - containerPort: 8301
          - containerPort: 8302
          - containerPort: 8303
          - containerPort: 8400
          - containerPort: 8500
          - containerPort: 8600
        livenessProbe:
          httpGet:
            port: 8500
            path: /ui/
{{- include "common.getLivenessThresholds" . | indent 10 }}
        readinessProbe:
          httpGet:
            port: 8500
            path: /ui/
{{- include "common.getReadinessThresholds" . | indent 10 }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /consul/data
          name: consuldata
        - mountPath: /tmp
          name: consul-tmpfs0
{{- if .Values.global }}
  {{- if .Values.global.registry }}
    {{- if .Values.global.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.imagePullSecret }}
    {{- else -}}
      {{- if and .Values.global.imageUsername .Values.global.imagePassword }}
      imagePullSecrets:
      - name: turbocred
      {{- end -}}
    {{- end -}}
  {{- end -}}
  {{- with .Values.global.nodeSelector }}
      nodeSelector:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.affinity }}
      affinity:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.tolerations }}
      tolerations:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.securityContext }}
      securityContext:
{{- toYaml . | nindent 8 }}
  {{- end }}
{{- end }}
      restartPolicy: Always
      volumes:
      - name: consuldata
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}-data
      - name: consul-tmpfs0
        emptyDir: {}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  {{ end }}
{{ end }}
---
  {{/* We always need a service for Consul. */}}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
  annotations:
{{- include "serviceAnnotations" . | nindent 4 }}
  labels:
{{- include "serviceLabels" . | nindent 4 }}
    zone: secure
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  ports:
    # the port that this service should serve on
    - name: http-consul
      port: {{ .Values.global.externalConsulPort | default 8500 }}
    - name: rpc-consul
      port: 8400
    - name: tcp-serflan
      port: 8301
    - name: tcp-serfwan
      port: 8302
    - name: tcp-server
      port: 8300
    - name: udp-consuldns
      port: 8600
{{- if .Values.global }}
  {{- if .Values.global.externalConsul }}
    {{/* Consul is externalized by DNS name */}}
  type: ExternalName
  externalName: {{ .Values.global.externalConsul }}
  {{- end -}}
  {{- if and (not .Values.global.externalConsul) (not .Values.global.externalConsulIP)}}
    {{/* Consul is running as a container within Kubernetes */}}
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  {{- end -}}
  {{- if and (.Values.global.externalConsulIP) (not .Values.global.externalConsul)}}
    {{/* Consul is externalized by IP; headless service requires a manual endpoint definition */}}
---
apiVersion: v1
kind: Endpoints
metadata:
  name: {{ .Chart.Name }}
  labels:
    zone: internal
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
subsets:
  - addresses:
    - ip: {{ .Values.global.externalConsulIP | quote }}
    ports:
    - name: http-consul
      port: {{ .Values.global.externalConsulPort | default 8500 }}
    - name: rpc-consul
      port: 8400
    - name: tcp-serflan
      port: 8301
    - name: tcp-serfwan
      port: 8302
    - name: tcp-server
      port: 8300
    - name: udp-consuldns
      port: 8600
  {{- end -}}
{{- end }}
