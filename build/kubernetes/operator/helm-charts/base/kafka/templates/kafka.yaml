apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    zone: internal
    io.kompose.service: kafka-log
  name: {{ .Chart.Name }}-log
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    zone: internal
    io.kompose.service: kafka
  name: {{ .Chart.Name }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        zone: internal
        io.kompose.service: kafka
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ template "image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
{{ toYaml .Values.env | indent 8 -}}
        readinessProbe:
          tcpSocket:
            port: 9092
        resources:
{{ toYaml .Values.resources | indent 12 }}
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /home/kafka
          name: kafka-log
          subPath: data
        - mountPath: /tmp
          name: kafka-tmpfs0
{{- if .Values.global }}
  {{- if and .Values.global.registry .Values.global.imageUsername .Values.global.imagePassword }}
      imagePullSecrets:
      - name: turbocred
  {{- end -}}
{{- end }}
      restartPolicy: Always
      securityContext:
        fsGroup: 2000
      volumes:
      - name: kafka-log
        persistentVolumeClaim:
          claimName: kafka-log
      - name: kafka-tmpfs0
        emptyDir: {}
  selector:
    matchLabels:
      io.kompose.service: kafka
---
apiVersion: v1
kind: Service
metadata:
  labels:
    zone: internal
    io.kompose.service: kafka
  name: {{ .Chart.Name }}
spec:
  ports:
  - name: tcp-kafka
    port: 9092
  selector:
    io.kompose.service: kafka
