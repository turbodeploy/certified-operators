apiVersion: charts.helm.k8s.io/v1
kind: Xl
metadata:
  name: xl-release
spec:
  # This configuration file is used as an example on how to enable monitoring Turbonomic with Turbonomic.
  #
  # Monitor Turbonomic with Turbonomic is achieved by enabling the following components:
  # - kubeturbo
  # - prometurbo, which packages the turbodif probe by default
  # - prometheus
  # - prometheus-mysql-exporter
  #
  # Please make sure to:
  # - Apply the cluster-role.yaml and the cluster-role-binding.yaml. This is needed for the
  #   t8c-operator to create clusterroles and clusterrolebindings required by prometheus and kubeturbo.
  # - For appliance install ONLY: Enable prometheus-mysql-exporter, and set mysql.user and mysql.pass
  #   in order for prometheus-mysql-exporter to login to the database.

  # Global settings
  global:
    repository: turbonomic
    tag: 8.1.4-SNAPSHOT
    externalIP: 10.0.2.15
    externalDbIP: 10.0.2.15
    externalTimescaleDBIP: 10.0.2.15
    externalArangoDBName: arango.turbo.svc.cluster.local

  grafana:
    # Grafana is disabled by default. To enable it, uncomment:
    #enabled: true
    adminPassword: admin
    grafana.ini:
      database:
        # Store data in sqlite3 (no persistence across restarts) by default. To persist, uncomment:
        #type: postgres

        # The password. TODO - figure out the correct/ideal way to deploy this without risking
        # losing/resetting the password on upgrade.
        # See: https://github.com/helm/charts/issues/5167
        password: grafana

  # Kubeturbo probe
  kubeturbo:
    enabled: true

  # Prometurbo metric server and Turbodif probe
  prometurbo:
    enabled: true

  # Prometheus mysql exporter
  prometheus-mysql-exporter:
    # ONLY enable for appliance install
    enabled: true
    # Configure the username and password to login to Turbonomic db
    mysql:
      user: root
      pass: vmturbo

  # Prometheus server and built-in exporters
  prometheus:
    enabled: true
