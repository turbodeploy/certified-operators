apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mysqldata
  name: mysqldata
  namespace: turbonomic
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 70Gi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mysql-log
  name: mysql-log
  namespace: turbonomic
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mysql-var
  name: mysql-var
  namespace: turbonomic
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose --file ../docker-compose.yml.200k convert
    kompose.version: 1.12.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
  namespace: turbonomic
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db
    spec:
      #securityContext:
      #  runAsUser: 101
      #  fsGroup: 2006
      containers:
      - env:
        - name: DB_MEM_PCT_FOR_BUFFER_POOL
          value: "80"
        image: localhost:5000/turbonomic/db:1.0.0
        name: db
        imagePullPolicy: Always
        ports:
        - containerPort: 3306
        resources:
          limits:
            memory: "8589934592"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysqldata
        - mountPath: /var/log
          name: mysql-log
      #  - mountPath: /var/run
      #    name: mysql-var
        - mountPath: /tmp
          name: db-tmpfs0
      imagePullSecrets:
      - name: turbocred
      restartPolicy: Always
      volumes:
      - name: mysqldata
        persistentVolumeClaim:
          claimName: mysqldata
      - name: mysql-log
        persistentVolumeClaim:
          claimName: mysql-log
      #- name: mysql-var
      #  persistentVolumeClaim:
      #    claimName: mysql-var
      - emptyDir:
          medium: Memory
        name: db-tmpfs0
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose --file ../docker-compose.yml.200k convert
    kompose.version: 1.12.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
  namespace: turbonomic
spec:
  ports:
  - name: "3306"
    port: 3306
    targetPort: 3306
  selector:
    io.kompose.service: db
status:
  loadBalancer: {}
