apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    zone: public
    io.kompose.service: nginx-data
  name: {{ .Chart.Name }}-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    zone: public
    io.kompose.service: nginx-run
  name: {{ .Chart.Name }}-run
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    zone: public
    io.kompose.service: nginx-claim0
  name: {{ .Chart.Name }}-claim0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    zone: public
    io.kompose.service: nginx-claim1
  name: {{ .Chart.Name }}-claim1
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    zone: public
    io.kompose.service: nginx
  name: {{ .Chart.Name }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        zone: public
        io.kompose.service: nginx
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ template "image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: API
          value: api.{{ .Release.Namespace }}.svc.cluster.local
        - name: TOPOLOGY
          value: topology-processor.{{ .Release.Namespace }}.svc.cluster.local
#        - name: DNS_RESOLVER
#          value: 10.233.0.3 # byo k8s DNS
#          value: 10.100.0.10 # eks DNS
#          value: 10.0.0.10 # aks DNS
#          value: 10.23.240.10 # gke DNS
        - name: clustermgr_host
          value: clustermgr
        - name: clustermgr_port
          value: "8080"
        - name: clustermgr_retry_delay_sec
          value: "10"
        - name: component_type
          value: nginx
        - name: consul_host
          value: consul
        - name: instance_id
          value: nginx-1
        ports:
        - containerPort: 8443
        - containerPort: 8000
        readinessProbe:
          tcpSocket:
            port: 8443
        securityContext:
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/nginx/certs
          name: nginx-claim0
        - mountPath: /var/www/load-status
          name: nginx-claim1
        - mountPath: /var/lib/nginx
          name: nginx-data
        - mountPath: /var/run
          name: nginx-run
        - mountPath: /tmp
          name: nginx-tmpfs0
      imagePullSecrets:
      - name: turbocred
      restartPolicy: Always
      securityContext:
        fsGroup: 2000
      volumes:
      - name: nginx-claim0
        persistentVolumeClaim:
          claimName: nginx-claim0
      - name: nginx-claim1
        persistentVolumeClaim:
          claimName: nginx-claim1
      - name: nginx-data
        persistentVolumeClaim:
          claimName: nginx-data
      - name: nginx-run
        persistentVolumeClaim:
          claimName: nginx-run
      - emptyDir:
          medium: Memory
          sizeLimit: "1Gi"
        name: nginx-tmpfs0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    zone: public
    io.kompose.service: nginx
  name: {{ .Chart.Name }}
spec:
  type: LoadBalancer
  ports:
  - name: "443"
    port: 443
    targetPort: 8443
  - name: "80"
    port: 80
    targetPort: 8000
  selector:
    io.kompose.service: nginx
#  externalIPs:
#  - 10.0.2.15
