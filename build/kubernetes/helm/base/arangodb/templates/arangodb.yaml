{{ if .Values.global }}
  {{ if (not .Values.global.externalArangoDBName) }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Chart.Name }}
  labels:
    zone: secure
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  accessModes:
  - ReadWriteOnce
{{- if .Values.global }}
  {{- if .Values.global.storageSelector }}
  selector:
    matchLabels:
      partition: {{ .Release.Namespace }}-arangodb
  {{- end }}
  {{- if .Values.global.storageClassName }}
  storageClassName: {{ .Values.global.storageClassName }}
  {{- end }}
{{- end }}
  resources:
    requests:
      storage: {{ .Values.persistence.arangodb }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    zone: secure
    app.kubernetes.io/name: {{ .Chart.Name }}-apps
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  name: {{ .Chart.Name }}-apps
spec:
  accessModes:
    - ReadWriteOnce
{{- if .Values.global }}
  {{- if .Values.global.storageSelector }}
  selector:
    matchLabels:
      partition: {{ .Release.Namespace }}-arangodb-apps
  {{- end }}
  {{- if .Values.global.storageClassName }}
  storageClassName: {{ .Values.global.storageClassName }}
  {{- end }}
{{- end }}
  resources:
    requests:
      storage: {{ .Values.persistence.apps }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Chart.Name }}-dump
  labels:
    zone: secure
    app.kubernetes.io/name: {{ .Chart.Name }}-dump
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  accessModes:
  - ReadWriteOnce
{{- if .Values.global }}
  {{- if .Values.global.storageSelector }}
  selector:
    matchLabels:
      partition: {{ .Release.Namespace }}-arangodb-dump
  {{- end }}
  {{- if .Values.global.storageClassName }}
  storageClassName: {{ .Values.global.storageClassName }}
  {{- end }}
{{- end }}
  resources:
    requests:
      storage: {{ .Values.persistence.dump }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    zone: secure
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
{{- if .Values.global }}
  {{- if or .Values.annotations .Values.global.annotations }}
      annotations:
    {{- with .Values.annotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.global.annotations }}
{{- toYaml . | nindent 8 }}
    {{- end }}
  {{- end }}
{{- end }}
      labels:
        zone: secure
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ template "image" . }}
        imagePullPolicy: {{ template "pullPolicy" . }}
        env:
{{ toYaml .Values.env | indent 8 }}
        ports:
          - containerPort: 8529
          - containerPort: 8599
        livenessProbe:
          httpGet:
            port: 8529
            path: /_admin/server/availability
{{- include "common.getLivenessThresholds" . | indent 10 }}
        readinessProbe:
          httpGet:
            port: 8529
            path: /_admin/server/availability
{{- include "common.getReadinessThresholds" . | indent 10 }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
        securityContext:
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /var/lib/arangodb3
          name: arangodb
        - mountPath: /var/lib/arangodb3-apps
          name: arangodb-apps
        - mountPath: /home/arangodb/arangodb-dump
          name: arangodb-dump
        - mountPath: /tmp
          name: arangodb-tmpfs0
{{- if .Values.global }}
  {{- if .Values.global.registry }}
    {{- if .Values.global.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.imagePullSecret }}
    {{- else -}}
      {{- if and .Values.global.imageUsername .Values.global.imagePassword }}
      imagePullSecrets:
      - name: turbocred
      {{- end -}}
    {{- end -}}
  {{- end -}}
  {{- with .Values.global.nodeSelector }}
      nodeSelector:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.affinity }}
      affinity:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.tolerations }}
      tolerations:
{{- toYaml . | nindent 8 }}
  {{- end }}
  {{- with .Values.global.securityContext }}
      securityContext:
{{- toYaml . | nindent 8 }}
  {{- end }}
{{- end }}
      restartPolicy: Always
      volumes:
      - name: arangodb
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}
      - name: arangodb-apps
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}-apps
      - name: arangodb-dump
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}-dump
      - name: arangodb-tmpfs0
        emptyDir: {}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  {{ end }}
{{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
  labels:
    zone: secure
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
{{- if .Values.global }}
  {{- if .Values.global.externalArangoDBName }}
  type: ExternalName
  externalName: {{ .Values.global.externalArangoDBName }}
  {{- end -}}
{{- end }}
  ports:
  - name: tcp-arangodb
    port: 8529
  - name: http-arangodb-dump
    port: 8599
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
