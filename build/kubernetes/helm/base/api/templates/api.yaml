apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    zone: dmz
    io.kompose.service: api-claim1
  name: {{ .Chart.Name }}-claim1
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    zone: dmz
    io.kompose.service: api
  name: {{ .Chart.Name }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    zone: dmz
    io.kompose.service: api
  name: {{ .Chart.Name }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        zone: dmz
        io.kompose.service: api
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ template "api_image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: JAVA_OPTS
          value: {{ .Values.java.options }}
        - name: clustermgr_host
          value: clustermgr
        - name: clustermgr_port
          value: "8080"
        - name: clustermgr_retry_delay_sec
          value: "10"
        - name: component_type
          value: api
        - name: consul_host
          value: consul
        - name: instance_id
          value: api-1
        - name: kafkaServers
          value: kafka:9092
        - name: realtimeTopologyContextId
          value: "777777"
        - name: kafkaServers
          value: kafka:9092
        ports:
        - containerPort: 8080
          name: api-port
        readinessProbe:
          httpGet:
            port: 8080
            path: /health
        resources:
{{ toYaml .Values.resources | indent 12 }}
        securityContext:
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /home/turbonomic/data
          name: api
        - mountPath: /tmp/certs
          name: api-claim1
        - mountPath: /tmp
          name: api-tmpfs0
      imagePullSecrets:
      - name: turbocred
      restartPolicy: Always
      securityContext:
        fsGroup: 2000
      volumes:
      - name: api
        persistentVolumeClaim:
          claimName: api
      - name: api-claim1
        persistentVolumeClaim:
          claimName: api-claim1
      - emptyDir:
          medium: Memory
        name: api-tmpfs0
---
apiVersion: v1
kind: Service
metadata:
  labels:
    zone: dmz
    io.kompose.service: api
  name: {{ .Chart.Name }}
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  - name: "20002"
    port: 20002
    targetPort: 8000
  - name: "9001"
    port: 9001
    targetPort: 9001
  selector:
    io.kompose.service: api
