# Default values for xl.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
#  registry: index.docker.io
#  imagePullSecret: turbocred
#  imageUsername: turbouser
#  imagePassword: turbopassword
  repository: turbonomic
  tag: 7.21.2
#  pullPolicy: IfNotPresent
  nodeSelector: {}
  tolerations: []
  affinity: {}
  annotations: {}
  # setting these to be more tolerant than the k8s defaults, since we run in some pretty resource
  # constrained environments where the readiness probe failures don't really fix anything. We should
  # adjust these back down when we have a horizontally-scaled environment.
  readinessPeriodSecs: 20
  readinessTimeoutSecs: 10
#  externalIP: 10.233.0.3 # byo k8s DNS
#              10.100.0.10 # eks DNS
#              10.0.0.10 # aks DNS
#              10.23.240.10 # gke DNS
#  externalArangoDBName: xl-influxdb.us-east-1.elb.amazonaws.com
#  externalConsul: xl-consul.ca-central-1.rds.amazonaws.com
#  externalDBName: xl-hackaton.cmachd0izjog.ca-central-1.rds.amazonaws.com
#  externalInfluxDBName: xl-influxdb.us-east-1.elb.amazonaws.com
#  externalKafka: xl-kafka.us-east-1.elb.amazonaws.com
#  externalSyslog: a608c38591a9f11e9ad190efbcf8c7e5-1236730884.us-east-1.elb.amazonaws.com
  elk: false
#  debug: true
  dev_options: "-agentlib:jdwp=transport=dt_socket,address=0.0.0.0:8000,server=y,suspend=n"
#  storageClassName: default
#  storageSelector: true
  securityContext:
    fsGroup: 2000
  certmanager:
    enabled: false
    certissuer: letsencrypt-prod
  ingress:
    # domain: *.turbonomic.com
    secrets:
    ## If you're providing your own certificates, please use this to add the certificates as secrets
    ## key and certificate should start with -----BEGIN CERTIFICATE----- or
    ## -----BEGIN RSA PRIVATE KEY-----
    ##
    ## It is also possible to create and manage the certificates outside of this helm chart
    # - name: nginx-ingressgateway-certs
    #   key:
    #   certificate:

nginxingress:
  enabled: true
istioingress:
  enabled: false
  mtls: true
platform:
  enabled: true
control:
  enabled: true
metron:
  enabled: false
kubeturbo:
  enabled: false
prometurbo:
  enabled: false
training:
  enabled: false

loki:
  enabled: false
promtail:
  enabled: false
fluent-bit:
  enabled: false
prometheus:
  enabled: false
grafana:
  enabled: false
chronograf:
  enabled: false
timescaledb:
  enabled: false
postgresql:
  fullnameOverride: timescaledb
  image:
    repository: timescale/timescaledb
    tag: latest-pg11
  postgresqlPassword: password
  postgresqlDatabase: postgres
  securityContext:
    fsGroup: 70
    runAsUser: 70
  metrics:
    enabled: true
jaeger:
  enabled: false
  provisionDataStore:
    cassandra: true
    elasticsearch: false
  cassandra:
    config:
      dc_name: dc1
datacloud:
  enabled: false

# Enable mediation
actionscript:
  enabled: false
aix:
  enabled: false
appdynamics:
  enabled: false
appinsights:
  enabled: false
aws:
  enabled: false
baremetal:
  enabled: false
datadog:
  enabled: false
awslambda:
  enabled: false
azure:
  enabled: false
cloudfoundry:
  enabled: false
compellent:
  enabled: false
customdata:
  enabled: false
dynatrace:
  enabled: false
gcp:
  enabled: false
hpe3par:
  enabled: false
hds:
  enabled: false
horizon:
  enabled: false
hyperflex:
  enabled: false
hyperv:
  enabled: false
intersight:
  enabled: false
istio:
  enabled: false
mssql:
  enabled: false
netapp:
  enabled: false
netflow:
  enabled: false
newrelic:
  enabled: false
nutanix:
  enabled: false
oneview:
  enabled: false
openstack:
  enabled: false
pivotal:
  enabled: false
pure:
  enabled: false
rhv:
  enabled: false
scaleio:
  enabled: false
snmp:
  enabled: false
terraform:
  enabled: false
tetration:
  enabled: false
ucs:
  enabled: false
ucsdirector:
  enabled: false
vcd:
  enabled: false
vcenter:
  enabled: false
vmax:
  enabled: false
vmm:
  enabled: false
vplex:
  enabled: false
wmi:
  enabled: false
xtremio:
  enabled: false
