version: '2'

# Service definitions for extension in production environments. For details see
# https://docs.docker.com/compose/extends/#extending-services
# See also common-services.yml
services:
  rsyslog-prod:
    extends:
      file: common-services.yml
      service: common-service
    image: turbonomic/syslog
    volumes:
      - syslogdata:/home/vmtsyslog
      - auditlogdata:/var/log/turbonomic
    restart: always

  nginx-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/nginx
    ports:
      - "443:8443"
      - "80:8000"
    environment:
      component_type: nginx
      instance_id: nginx-1
    volumes:
      - /tmp/certs:/etc/nginx/certs
      - /tmp/status:/var/www/status
      - nginx-data:/var/lib/nginx
      - nginx-run:/var/run
    restart: always

  consul-prod:
    extends:
      file: common-services.yml
      service: common-service
    image: turbonomic/com.vmturbo.consul
    command: ["vmt-server", "-client=0.0.0.0"]
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - "constraint:node==/node-4/"
    networks:
      default:
        # choose an address high enough to avoid IPs for other components that docker will assign
        ipv4_address: 10.10.10.128
    volumes:
      - consuldata:/consul/data
    mem_limit: 50M
    restart: always

  db-prod:
    extends:
      file: common-services.yml
      service: common-service
    image: turbonomic/db
    stop_grace_period: '30m'
    volumes:
      - mysqldata:/var/lib/mysql
      - mysql_log:/var/log
      - mysql_var:/var/run
    restart: always
    environment:
        DB_MEM_PCT_FOR_BUFFER_POOL: 60

  zoo1-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/zookeeper
    restart: always
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: zoo1
    volumes:
      - zoo1-data:/var/lib/zoo

  kafka1-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/kafka
    restart: always
    mem_limit: 20000M
    environment:
      BROKER_ID: 1
      KAFKA_INTERNAL_PORT: 9092
      KAFKA_INTERNAL_BROKER_ADDRESS: kafka1
      ZOOKEEPER_HOSTS: "zoo1:2181"
      KAFKA_LOG_RETENTION_HRS: 24
      KAFKA_MAX_MESSAGE_BYTES: 67108864
    volumes:
      - kafka1-log:/home/kafka/data

  auth-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/auth
    environment:
      component_type: auth
      instance_id: auth-1
      kafkaServers: kafka1:9092
      consul_host: consul
      JAVA_OPTS: "-Xmx512M -verbose:gc -XX:+PrintGCDateStamps"
    volumes:
      - auth:/home/turbonomic/data
    mem_limit: 768M
    restart: always

  clustermgr-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/com.vmturbo.clustermgr
    environment:
      component_type: clustermgr
      instance_id: clustermgr-1
      node_name: default
      consul_host: consul
      kafkaServers: kafka1:9092
      serverHttpPort: 8080
      JAVA_OPTS: "-Xmx384M -verbose:gc -XX:+PrintGCDateStamps"
    volumes:
      - clustermgr:/home/turbonomic/data
    mem_limit: 512M
    restart: always

  api-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/com.vmturbo.api.component
    environment:
      component_type: api
      instance_id: api-1
      consul_host: consul
      kafkaServers: kafka1:9092
    volumes:
      - api:/home/turbonomic/data
      - /tmp/certs:/tmp/certs
    restart: always

  market-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/market-component
    environment:
      component_type: market
      instance_id: market-1
      consul_host: consul
      kafkaServers: kafka1:9092
    restart: always

  action-orchestrator-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/action-orchestrator
    environment:
      component_type: action-orchestrator
      instance_id: action-orchestrator-1
      consul_host: consul
      kafkaServers: kafka1:9092
    restart: always

  topology-processor-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/topology-processor
    environment:
      component_type: topology-processor
      instance_id: topology-processor-1
      node_name: default
      consul_host: consul
      kafkaServers: kafka1:9092
    volumes:
      - topology-processor:/home/turbonomic/data
    restart: always

  arangodb-prod:
    extends:
      file: common-services.yml
      service: common-service
    image: turbonomic/arangodb
    environment:
      ARANGO_ROOT_PASSWORD: "root"
    volumes:
      - arangodb:/var/lib/arangodb3
      - arangodb-apps:/var/lib/arangodb3-apps
      - arangodb-dump:/home/arangodb/arangodb-dump
    stop_grace_period: '30m'
    restart: always

  repository-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/com.vmturbo.repository-component
    environment:
      component_type: repository
      instance_id: repository-1
      REPOSITORY_ARANGODB_HOST: arangodb
      kafkaServers: kafka1:9092
    restart: always

  group-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/com.vmturbo.group
    environment:
      consul_host: consul
      component_type: group
      instance_id: group-1
      kafkaServers: kafka1:9092
    restart: always

  history-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/com.vmturbo.history
    environment:
      consul_host: consul
      component_type: history
      instance_id: history-1
      logging.level.com.vmturbo.history: info # change to debug to enable more debugging output
      kafkaServers: kafka1:9092
    restart: always

  plan-orchestrator-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/com.vmturbo.plan.orchestrator
    environment:
      consul_host: consul
      component_type: plan-orchestrator
      instance_id: plan-orchestrator-1
      kafkaServers: kafka1:9092
    restart: always

  reporting-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/com.vmturbo.reports.component
    volumes:
      - reporting:/home/turbonomic/data
    environment:
      consul_host: consul
      component_type: reporting
      instance_id: reporting-1
      kafkaServers: kafka1:9092
      report.files.output.dir: /home/turbonomic/data
    restart: always

  cost-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/com.vmturbo.cost.component
    environment:
      consul_host: consul
      component_type: cost
      instance_id: cost-1
      kafkaServers: kafka1:9092
    restart: always

  influxdb-prod:
    extends:
      file: common-services.yml
      service: common-service
    image: turbonomic/influxdb
    environment:
      METRON_ENABLED: "${METRON_ENABLED}"
    volumes:
      - influxdb:/var/lib/influxdb
      - influxdb-dump:/home/influxdb/influxdb-dump
    mem_limit: 768M
    # Only restart on failure. Allow normal exit. The service will exit normally if
    # the METRON_ENABLED environment flag is not set. Set the METRON_ENABLED flag
    # in the common-services.yml file.
    restart: on-failure

  ml-datastore-prod:
    extends:
      file: common-services.yml
      service: prod-component
    image: turbonomic/ml-datastore
    environment:
      METRON_ENABLED: "${METRON_ENABLED}"
      component_type: ml-datastore
      instance_id: ml-datastore-1
      kafkaServers: kafka1:9092
    # Only restart on failure. Allow normal exit. The component will exit normally if
    # the METRON_ENABLED environment flag is not set. Set the METRON_ENABLED flag
    # in the common-services.yml file.
    restart: on-failure

  mediation-vcenter-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.vcenter.component
    environment:
      consul_host: consul
      component_type: mediation-vcenter
      instance_id: mediation-vcenter-1
    restart: always

  mediation-vcenter-browsing-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.vcenter.browsing.component
    environment:
      consul_host: consul
      component_type: mediation-vcenter-browsing
      instance_id: mediation-vcenter-browsing-1
    restart: always

  mediation-hyperv-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.hyperv.component
    environment:
      consul_host: consul
      component_type: mediation-hyperv
      instance_id: mediation-hyperv-1
    restart: always

  mediation-netapp-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.netapp.component
    environment:
      consul_host: consul
      component_type: mediation-netapp
      instance_id: mediation-netapp-1
    restart: always

  mediation-ucs-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.ucs.component
    environment:
      consul_host: consul
      component_type: mediation-ucs
      instance_id: mediation-ucs-1
    restart: always

  mediation-vmax-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.vmax.component
    environment:
      consul_host: consul
      component_type: mediation-vmax
      instance_id: mediation-vmax-1
    restart: always

  mediation-vmm-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.vmm.component
    environment:
      consul_host: consul
      component_type: mediation-vmm
      instance_id: mediation-vmm-1
    restart: always

  mediation-hpe3par-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.hpe3par.component
    environment:
      consul_host: consul
      component_type: mediation-hpe3par
      instance_id: mediation-hpe3par-1
    restart: always

  mediation-pure-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.pure.component
    environment:
      consul_host: consul
      component_type: mediation-pure
      instance_id: mediation-pure-1
    restart: always

  mediation-scaleio-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.scaleio.component
    environment:
      consul_host: consul
      component_type: mediation-scaleio
      instance_id: mediation-scaleio-1
    restart: always

  mediation-hds-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.hds.component
    environment:
      consul_host: consul
      component_type: mediation-hds
      instance_id: mediation-hds-1
    restart: always

  mediation-compellent-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.compellent.component
    environment:
      consul_host: consul
      component_type: mediation-compellent
      instance_id: mediation-compellent-1
    restart: always

  mediation-xtremio-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.xtremio.component
    environment:
      consul_host: consul
      component_type: mediation-xtremio
      instance_id: mediation-xtremio-1
    restart: always

  mediation-vplex-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.vplex.component
    environment:
      consul_host: consul
      component_type: mediation-vplex
      instance_id: mediation-vplex-1
    restart: always

  mediation-rhv-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.rhv.component
    environment:
      consul_host: consul
      component_type: mediation-rhv
      instance_id: mediation-rhv-1
    restart: always

  mediation-openstack-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.openstack.component
    environment:
      consul_host: consul
      component_type: mediation-openstack
      instance_id: mediation-openstack-1

  mediation-ucsdirector-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.ucsdirector.component
    environment:
      consul_host: consul
      component_type: mediation-ucsdirector
      instance_id: mediation-ucsdirector-1
    restart: always

  mediation-aws-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.aws.component
    environment:
      consul_host: consul
      component_type: mediation-aws
      instance_id: mediation-aws-1
      # overriding the tmpdir location because the cloud probes download large files to temp, and we
      # don't want these to go to a memory-backed volume like /tmp
      MORE_JAVA_OPTS: -Djava.io.tmpdir=/home/turbonomic/data
    volumes:
      - mediation-aws:/home/turbonomic/data
    restart: always

  mediation-awsbilling-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.aws.billing.component
    environment:
      consul_host: consul
      component_type: mediation-awsbilling
      instance_id: mediation-awsbilling-1
      # overriding the tmpdir location because the cloud probes download large files to temp, and we
      # don't want these to go to a memory-backed volume like /tmp
      MORE_JAVA_OPTS: -Djava.io.tmpdir=/home/turbonomic/data
    volumes:
      - mediation-awsbilling:/home/turbonomic/data
    restart: always

  mediation-awscost-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.aws.cost.component
    environment:
      consul_host: consul
      component_type: mediation-awscost
      instance_id: mediation-awscost-1
      # overriding the tmpdir location because the cloud probes download large files to temp, and we
      # don't want these to go to a memory-backed volume like /tmp
      MORE_JAVA_OPTS: -Djava.io.tmpdir=/home/turbonomic/data
    volumes:
      - mediation-awscost:/home/turbonomic/data
    restart: always

  mediation-azure-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.azure.component
    environment:
      consul_host: consul
      component_type: mediation-azure
      instance_id: mediation-azure-1
      # overriding the tmpdir location because the cloud probes download large files to temp, and we
      # don't want these to go to a memory-backed volume like /tmp
      MORE_JAVA_OPTS: -Djava.io.tmpdir=/home/turbonomic/data
    volumes:
      - mediation-azure:/home/turbonomic/data
    restart: always

  mediation-oneview-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.oneview.component
    environment:
      consul_host: consul
      component_type: mediation-oneview
      instance_id: mediation-oneview-1
    restart: always

  mediation-vcd-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.vcd.component
    environment:
      consul_host: consul
      component_type: mediation-vcd
      instance_id: mediation-vcd-1
    restart: always

  mediation-mssql-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.database.mssql.component
    environment:
      consul_host: consul
      component_type: mediation-mssql
      instance_id: mediation-mssql-1
    restart: always

  mediation-actionscript-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.actionscript.component
    environment:
      consul_host: consul
      component_type: mediation-actionscript
      instance_id: mediation-actionscript-1
    restart: always

  mediation-wmi-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.apm.wmi.component
    environment:
      consul_host: consul
      component_type: mediation-wmi
      instance_id: mediation-wmi-1
    restart: always

  mediation-snmp-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.apm.snmp.component
    environment:
      consul_host: consul
      component_type: mediation-snmp
      instance_id: mediation-snmp-1
    restart: always

  mediation-appdynamics-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.appdynamics.component
    environment:
      consul_host: consul
      component_type: mediation-appdynamics
      instance_id: mediation-appdynamics-1
    restart: always

  mediation-dynatrace-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.dynatrace.component
    environment:
      consul_host: consul
      component_type: mediation-dynatrace
      instance_id: mediation-dynatrace-1
    restart: always

  mediation-pivotal-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.pivotal.component
    environment:
      consul_host: consul
      component_type: mediation-pivotal
      instance_id: mediation-pivotal-1
    restart: always

  mediation-cloudfoundry-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.cloudfoundry.component
    environment:
      consul_host: consul
      component_type: mediation-cloudfoundry
      instance_id: mediation-cloudfoundry-1
    restart: always

  mediation-istio-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.istio.component
    environment:
      consul_host: consul
      component_type: mediation-istio
      instance_id: mediation-istio-1
    restart: always

  mediation-netflow-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.netflow.component
    environment:
      consul_host: consul
      component_type: mediation-netflow
      instance_id: mediation-netflow-1
    restart: always

  mediation-tetration-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.tetration.component
    environment:
      consul_host: consul
      component_type: mediation-tetration
      instance_id: mediation-tetration-1
    restart: always

  mediation-hyperflex-prod:
    extends:
      file: common-services.yml
      service: prod-mediation-component
    image: turbonomic/com.vmturbo.mediation.hyperflex.component
    environment:
      consul_host: consul
      component_type: mediation-hyperflex
      instance_id: mediation-hyperflex-1
    restart: always
