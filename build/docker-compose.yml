#
# DevelopmentVersion
#
# Docker Container Settings for Turbonomic XL 1.0.0 - for 15K Service Entities.
# A VM size of 16G is recommended.
#
version: '2'

networks:
  default:
    ipam:
      driver: default
      config:
      - subnet: 10.10.10.0/24
        gateway: 10.10.10.1

volumes:
  consuldata: &localdriver
    driver: local
  syslogdata: *localdriver
  syslogdata_rotate: *localdriver
  auditlogdata: *localdriver
  mysqldata: *localdriver
  mysql_var: *localdriver
  mysql_log: *localdriver
  arangodb: *localdriver
  arangodb-apps: *localdriver
  arangodb-dump: *localdriver
  influxdb: *localdriver
  influxdb-dump: *localdriver
  clustermgr: *localdriver
  api: *localdriver
  auth: *localdriver
  market: *localdriver
  # Create a volume for the sample component.
  sample: *localdriver
  action-orchestrator: *localdriver
  topology-processor: *localdriver
  repository: *localdriver
  group: *localdriver
  history: *localdriver
  plan-orchestrator: *localdriver
  reporting: *localdriver
  cost: *localdriver
  ml-datastore: *localdriver
  mediation-vcenter: *localdriver
  mediation-vcenter-browsing: *localdriver
  mediation-stressprobe: *localdriver
  mediation-storagestressprobe: *localdriver
  mediation-hyperv: *localdriver
  mediation-delegatingprobe: *localdriver
  mediation-netapp: *localdriver
  mediation-ucs: *localdriver
  mediation-vmax: *localdriver
  mediation-vmm: *localdriver
  mediation-hpe3par: *localdriver
  mediation-pure: *localdriver
  mediation-scaleio: *localdriver
  mediation-hds: *localdriver
  mediation-compellent: *localdriver
  mediation-xtremio: *localdriver
  mediation-vplex: *localdriver
  mediation-rhv: *localdriver
  mediation-openstack: *localdriver
  mediation-ucsdirector: *localdriver
  mediation-aws: *localdriver
  mediation-awsbilling: *localdriver
  mediation-awscost: *localdriver
  mediation-azure: *localdriver
  mediation-oneview: *localdriver
  mediation-vcd: *localdriver
  mediation-mssql: *localdriver
  mediation-actionscript: *localdriver
  mediation-snmp: *localdriver
  mediation-appdynamics: *localdriver
  mediation-dynatrace: *localdriver
  kafka1-log: *localdriver
  zoo1-data: *localdriver
  nginx-data: *localdriver
  nginx-run: *localdriver
  nginx-home: *localdriver
#  mediation-aix: *localdriver
#  mediation-compellent: *localdriver

services:
  rsyslog:
    extends:
      file: common-services.yml
      service: common-service
    image: turbonomic/syslog
    volumes:
      - syslogdata:/home/vmtsyslog
      - syslogdata_rotate:/var/lib/logrotate
      - auditlogdata:/var/log/turbonomic
    restart: always

  consul:
    extends:
      file: common-services.yml
      service: common-service
    image: turbonomic/com.vmturbo.consul
    command: ["vmt-server", "-client=0.0.0.0", "-ui"]
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - "constraint:node==/node-4/"
    networks:
      default:
        # choose an address high enough to avoid IPs for other components that docker will assign
        ipv4_address: 10.10.10.128
    ports:
      - "${CONSUL_PORT}"
    volumes:
      - consuldata:/consul/data
    restart: always
    mem_limit: 50M
    depends_on:
      - rsyslog
  db:
    extends:
      file: common-services.yml
      service: common-service
    image: turbonomic/db
    volumes:
      - mysqldata:/var/lib/mysql
      - mysql_log:/var/log
      - mysql_var:/var/run
    ports:
      - "${DB_PORT}"
    mem_limit: ${DB_MEM_LIMIT_MB}M
    depends_on:
      - rsyslog
    environment:
        DB_MEM_PCT_FOR_BUFFER_POOL: ${DB_MEM_PCT_FOR_BUFFER_POOL}

  zoo1:
    extends:
      file: common-services.yml
      service: dev-component
    image: turbonomic/zookeeper
    restart: always
    mem_limit: ${ZOOKEEPER_MEM_LIMIT}M
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: zoo1
      SERVER_JVMFLAGS: "-Xmx${ZOOKEEPER_XMX_MB}M"
    volumes:
      - zoo1-data:/var/lib/zoo

  kafka1:
    extends:
      file: common-services.yml
      service: dev-component
    image: turbonomic/kafka
    mem_limit: ${KAFKA_MEM_LIMIT}M
    environment:
      BROKER_ID: 1
      ZOOKEEPER_HOSTS: ${ZOOKEEPER_SERVERS}
      KAFKA_INTERNAL_PORT: ${KAFKA_INTERNAL_PORT}
      KAFKA_INTERNAL_BROKER_ADDRESS: ${KAFKA_INTERNAL_BROKER_ADDRESS}
      KAFKA_EXTERNAL_PORT: ${KAFKA_EXTERNAL_PORT}
      KAFKA_EXTERNAL_BROKER_ADDRESS: ${KAFKA_EXTERNAL_BROKER_ADDRESS}
      KAFKA_LOG_RETENTION_HRS: ${KAFKA_LOG_RETENTION_HRS}
      KAFKA_MAX_MESSAGE_BYTES: ${KAFKA_MAX_MESSAGE_BYTES}
      KAFKA_HEAP_OPTS: "-Xmx${KAFKA_XMX_MB}M -Xms${KAFKA_XMX_MB}M"
    volumes:
      - kafka1-log:/home/kafka/data
    ports:
      # the external port mapping will have to be revisited for clustering, where external ports
      # would need to be unique per-host.
      - "${KAFKA_EXTERNAL_PORT}:${KAFKA_EXTERNAL_PORT}"
    depends_on:
      - rsyslog
      - zoo1

  auth:
    extends:
      file: common-services.yml
      service: dev-component
    image: turbonomic/auth
    depends_on:
      - clustermgr
      - consul
      - db
    ports:
      - "${AUTH_PORT}"
      - "${AUTH_DEBUG_PORT}"
    environment:
      component_type: auth
      instance_id: auth-1
      kafkaServers: ${KAFKA_SERVERS}
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${AUTH_XMX_MB}M ${AUTH_SYSTEM_PROPERTIES}"
    volumes:
      - auth:/home/turbonomic/data
    mem_limit: ${AUTH_MEM_LIMIT_MB}M

  clustermgr:
    extends:
      file: common-services.yml
      service: dev-component
    image: turbonomic/com.vmturbo.clustermgr
    depends_on:
      - consul
      - rsyslog
      - kafka1
    ports:
      - "${CLUSTERMGR_PORT}"
      - "${CLUSTERMGR_DEBUG_PORT}"
    environment:
      component_type: clustermgr
      instance_id: clustermgr-1
      serverHttpPort: 8080
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${CLUSTERMGR_XMX_MB}M ${CLUSTERMGR_SYSTEM_PROPERTIES}"
      node_name: default
      consul_host: consul
      kafkaServers: ${KAFKA_SERVERS}
    volumes:
      - clustermgr:/home/turbonomic/data
    mem_limit: ${CLUSTERMGR_MEM_LIMIT_MB}M

  api:
    extends:
      file: common-services.yml
      service: dev-component
    image: turbonomic/com.vmturbo.api.component
    depends_on:
      - clustermgr
      - kafka1
      - nginx
    ports:
      - "${API_HTTP_PORT}"
      - "${API_DEBUG_PORT}"
    environment:
      component_type: api
      instance_id: api-1
      kafkaServers: ${KAFKA_SERVERS}
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${API_XMX_MB}M ${API_SYSTEM_PROPERTIES}"
    volumes:
      - api:/home/turbonomic/data
      - /tmp/certs:/tmp/certs
# customize this line to mount your ux development folder directly on the /www folder in the api
#      - /Users/...user.../...path-to-ux-app-folder.../ux-app/.tmp:/www:ro
    mem_limit: ${API_MEM_LIMIT_MB}M

  nginx:
    extends:
      file: common-services.yml
      service: dev-component
    image: turbonomic/nginx
    ports:
      - "${NGINX_HTTP_PORT}"
      - "${NGINX_HTTPS_PORT}"
    environment:
      API: api
      TOPOLOGY: topology-processor
      DNS_RESOLVER: 127.0.0.11
    volumes:
      - /tmp/certs:/etc/nginx/certs
      - /tmp/load_status:/var/www/load_status
      - nginx-data:/var/lib/nginx
      - nginx-run:/var/run
      - nginx-home:/home/nginx

  market:
    extends:
      file: common-services.yml
      service: dev-component
    image: turbonomic/market-component
    depends_on: &clustermgrdep
      - clustermgr
      - kafka1
    ports:
      - "${MARKET_PORT}"
      - "${MARKET_DEBUG_PORT}"
    environment:
      component_type: market
      instance_id: market-1
      kafkaServers: ${KAFKA_SERVERS}
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MARKET_XMX_MB}M ${MARKET_SYSTEM_PROPERTIES}"
    volumes:
      - market:/home/turbonomic/data
    mem_limit: ${MARKET_MEM_LIMIT_MB}M

  action-orchestrator:
    extends:
      file: common-services.yml
      service: dev-component
    image: turbonomic/action-orchestrator
    depends_on:
      - db
      - auth
      - clustermgr
      - kafka1
    ports:
      - "${ACTION_ORCHESTRATOR_PORT}"
      - "${ACTION_ORCHESTRATOR_DEBUG_PORT}"
    environment:
      component_type: action-orchestrator
      instance_id: action-orchestrator-1
      kafkaServers: ${KAFKA_SERVERS}
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${ACTION_ORCHESTRATOR_XMX_MB}M ${ACTION_ORCHESTRATOR_SYSTEM_PROPERTIES}"
    volumes:
      - action-orchestrator:/home/turbonomic/data
    mem_limit: ${ACTION_ORCHESTRATOR_MEM_LIMIT_MB}M

  topology-processor:
    extends:
      file: common-services.yml
      service: dev-component
    image: turbonomic/topology-processor
    ports:
      - "${TOPOLOGY_PROCESSOR_PORT}"
      - "${TOPOLOGY_PROCESSOR_DEBUG_PORT}"
    depends_on:
      - db
      - clustermgr
      - kafka1
      - auth
    environment:
      component_type: topology-processor
      instance_id: topology-processor-1
      node_name: default
      kafkaServers: ${KAFKA_SERVERS}
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${TOPOLOGY_PROCESSOR_XMX_MB}M ${TOPOLOGY_PROCESSOR_SYSTEM_PROPERTIES}"
    volumes:
      - topology-processor:/home/turbonomic/data
    mem_limit: ${TOPOLOGY_PROCESSOR_MEM_LIMIT_MB}M

  sample:
    extends:
      file: common-services.yml
      service: dev-component
    # The image, created by the docker-maven-plugin, has the
    # name turbonomic/<artifactId from pom>
    image: turbonomic/sample
    depends_on:
      - clustermgr
    # These are the ports that get exposed outside the container network.
    # The ports on the left-hand side should be globally unique.
    ports:
       # The values for these environment variables are in the XL/build/.env file.
       # See: https://docs.docker.com/compose/env-file/
       #
       # 8080 is the port for the HTTP server (defined in bootstrap.yml).
       # The left-hand side (8091) is the port on the host that will map to 8080.
       # So to access the HTTP server you will go to: <docker-host>:8091.
       - "${SAMPLE_PORT}"
       # 8000 is the debug port for the JVM. You will use the left-hand side port (20007) when
       # connecting to the container from a debugger/IDE.
       - "${SAMPLE_DEBUG_PORT}"
    environment:
      component_type: sample
      instance_id: sample-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${SAMPLE_XMX_MB}M ${SAMPLE_SYSTEM_PROPERTIES}"
    volumes:
      - sample:/home/turbonomic/data

  arangodb:
    extends:
      file: common-services.yml
      service: common-service
    image: turbonomic/arangodb
    environment:
      ARANGO_ROOT_PASSWORD: "root"
    ports:
      - "${ARANGODB_PORT}"
      - "${ARANGODB_DUMP_PORT}"
    volumes:
      - arangodb:/var/lib/arangodb3
      - arangodb-apps:/var/lib/arangodb3-apps
      - arangodb-dump:/home/arangodb/arangodb-dump
    mem_limit: ${ARANGODB_MEM_LIMIT_MB}M

  influxdb:
    extends:
      file: common-services.yml
      service: common-service
    image: turbonomic/influxdb
    environment:
      METRON_ENABLED: "${METRON_ENABLED}"
      LOG_TO_STDOUT: "true"
      # Uncomment to specify the dump interval for influx. Default is once per day if unspecified.
      # INFLUX_DUMP_INTERVAL_SECONDS: 300
    ports:
      - "${INFLUXDB_PORT}"
      - "${INFLUXDB_DUMP_PORT}"
    volumes:
      - influxdb:/var/lib/influxdb
      - influxdb-dump:/home/influxdb/influxdb-dump
    mem_limit: ${INFLUXDB_MEM_LIMIT_MB}M

  ml-datastore:
    extends:
      file: common-services.yml
      service: dev-component
    image: turbonomic/ml-datastore
    ports:
      - "${ML_DATASTORE_PORT}"
      - "${ML_DATASTORE_DEBUG_PORT}"
    depends_on:
      - influxdb
      - clustermgr
      - kafka1
      - auth
    environment:
      component_type: ml-datastore
      instance_id: ml-datastore-1
      kafkaServers: ${KAFKA_SERVERS}
      METRON_ENABLED: "${METRON_ENABLED}"
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${ML_DATASTORE_XMX_MB}M ${ML_DATASTORE_SYSTEM_PROPERTIES}"
    volumes:
      - ml-datastore:/home/turbonomic/data
    mem_limit: ${ML_DATASTORE_MEM_LIMIT_MB}M

  repository:
    extends:
      file: common-services.yml
      service: dev-component
    image: turbonomic/com.vmturbo.repository-component
    ports:
      - "${REPOSITORY_PORT}"
      - "${REPOSITORY_DEBUG_PORT}"
    depends_on:
      - arangodb
      - clustermgr
      - kafka1
      - auth
    environment:
      component_type: repository
      instance_id: repository-1
      REPOSITORY_ARANGODB_HOST: arangodb
      kafkaServers: ${KAFKA_SERVERS}
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${REPOSITORY_XMX_MB}M ${REPOSITORY_SYSTEM_PROPERTIES}"
    volumes:
      - repository:/home/turbonomic/data
    mem_limit: ${REPOSITORY_MEM_LIMIT_MB}M

  group:
    extends:
      file: common-services.yml
      service: dev-component
    image: turbonomic/com.vmturbo.group
    ports:
      - "${GROUP_PORT}"
      - "${GROUP_DEBUG_PORT}"
    depends_on:
      - clustermgr
      - db
      - auth
    volumes:
      - group:/home/turbonomic/data
    environment:
      component_type: group
      instance_id: group-1
      logging.level.com.vmturbo.group: info # change to debug to enable more debugging output
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${GROUP_XMX_MB}M ${GROUP_SYSTEM_PROPERTIES}"
      kafkaServers: ${KAFKA_SERVERS}
    mem_limit: ${GROUP_MEM_LIMIT_MB}M

  history:
    extends:
      file: common-services.yml
      service: dev-component
    image: turbonomic/com.vmturbo.history
    ports:
      - "${HISTORY_PORT}"
      - "${HISTORY_DEBUG_PORT}"
    depends_on:
      - db
      - clustermgr
      - kafka1
      - auth
    volumes:
      - history:/home/turbonomic/data
    environment:
      component_type: history
      instance_id: history-1
      logging.level.com.vmturbo.history: INFO
      kafkaServers: ${KAFKA_SERVERS}
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${HISTORY_XMX_MB}M ${HISTORY_SYSTEM_PROPERTIES}"
    mem_limit: ${HISTORY_MEM_LIMIT_MB}M

  plan-orchestrator:
    extends:
      file: common-services.yml
      service: dev-component
    image: turbonomic/com.vmturbo.plan.orchestrator
    ports:
      - "${PLAN_ORCHESTRATOR_PORT}"
      - "${PLAN_ORCHESTRATOR_DEBUG_PORT}"
    depends_on:
      - db
      - clustermgr
      - kafka1
      - auth
    volumes:
      - plan-orchestrator:/home/turbonomic/data
    environment:
      component_type: plan-orchestrator
      instance_id: plan-orchestrator-1
      kafkaServers: ${KAFKA_SERVERS}
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${PLAN_ORCHESTRATOR_XMX_MB}M ${PLAN_ORCHESTRATOR_SYSTEM_PROPERTIES}"
    mem_limit: ${PLAN_ORCHESTRATOR_MEM_LIMIT_MB}M

  reporting:
    extends:
      file: common-services.yml
      service: dev-component
    image: turbonomic/com.vmturbo.reports.component
    ports:
      - "${REPORTING_PORT}"
      - "${REPORTING_DEBUG_PORT}"
    depends_on:
      - db
      - clustermgr
      - auth
    volumes:
      - reporting:/home/turbonomic/data
    environment:
      component_type: reporting
      instance_id: reporting-1
      report.files.output.dir: /home/turbonomic/data
      kafkaServers: ${KAFKA_SERVERS}
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${REPORTING_XMX_MB}M ${REPORTING_SYSTEM_PROPERTIES}"
    mem_limit: ${REPORTING_MEM_LIMIT_MB}M

  cost:
      extends:
        file: common-services.yml
        service: dev-component
      image: turbonomic/com.vmturbo.cost.component
      ports:
        - "${COST_PORT}"
        - "${COST_DEBUG_PORT}"
      depends_on:
        - clustermgr
        - db
        - kafka1
        - auth
      volumes:
        - cost:/home/turbonomic/data
      environment:
        component_type: cost
        instance_id: cost-1
        logging.level.com.vmturbo.cost: info # change to debug to enable more debugging output
        JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${COST_XMX_MB}M ${COST_SYSTEM_PROPERTIES}"
        kafkaServers: ${KAFKA_SERVERS}
      mem_limit: ${COST_MEM_LIMIT_MB}M

  mediation-vcenter:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.vcenter.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_VCENTER_PORT}"
      - "${MEDIATION_VCENTER_DEBUG_PORT}"
    environment:
      component_type: mediation-vcenter
      instance_id: mediation-vcenter-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_VCENTER_XMX_MB}M ${MEDIATION_VCENTER_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-vcenter:/home/turbonomic/data
    mem_limit: ${MEDIATION_VCENTER_MEM_LIMIT_MB}M

  mediation-vcenter-browsing:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.vcenter.browsing.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_VCENTER_BROWSING_PORT}"
      - "${MEDIATION_VCENTER_BROWSING_DEBUG_PORT}"
    environment:
      component_type: mediation-vcenter-browsing
      instance_id: mediation-vcenter-browsing-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_VCENTER_BROWSING_XMX_MB}M ${MEDIATION_VCENTER_BROWSING_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-vcenter-browsing:/home/turbonomic/data
    mem_limit: ${MEDIATION_VCENTER_BROWSING_MEM_LIMIT_MB}M

  mediation-stressprobe:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.stressprobe.component
    ports:
      - "${MEDIATION_STRESSPROBE_PORT}"
      - "${MEDIATION_STRESSPROBE_DEBUG_PORT}"
    depends_on: *clustermgrdep
    environment:
      component_type: mediation-stressprobe
      instance_id: mediation-stressprobe-1
      serverHttpPort: 8080
      serverGrpcPort: 9001
      consul_host: consul
      consul_port: 8500
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_STRESSPROBE_XMX_MB}M ${MEDIATION_STRESSPROBE_SYSTEM_PROPERTIES}"
      kvStoreRetryIntervalMillis : 1000
    volumes:
      - mediation-stressprobe:/home/turbonomic/data
    mem_limit: ${MEDIATION_STRESSPROBE_MEM_LIMIT_MB}M

  mediation-storagestressprobe:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.storagestressprobe.component
    ports:
      - "${MEDIATION_STORAGESTRESSPROBE_PORT}"
      - "${MEDIATION_STORAGESTRESSPROBE_DEBUG_PORT}"
    depends_on: *clustermgrdep
    environment:
      serverHttpPort: 8080
      serverGrpcPort: 9001
      consul_host: consul
      consul_port: 8500
      component_type: mediation-stressprobe
      instance_id: mediation-storagestressprobe-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_STORAGESTRESSPROBE_XMX_MB}M ${MEDIATION_STORAGESTRESSPROBE_SYSTEM_PROPERTIES}"
      kvStoreRetryIntervalMillis : 1000
    volumes:
      - mediation-storagestressprobe:/home/turbonomic/data
    mem_limit: ${MEDIATION_STORAGESTRESSPROBE_MEM_LIMIT_MB}M

  mediation-delegatingprobe:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.delegatingprobe.component
    ports:
      - "${MEDIATION_DELEGATINGPROBE_PORT}"
      - "${MEDIATION_DELEGATINGPROBE_DEBUG_PORT}"
    depends_on: *clustermgrdep
    environment:
      component_type: mediation-delegatingprobe
      instance_id: mediation-delegatingprobe-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_DELEGATINGPROBE_XMX_MB}M ${MEDIATION_DELEGATINGPROBE_SYSTEM_PROPERTIES}"
      kvStoreRetryIntervalMillis : 1000
    volumes:
      - mediation-delegatingprobe:/home/turbonomic/data
    mem_limit: ${MEDIATION_DELEGATINGPROBE_MEM_LIMIT_MB}M

  mediation-hyperv:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.hyperv.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_HYPERV_PORT}"
      - "${MEDIATION_HYPERV_DEBUG_PORT}"
    environment:
      component_type: mediation-hyperv
      instance_id: mediation-hyperv-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_HYPERV_XMX_MB}M ${MEDIATION_HYPERV_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-hyperv:/home/turbonomic/data
    mem_limit: ${MEDIATION_HYPERV_MEM_LIMIT_MB}M

  mediation-netapp:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.netapp.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_NETAPP_PORT}"
      - "${MEDIATION_NETAPP_DEBUG_PORT}"
    environment:
      component_type: mediation-netapp
      instance_id: mediation-netapp-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_NETAPP_XMX_MB}M ${MEDIATION_NETAPP_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-netapp:/home/turbonomic/data
    mem_limit: ${MEDIATION_NETAPP_MEM_LIMIT_MB}M

  mediation-ucs:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.ucs.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_UCS_PORT}"
      - "${MEDIATION_UCS_DEBUG_PORT}"
    environment:
      component_type: mediation-ucs
      instance_id: mediation-ucs-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_UCS_XMX_MB}M ${MEDIATION_UCS_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-ucs:/home/turbonomic/data
    mem_limit: ${MEDIATION_UCS_MEM_LIMIT_MB}M

#  mediation-aix:
#    extends:
#      file: common-services.yml
#      service: dev-component
#    image: turbonomic/com.vmturbo.mediation.aix.component
#    ports:
#      - "${MEDIATION_AIX_DEBUG_PORT}"
#    depends_on: *clustermgrdep
#    environment:
#      component_type: mediation-aix
#      instance_id: mediation-aix-1
#      JAVA_OPTS: "${DEV_JAVA_OPTS}"
#    volumes:
#      - mediation-aix:/home/turbonomic/data

  mediation-vmax:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.vmax.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_VMAX_PORT}"
      - "${MEDIATION_VMAX_DEBUG_PORT}"
    environment:
      component_type: mediation-vmax
      instance_id: mediation-vmax-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_VMAX_XMX_MB}M ${MEDIATION_VMAX_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-vmax:/home/turbonomic/data
    mem_limit: ${MEDIATION_VMAX_MEM_LIMIT_MB}M

  mediation-vmm:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.vmm.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_VMM_PORT}"
      - "${MEDIATION_VMM_DEBUG_PORT}"
    environment:
      component_type: mediation-vmm
      instance_id: mediation-vmm-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_VMM_XMX_MB}M ${MEDIATION_VMM_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-vmm:/home/turbonomic/data
    mem_limit: ${MEDIATION_VMM_MEM_LIMIT_MB}M

  mediation-hpe3par:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.hpe3par.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_HPE3PAR_PORT}"
      - "${MEDIATION_HPE3PAR_DEBUG_PORT}"
    environment:
      component_type: mediation-hpe3par
      instance_id: mediation-hpe3par-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_HPE3PAR_XMX_MB}M ${MEDIATION_HPE3PAR_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-hpe3par:/home/turbonomic/data
    mem_limit: ${MEDIATION_HPE3PAR_MEM_LIMIT_MB}M

  mediation-pure:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.pure.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_PURE_PORT}"
      - "${MEDIATION_PURE_DEBUG_PORT}"
    environment:
      component_type: mediation-pure
      instance_id: mediation-pure-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_PURE_XMX_MB}M ${MEDIATION_PURE_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-pure:/home/turbonomic/data
    mem_limit: ${MEDIATION_PURE_MEM_LIMIT_MB}M

  mediation-scaleio:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.scaleio.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_SCALEIO_PORT}"
      - "${MEDIATION_SCALEIO_DEBUG_PORT}"
    environment:
      component_type: mediation-scaleio
      instance_id: mediation-scaleio-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_SCALEIO_XMX_MB}M ${MEDIATION_SCALEIO_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-scaleio:/home/turbonomic/data
    mem_limit: ${MEDIATION_SCALEIO_MEM_LIMIT_MB}M

  mediation-hds:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.hds.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_HDS_PORT}"
      - "${MEDIATION_HDS_DEBUG_PORT}"
    environment:
      component_type: mediation-hds
      instance_id: mediation-hds-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_HDS_XMX_MB}M ${MEDIATION_HDS_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-hds:/home/turbonomic/data
    mem_limit: ${MEDIATION_HDS_MEM_LIMIT_MB}M

  mediation-compellent:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.compellent.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_COMPELLENT_PORT}"
      - "${MEDIATION_COMPELLENT_DEBUG_PORT}"
    environment:
      component_type: mediation-compellent
      instance_id: mediation-compellent-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_COMPELLENT_XMX_MB}M ${MEDIATION_COMPELLENT_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-compellent:/home/turbonomic/data
    mem_limit: ${MEDIATION_COMPELLENT_MEM_LIMIT_MB}M

  mediation-xtremio:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.xtremio.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_XTREMIO_PORT}"
      - "${MEDIATION_XTREMIO_DEBUG_PORT}"
    environment:
      component_type: mediation-xtremio
      instance_id: mediation-xtremio-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_XTREMIO_XMX_MB}M ${MEDIATION_XTREMIO_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-xtremio:/home/turbonomic/data
    mem_limit: ${MEDIATION_XTREMIO_MEM_LIMIT_MB}M

  mediation-vplex:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.vplex.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_VPLEX_PORT}"
      - "${MEDIATION_VPLEX_DEBUG_PORT}"
    environment:
      component_type: mediation-vplex
      instance_id: mediation-vplex-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_VPLEX_XMX_MB}M ${MEDIATION_VPLEX_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-vplex:/home/turbonomic/data
    mem_limit: ${MEDIATION_VPLEX_MEM_LIMIT_MB}M

  mediation-rhv:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.rhv.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_RHV_PORT}"
      - "${MEDIATION_RHV_DEBUG_PORT}"
    environment:
      component_type: mediation-rhv
      instance_id: mediation-rhv-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_RHV_XMX_MB}M ${MEDIATION_RHV_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-rhv:/home/turbonomic/data
    mem_limit: ${MEDIATION_RHV_MEM_LIMIT_MB}M

  mediation-openstack:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.openstack.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_OPENSTACK_PORT}"
      - "${MEDIATION_OPENSTACK_DEBUG_PORT}"
    environment:
      component_type: mediation-openstack
      instance_id: mediation-openstack-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_OPENSTACK_XMX_MB}M ${MEDIATION_OPENSTACK_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-openstack:/home/turbonomic/data
    mem_limit: ${MEDIATION_OPENSTACK_MEM_LIMIT_MB}M

  mediation-ucsdirector:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.ucsdirector.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_UCSDIRECTOR_PORT}"
      - "${MEDIATION_UCSDIRECTOR_DEBUG_PORT}"
    environment:
      component_type: mediation-ucsdirector
      instance_id: mediation-ucsdirector-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_UCSDIRECTOR_XMX_MB}M ${MEDIATION_UCSDIRECTOR_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-ucsdirector:/home/turbonomic/data
    mem_limit: ${MEDIATION_UCSDIRECTOR_MEM_LIMIT_MB}M

  mediation-aws:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.aws.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_AWS_PORT}"
      - "${MEDIATION_AWS_DEBUG_PORT}"
    environment:
      component_type: mediation-aws
      instance_id: mediation-aws-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_AWS_XMX_MB}M ${MEDIATION_AWS_SYSTEM_PROPERTIES}"
      # overriding the tmpdir location because the cloud probes download large files to temp, and we
      # don't want these to go to a memory-backed volume like /tmp
      MORE_JAVA_OPTS: -Djava.io.tmpdir=/home/turbonomic/data
    volumes:
      - mediation-aws:/home/turbonomic/data
    mem_limit: ${MEDIATION_AWS_MEM_LIMIT_MB}M

  mediation-awsbilling:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.aws.billing.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_AWSBILLING_PORT}"
      - "${MEDIATION_AWSBILLING_DEBUG_PORT}"
    environment:
      component_type: mediation-awsbilling
      instance_id: mediation-awsbilling-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_AWSBILLING_XMX_MB}M ${MEDIATION_AWSBILLING_SYSTEM_PROPERTIES}"
      # overriding the tmpdir location because the cloud probes download large files to temp, and we
      # don't want these to go to a memory-backed volume like /tmp
      MORE_JAVA_OPTS: -Djava.io.tmpdir=/home/turbonomic/data
    volumes:
      - mediation-awsbilling:/home/turbonomic/data
    mem_limit: ${MEDIATION_AWSBILLING_MEM_LIMIT_MB}M

  mediation-awscost:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.aws.cost.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_AWSCOST_PORT}"
      - "${MEDIATION_AWSCOST_DEBUG_PORT}"
    environment:
      component_type: mediation-awscost
      instance_id: mediation-awscost-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_AWSCOST_XMX_MB}M ${MEDIATION_AWSCOST_SYSTEM_PROPERTIES}"
      # overriding the tmpdir location because the cloud probes download large files to temp, and we
      # don't want these to go to a memory-backed volume like /tmp
      MORE_JAVA_OPTS: -Djava.io.tmpdir=/home/turbonomic/data
    volumes:
      - mediation-awscost:/home/turbonomic/data
    mem_limit: ${MEDIATION_AWSCOST_MEM_LIMIT_MB}M

  mediation-azure:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.azure.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_AZURE_PORT}"
      - "${MEDIATION_AZURE_DEBUG_PORT}"
    environment:
      component_type: mediation-azure
      instance_id: mediation-azure-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_AZURE_XMX_MB}M ${MEDIATION_AZURE_SYSTEM_PROPERTIES}"
      # overriding the tmpdir location because the cloud probes download large files to temp, and we
      # don't want these to go to a memory-backed volume like /tmp
      MORE_JAVA_OPTS: -Djava.io.tmpdir=/home/turbonomic/data
    volumes:
      - mediation-azure:/home/turbonomic/data
    mem_limit: ${MEDIATION_AZURE_MEM_LIMIT_MB}M

  mediation-oneview:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.oneview.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_ONEVIEW_PORT}"
      - "${MEDIATION_ONEVIEW_DEBUG_PORT}"
    environment:
      component_type: mediation-oneview
      instance_id: mediation-oneview-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_ONEVIEW_XMX_MB}M ${MEDIATION_ONEVIEW_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-oneview:/home/turbonomic/data
    mem_limit: ${MEDIATION_ONEVIEW_MEM_LIMIT_MB}M

  mediation-vcd:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.vcd.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_VCD_PORT}"
      - "${MEDIATION_VCD_DEBUG_PORT}"
    environment:
      component_type: mediation-vcd
      instance_id: mediation-vcd-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_VCD_XMX_MB}M ${MEDIATION_VCD_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-vcd:/home/turbonomic/data
    mem_limit: ${MEDIATION_VCD_MEM_LIMIT_MB}M

  mediation-mssql:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.database.mssql.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_MSSQL_PORT}"
      - "${MEDIATION_MSSQL_DEBUG_PORT}"
    environment:
      component_type: mediation-mssql
      instance_id: mediation-mssql-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_MSSQL_XMX_MB}M ${MEDIATION_MSSQL_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-mssql:/home/turbonomic/data
    mem_limit: ${MEDIATION_MSSQL_MEM_LIMIT_MB}M

  mediation-actionscript:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.actionscript.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_ACTIONSCRIPT_PORT}"
      - "${MEDIATION_ACTIONSCRIPT_DEBUG_PORT}"
    environment:
      component_type: mediation-actionscript
      instance_id: mediation-actionscript-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_ACTIONSCRIPT_XMX_MB}M ${MEDIATION_ACTIONSCRIPT_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-actionscript:/home/turbonomic/data
    mem_limit: ${MEDIATION_ACTIONSCRIPT_MEM_LIMIT_MB}M

  mediation-snmp:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.apm.snmp.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_SNMP_PORT}"
      - "${MEDIATION_SNMP_DEBUG_PORT}"
    environment:
      component_type: mediation-snmp
      instance_id: mediation-snmp-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_SNMP_XMX_MB}M ${MEDIATION_SNMP_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-snmp:/home/turbonomic/data
    mem_limit: ${MEDIATION_SNMP_MEM_LIMIT_MB}M

  mediation-appdynamics:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.appdynamics.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_APPDYNAMICS_PORT}"
      - "${MEDIATION_APPDYNAMICS_DEBUG_PORT}"
    environment:
      component_type: mediation-appdynamics
      instance_id: mediation-appdynamics-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_APPDYNAMICS_XMX_MB}M ${MEDIATION_APPDYNAMICS_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-appdynamics:/home/turbonomic/data
    mem_limit: ${MEDIATION_APPDYNAMICS_MEM_LIMIT_MB}M

  mediation-dynatrace:
    extends:
      file: common-services.yml
      service: dev-mediation-component
    image: turbonomic/com.vmturbo.mediation.dynatrace.component
    depends_on: *clustermgrdep
    ports:
      - "${MEDIATION_DYNATRACE_PORT}"
      - "${MEDIATION_DYNATRACE_DEBUG_PORT}"
    environment:
      component_type: mediation-dynatrace
      instance_id: mediation-dynatrace-1
      JAVA_OPTS: "${DEV_JAVA_OPTS} -Xmx${MEDIATION_DYNATRACE_XMX_MB}M ${MEDIATION_DYNATRACE_SYSTEM_PROPERTIES}"
    volumes:
      - mediation-dynatrace:/home/turbonomic/data
    mem_limit: ${MEDIATION_DYNATRACE_MEM_LIMIT_MB}M
