<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.vmturbo</groupId>
    <artifactId>Turbonomic-XL</artifactId>
    <version>8.4.5-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <market.version>4.4.5-SNAPSHOT</market.version>
        <java.version>1.8</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- MT Version from which to resolve cross-branch dependencies on common code -->
        <vmturbo.mt.branch.version>8.4.5-SNAPSHOT</vmturbo.mt.branch.version>

        <!-- Version from the APM PRobes Repository (Newrelic, AppInsights) -->
        <apm.probes.branch.version>8.4.5-SNAPSHOT</apm.probes.branch.version>

        <!-- MT Version com.vmturbo.ux -->
        <ux.mt.branch.version>8.4.5-SNAPSHOT</ux.mt.branch.version>

        <!-- API Repository version, determines what version of the API definition to pull in -->
        <com.vmturbo.api.version>3.2.8-SNAPSHOT</com.vmturbo.api.version>

        <!--CPU Capacity Library Version-->
        <cpu.capacity.version>1.5.4</cpu.capacity.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <spring.version>5.3.8</spring.version>
        <spring.retry.version>1.2.4.RELEASE</spring.retry.version>
        <spring.security.version>5.5.1</spring.security.version>
        <spring.session.jdbc.version>2.5.0</spring.session.jdbc.version>
        <guava.version>28.2-jre</guava.version>
        <units.of.measure.version>1.0.2</units.of.measure.version>

        <grpc.version>1.37.0</grpc.version>
        <grpc.prometheus.version>0.3.0</grpc.prometheus.version>

        <protobuf.version>3.17.3</protobuf.version>
        <protobuf.maven.plugin.version>0.6.1</protobuf.maven.plugin.version>
        <os.maven.plugin.version>1.4.1.Final</os.maven.plugin.version>
        <owasp.version>6.1.5</owasp.version>
        <prometheus.java.client.version>0.4.0</prometheus.java.client.version>

        <lz4.version>1.4</lz4.version>
        <fastutil.version>8.3.1</fastutil.version>

        <!-- START Versions for the various opentracing libraries.
             Do not change them independently without verifying that they are compatible with
             each other! Check the projects' github repositories and nested dependencies. -->
        <opentracing.version>0.33.0</opentracing.version>
        <jaeger.version>1.6.0</jaeger.version>
        <opentracing.concurrent.version>0.4.0</opentracing.concurrent.version>
        <opentracing.grpc.version>0.2.1</opentracing.grpc.version>
        <opentracing.kafka.version>0.1.13</opentracing.kafka.version>
        <!-- END Versions for the various opentracing libraries -->

        <slf4j.version>1.7.25</slf4j.version>
        <log4j2.Version>2.17.1</log4j2.Version>
        <log4j2.AsyncVersion>3.3.6</log4j2.AsyncVersion>
        <commons-logging.version>1.2</commons-logging.version>
        <commons-io.version>2.5</commons-io.version>
        <influxdb-java-api.version>2.21</influxdb-java-api.version>
        <junit.version>4.12</junit.version>
        <jacocoVersion>0.8.2</jacocoVersion>
        <jacocoAntVersion>0.8.2</jacocoAntVersion>
        <javax.servlet-api.version>3.1.0</javax.servlet-api.version>
        <javax.xml.bind.version>2.3.1</javax.xml.bind.version>
        <javax.xml.ws.version>2.3.1</javax.xml.ws.version>
        <com.sun.xml.bind.version>2.3.0.1</com.sun.xml.bind.version>
        <hamcrest.version>2.1</hamcrest.version>
        <hamcrest-all.version>1.3</hamcrest-all.version>
        <hamcrest-optional-version>2.0.0</hamcrest-optional-version>
        <javassist.version>3.21.0-GA</javassist.version>

        <mockito.version>1.10.19</mockito.version>
        <powermock.version>1.6.6</powermock.version>

        <jmockit.version>1.18</jmockit.version>
        <consul-client.version>1.4.0</consul-client.version>
        <gson.version>2.8.7</gson.version>
        <httpclient.version>4.5.13</httpclient.version>
        <httpclient.async.version>4.1.3</httpclient.async.version>
        <jackson.version>2.11.4</jackson.version>
        <commons-lang3.version>3.12.0</commons-lang3.version>
        <commons-lang.version>2.6</commons-lang.version>
        <jersey-client.version>2.17</jersey-client.version>
        <jersey-media-jaxb.version>2.17</jersey-media-jaxb.version>
        <docker.maven.plugin.version>1.1.1</docker.maven.plugin.version>
        <swagger-annotations.version>1.5.13</swagger-annotations.version>
        <swagger.codegen.plugin.version>2.2.3</swagger.codegen.plugin.version>
        <jackson-datatype-guava.version>2.6.5</jackson-datatype-guava.version>
        <snakeyaml.version>1.26</snakeyaml.version>
        <javax.ws.rs-api.version>2.0</javax.ws.rs-api.version>
        <commons-collections4.version>4.1</commons-collections4.version>
        <commons-csv.version>1.7</commons-csv.version>
        <jooq.version>3.12.3</jooq.version>
        <ojdbc.version>11.2.0.4.0</ojdbc.version>
        <flyway.version>4.0.3</flyway.version>
        <flyway-plugin.version>4.2.0</flyway-plugin.version>
        <google.findbugs.version>2.0.3</google.findbugs.version>
        <spotbugs.version>4.0.4</spotbugs.version>
        <tomcat.version>9.0.50</tomcat.version>
        <start-class/>
        <api.version>${project.version}</api.version>
        <springfox.version>2.7.0</springfox.version>
        <swagger.plugin.version>3.1.7</swagger.plugin.version>
        <asciidoctor.plugin.version>1.5.3</asciidoctor.plugin.version>
        <swagger2markup.plugin.version>0.9.3</swagger2markup.plugin.version>
        <commons-validator.version>1.6</commons-validator.version>
        <memory-metrics.version>0.3.3</memory-metrics.version>
        <!-- END swagger properties -->

        <docker.compose.rule.version>1.5.0</docker.compose.rule.version>
        <asciitable.version>0.3.2</asciitable.version>
        <zjsonpatch.version>0.3.6</zjsonpatch.version>

        <jjwt.version>0.7.0</jjwt.version>
        <json-path.version>2.6.0</json-path.version>
        <copy.rename.plugin.version>1.0.1</copy.rename.plugin.version>

        <mariadb.client.version>2.3.0</mariadb.client.version>
        <postgresql.client.version>42.2.23</postgresql.client.version>

        <reactor.version>3.4.12</reactor.version>

        <arangodb.version>3.0.ON</arangodb.version>
        <arangodb.driver.version>4.2.6</arangodb.driver.version>
        <kafka.version>2.8.1</kafka.version>

        <st4.version>4.0.8</st4.version>
        <failsafe.version>3.0.0-M4</failsafe.version>
        <surefire.version>3.0.0-M4</surefire.version>
        <jetty.version>9.4.44.v20210927</jetty.version>
        <bouncycastle.version>1.69</bouncycastle.version>
        <JUnitParams.version>1.0.4</JUnitParams.version>
        <hibernate.validator.version>6.0.22.Final</hibernate.validator.version>
        <syslog-client.version>1.1.7</syslog-client.version>
        <commons-text.version>1.9</commons-text.version>
        <velocity.version>2.3</velocity.version>
        <velocity-tools.version>3.1</velocity-tools.version>
        <javax-annotation.version>1.3.2</javax-annotation.version>

        <!-- FlexLM, for use with Cisco licenses -->
        <flex.lm.version>11.14.1.1</flex.lm.version>

        <!-- docker registry for turbonomic -->
        <docker.registry>docker.io</docker.registry>
        <docker.image.prefix>turbonomic</docker.image.prefix>

        <immutables.version>2.8.8</immutables.version>
        <roaringbitmap.version>0.8.13</roaringbitmap.version>
        <apache-poi-ooxml.version>4.1.1</apache-poi-ooxml.version>
        <!-- java slang -->
        <javaslang.version>2.0.5</javaslang.version>

        <!-- EM: The spring-security-saml2-service-provider:jar:5.3.0.RELEASE lib is bringing
        cryptacular 1.1.3 as a transitive dependency, which is affected by a security vulnerability.
        The dependency version below is used only to enforce a specific version that
        does not suffer from a vulnerability. See bug OM-59184 -->
        <cryptacular.version>1.1.4</cryptacular.version>

        <!-- EM: The consul-api dependency is bringing a dependency on
        commons-codec:jar:1.10, which is affected by a security vulnerability.
        The dependency below is used only to enforce a specific version that
        does not suffer from a vulnerability. See bug OM-59183 -->
        <commons-codec.version>1.15</commons-codec.version>

        <!-- EM: The commons-validator dependency is bringing a dependency on
        commons-beanutils:jar:1.9.2, which is affected by a security vulnerability.
        The dependency below is used only to enforce a specific version that
        does not suffer from a vulnerability. See bug OM-59181 -->
        <commons-beanutils.version>1.9.4</commons-beanutils.version>

        <!-- timescaledb image tag pulled by builds of extractor and extractor-schema -->
        <timescaledb-image-tag>2.0.1-pg12</timescaledb-image-tag>
        <!-- For spinning up a postgres container for testing during maven build-->
        <postgres-image>registry.turbonomic.com/turbonomic/postgres:1.0</postgres-image>
        <!-- this is needed so postgres container is created locally rather than remote machine,
             and the name needs to be different from DOCKER_HOST env variable, so images can be
             pushed to remote machine during team branch's nightly build -->
        <fabricateDockerHost>unix:///var/run/docker.sock</fabricateDockerHost>
        <postgresHost>localhost</postgresHost>
        <!--This doesn't work here since it has to not be set in the case that we launch a
            postgres container instead of relying on a separate postgres service being available.
            See the no-run-postgres-container profile below
        <postgresPort>5432</postgresPort>
        -->
        <postgresUserName>postgres</postgresUserName>
        <postgresPassword>vmturbo</postgresPassword>

        <!-- For modules with python code, this is the most likely relative location of the
             turbo-pipenv script (since we almost never use nested modules).
             Any nested modules should override this appropriately. -->
        <pipenvScript>../build/turbo-pipenv</pipenvScript>

        <!-- Kafka test library -->
        <kafka-test.version>3.2.3</kafka-test.version>

        <!-- Owasp files downloaded from nexus -->
        <turbo-cveurl>http://build.vmturbo.com:8081/nexus/content/repositories/thirdparty/owasp-downloads/nvdcve/1.1</turbo-cveurl>
        <turbo-cveyear>2021</turbo-cveyear>
    </properties>

    <prerequisites>
        <maven>3.2.1</maven>
    </prerequisites>

    <profiles>
        <profile>
            <id>protoc-spring-rest</id>
            <modules>
                <module>../protoc-plugin-common</module>
                <module>../protoc-spring-rest</module>
            </modules>
        </profile>

        <profile>
            <id>protoc-grpc-moles</id>
            <modules>
                <module>../protoc-plugin-common</module>
                <module>../protoc-grpc-moles</module>
            </modules>
        </profile>

        <profile>
            <id>common-protobuf</id>
            <modules>
                <module>../com.vmturbo.common.protobuf</module>
            </modules>
        </profile>

        <profile>
            <id>baseimage</id>
            <modules>
                <module>../com.vmturbo.components.baseimage</module>
            </modules>
        </profile>

        <profile>
            <id>diags</id>
            <modules>
                <module>../diags</module>
            </modules>
        </profile>

        <profile>
            <id>clustermgr</id>
            <modules>
                <module>../com.vmturbo.clustermgr</module>
                <module>../com.vmturbo.clustermgr.api</module>
            </modules>
        </profile>

        <profile>
            <id>components</id>
            <modules>
                <module>../com.vmturbo.components</module>
                <module>../com.vmturbo.components.common</module>
                <module>../com.vmturbo.sql.utils</module>
            </modules>
        </profile>

        <profile>
            <id>components-api</id>
            <modules>
                <module>../com.vmturbo.components.api.root</module>
                <module>../com.vmturbo.components.api</module>
                <module>../com.vmturbo.components.api.test</module>
            </modules>
        </profile>

        <profile>
            <id>auth</id>
            <modules>
                <module>../com.vmturbo.auth.api</module>
                <module>../com.vmturbo.auth.component</module>
                <module>../com.vmturbo.auth.test</module>
                <module>../com.vmturbo.system.notification.sender</module>
            </modules>
        </profile>

        <profile>
            <id>action-orchestrator</id>
            <modules>
                <module>../com.vmturbo.common.protobuf</module>
                <module>../com.vmturbo.sql.utils</module>
                <module>../com.vmturbo.action.orchestrator.api</module>
                <module>../com.vmturbo.action.orchestrator</module>
            </modules>
        </profile>

        <profile>
            <id>market-component</id>
            <modules>
                <module>../com.vmturbo.components.common</module>
                <module>../com.vmturbo.common.protobuf</module>
                <module>../com.vmturbo.cost.calculation</module>
                <module>../com.vmturbo.market.component.api</module>
                <module>../com.vmturbo.market.component</module>
            </modules>
        </profile>

        <profile>
            <id>history</id>
            <modules>
                <module>../com.vmturbo.history.component.api</module>
                <module>../com.vmturbo.history</module>
                <module>../com.vmturbo.history.schema</module>
                <module>../com.vmturbo.testbases</module>
            </modules>
        </profile>

        <profile>
            <id>repository</id>
            <modules>
                <module>../com.vmturbo.topology.graph</module>
                <module>../com.vmturbo.repository.api</module>
                <module>../com.vmturbo.sql.utils</module>
                <module>../com.vmturbo.repository.component</module>
            </modules>
        </profile>

        <profile>
            <id>metron</id>
            <modules>
                <module>../com.vmturbo.influxdb</module>
                <module>../com.vmturbo.ml.datastore</module>
            </modules>
        </profile>

        <profile>
            <id>extractor</id>
            <modules>
                <module>../com.vmturbo.components.common</module>
                <module>../com.vmturbo.extractor</module>
                <module>../com.vmturbo.extractor.schema</module>
                <module>../com.vmturbo.topology.graph</module>
                <module>../com.vmturbo.search.metadata</module>
                <module>../com.vmturbo.sql.utils</module>
                <module>../com.vmturbo.extractor.api</module>
            </modules>
        </profile>

        <profile>
            <id>topology-processor</id>
            <modules>
                <module>../com.vmturbo.auth.api</module>
                <module>../com.vmturbo.communication.matrix</module>
                <module>../com.vmturbo.stitching</module>
                <module>../com.vmturbo.topology.processor.api</module>
                <module>../com.vmturbo.topology.processor</module>
            </modules>
        </profile>

        <profile>
            <id>plan-orchestrator</id>
            <modules>
                <module>../com.vmturbo.components.common</module>
                <module>../com.vmturbo.common.protobuf</module>
                <module>../com.vmturbo.plan.orchestrator</module>
                <module>../com.vmturbo.plan.orchestrator.api</module>
            </modules>
        </profile>

        <profile>
            <id>group</id>
            <modules>
                <module>../com.vmturbo.common.protobuf</module>
                <module>../com.vmturbo.identity</module>
                <module>../com.vmturbo.group.component</module>
                <module>../com.vmturbo.group.api</module>
            </modules>
        </profile>

        <profile>
            <id>cost</id>
            <modules>
                <module>../com.vmturbo.cloud.commitment.analysis</module>
                <module>../com.vmturbo.cloud.common</module>
                <module>../com.vmturbo.common.protobuf</module>
                <module>../com.vmturbo.cost.calculation</module>
                <module>../com.vmturbo.cost.component</module>
                <module>../com.vmturbo.cost.component.api</module>
                <module>../com.vmturbo.reserved.instance.coverage.allocator</module>
                <module>../com.vmturbo.topology.event.library</module>
            </modules>
        </profile>

        <profile>
            <id>prometheus-config-manager</id>
            <modules>
                <module>../com.vmturbo.prometheus.config.manager</module>
                <module>../com.vmturbo.group.component</module>
                <module>../com.vmturbo.group.api</module>
            </modules>
        </profile>

        <profile>
            <id>api</id>
            <modules>
                <module>../com.vmturbo.auth.api</module>
                <module>../com.vmturbo.api.component</module>
                <module>../com.vmturbo.system.notification.receiver</module>
                <module>../com.vmturbo.extractor.schema</module>
                <module>../com.vmturbo.search.api</module>
                <module>../com.vmturbo.common.api</module>
                <module>../com.vmturbo.search.metadata</module>
                <module>../com.vmturbo.search.schema</module>
            </modules>
        </profile>

        <profile>
            <id>licensing</id>
            <modules>
                <module>../com.vmturbo.licensing</module>
            </modules>
        </profile>
        <profile>
            <id>deserializer</id>
            <modules>
                <module>../com.vmturbo.discovery.deserializer</module>
            </modules>
        </profile>
        <profile>
            <id>all-separate-probes</id>
            <modules>
                <module>../com.vmturbo.api.conversion</module>
                <module>../com.vmturbo.mediation.actionscript</module>
                <module>../com.vmturbo.mediation.actionscript.component</module>
                <module>../com.vmturbo.mediation.aix.component</module>
                <module>../com.vmturbo.mediation.acims.component</module>
                <module>../com.vmturbo.mediation.apic.component</module>
                <module>../com.vmturbo.mediation.apm.snmp.component</module>
                <module>../com.vmturbo.mediation.apm.wmi.component</module>
                <module>../com.vmturbo.mediation.appdynamics.component</module>
                <module>../com.vmturbo.mediation.aws.billing.component</module>
                <module>../com.vmturbo.mediation.aws.component</module>
                <module>../com.vmturbo.mediation.aws.cost.component</module>
                <module>../com.vmturbo.mediation.aws.lambda.component</module>
                <module>../com.vmturbo.mediation.azure.component</module>
                <module>../com.vmturbo.mediation.azure.volumes.component</module>
                <module>../com.vmturbo.mediation.azure.cost.component</module>
                <module>../com.vmturbo.mediation.azure.ea.component</module>
                <module>../com.vmturbo.mediation.azure.sp.component</module>
                <module>../com.vmturbo.mediation.baremetal.component</module>
                <module>../com.vmturbo.mediation.client</module>
                <module>../com.vmturbo.mediation.client.bootstrap</module>
                <module>../com.vmturbo.mediation.compellent.component</module>
                <module>../com.vmturbo.mediation.database.mssql.component</module>
                <module>../com.vmturbo.mediation.database.mysql.component</module>
                <module>../com.vmturbo.mediation.database.oracle.component</module>
                <module>../com.vmturbo.mediation.tomcat.component</module>
                <module>../com.vmturbo.mediation.websphere.component</module>
                <module>../com.vmturbo.mediation.weblogic.component</module>
                <module>../com.vmturbo.mediation.jboss.component</module>
                <module>../com.vmturbo.mediation.ibmstorage.flashsystem.component</module>
                <module>../com.vmturbo.mediation.instana.component</module>
                <module>../com.vmturbo.mediation.jvm.component</module>
                <module>../com.vmturbo.mediation.datadog.component</module>
                <module>../com.vmturbo.mediation.delegatingprobe.component</module>
                <module>../com.vmturbo.mediation.delegatingprobe</module>
                <module>../com.vmturbo.mediation.dynatrace.component</module>
                <module>../com.vmturbo.mediation.flexera.component</module>
                <module>../com.vmturbo.mediation.gcp.sa.component</module>
                <module>../com.vmturbo.mediation.gcp.cost.component</module>
                <module>../com.vmturbo.mediation.gcp.project.component</module>
                <module>../com.vmturbo.mediation.gcp.billing.component</module>
                <module>../com.vmturbo.mediation.istio.component</module>
                <module>../com.vmturbo.mediation.intersight.hyperflex.component</module>
                <module>../com.vmturbo.mediation.intersight.server.component</module>
                <module>../com.vmturbo.mediation.intersight.ucs.component</module>
                <module>../com.vmturbo.mediation.hds.component</module>
                <module>../com.vmturbo.mediation.horizon.component</module>
                <module>../com.vmturbo.mediation.hpe3par.component</module>
                <module>../com.vmturbo.mediation.hyperflex.component</module>
                <module>../com.vmturbo.mediation.hyperv.component</module>
                <module>../com.vmturbo.mediation.actionstream.kafka</module>
                <module>../com.vmturbo.mediation.actionstream.kafka.component</module>
                <module>../com.vmturbo.mediation.webhook</module>
                <module>../com.vmturbo.mediation.webhook.component</module>
                <module>../com.vmturbo.mediation.netapp.component</module>
                <module>../com.vmturbo.mediation.netflow.component</module>
                <module>../com.vmturbo.mediation.newrelic.component</module>
                <module>../com.vmturbo.mediation.nutanix.component</module>
                <module>../com.vmturbo.mediation.appinsights.component</module>
                <module>../com.vmturbo.mediation.oneview.component</module>
                <module>../com.vmturbo.mediation.pure.component</module>
                <module>../com.vmturbo.mediation.rhv.component</module>
                <module>../com.vmturbo.mediation.udt</module>
                <module>../com.vmturbo.mediation.udt.component</module>
                <module>../com.vmturbo.mediation.scaleio.component</module>
                <module>../com.vmturbo.mediation.servicenow.component</module>
                <module>../com.vmturbo.mediation.storagestressprobe.component</module>
                <module>../com.vmturbo.mediation.stressprobe.component</module>
                <module>../com.vmturbo.mediation.terraform.component</module>
                <module>../com.vmturbo.mediation.tetration.component</module>
                <module>../com.vmturbo.mediation.ucs.component</module>
                <module>../com.vmturbo.mediation.ucsdirector.component</module>
                <module>../com.vmturbo.mediation.vcenter.browsing.component</module>
                <module>../com.vmturbo.mediation.vmax.component</module>
                <module>../com.vmturbo.mediation.vmm.component</module>
                <module>../com.vmturbo.mediation.vplex.component</module>
                <module>../com.vmturbo.mediation.xtremio.component</module>
                <module>../com.vmturbo.mediation.xen.component</module>
            </modules>
        </profile>

        <profile>
            <id>kafka</id>
            <modules>
                <module>../kafka</module>
            </modules>
        </profile>

        <profile>
            <id>zookeeper</id>
            <modules>
                <module>../zookeeper</module>
            </modules>
        </profile>

        <profile>
            <id>nginx</id>
            <modules>
                <module>../nginx</module>
            </modules>
        </profile>

        <profile>
            <id>grafana</id>
            <modules>
                <module>../com.vmturbo.common.protobuf</module>
                <module>../xl-python</module>
                <module>../grafana</module>
            </modules>
        </profile>

        <profile>
            <id>component-tests</id>
            <modules>
                <module>../com.vmturbo.components.test.utilities</module>
                <module>../com.vmturbo.components.test.performance</module>
            </modules>
        </profile>

        <profile>
            <id>system-tests</id>
            <modules>
                <module>../com.vmturbo.systest</module>
                <module>../com.vmturbo.components.test.utilities</module>
            </modules>
        </profile>

        <profile>
            <id>sdk</id>
            <modules>
                <module>../com.vmturbo.mediation.client</module>
                <module>../com.vmturbo.mediation.client.bootstrap</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-aix</id>
            <modules>
                <module>../com.vmturbo.mediation.aix.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-aws-billing</id>
            <modules>
                <module>../com.vmturbo.mediation.aws.billing.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-aws-lambda</id>
            <modules>
                <module>../com.vmturbo.mediation.aws.lambda.component</module>
            </modules>
        </profile>
        <profile>
            <id>integration-intersight</id>
            <modules>
                <module>../com.vmturbo.components.common</module>
                <module>../com.vmturbo.integrations.intersight</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-intersight</id>
            <modules>
                <module>../com.vmturbo.integrations.intersight</module>
                <module>../com.vmturbo.mediation.intersight.hyperflex.component</module>
                <module>../com.vmturbo.mediation.intersight.server.component</module>
                <module>../com.vmturbo.mediation.intersight.ucs.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-vcenter</id>
            <modules>
                <module>../com.vmturbo.mediation.vcenter.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-vmax</id>
            <modules>
                <module>../com.vmturbo.mediation.vmax.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-hyperv</id>
            <modules>
                <module>../com.vmturbo.mediation.hyperv.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-netapp</id>
            <modules>
                <module>../com.vmturbo.mediation.netapp.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-nutanix</id>
            <modules>
                <module>../com.vmturbo.mediation.nutanix.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-ucs</id>
            <modules>
                <module>../com.vmturbo.mediation.ucs.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-ucsdirector</id>
            <modules>
                <module>../com.vmturbo.mediation.ucsdirector.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-vmm</id>
            <modules>
                <module>../com.vmturbo.mediation.vmm.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-hpe3par</id>
            <modules>
                <module>../com.vmturbo.mediation.hpe3par.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-pure</id>
            <modules>
                <module>../com.vmturbo.mediation.pure.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-scaleio</id>
            <modules>
                <module>../com.vmturbo.mediation.scaleio.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-hds</id>
            <modules>
                <module>../com.vmturbo.mediation.hds.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-compellent</id>
            <modules>
                <module>../com.vmturbo.mediation.compellent.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-xtremio</id>
            <modules>
                <module>../com.vmturbo.mediation.xtremio.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-vplex</id>
            <modules>
                <module>../com.vmturbo.mediation.vplex.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-rhv</id>
            <modules>
                <module>../com.vmturbo.mediation.rhv.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-aws</id>
            <modules>
                <module>../com.vmturbo.mediation.aws.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-aws-cost</id>
            <modules>
                <module>../com.vmturbo.mediation.aws.cost.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-azure</id>
            <modules>
                <module>../com.vmturbo.mediation.azure.component</module>
                <module>../com.vmturbo.mediation.azure.cost.component</module>
                <module>../com.vmturbo.mediation.azure.ea.component</module>
                <module>../com.vmturbo.mediation.azure.sp.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-azure-volumes</id>
            <modules>
                <module>../com.vmturbo.mediation.azure.volumes.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-vcenter-browsing</id>
            <modules>
                <module>../com.vmturbo.mediation.vcenter.browsing.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-oneview</id>
            <modules>
                <module>../com.vmturbo.mediation.oneview.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-mssql</id>
            <modules>
                <module>../com.vmturbo.mediation.database.mssql.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-mysql</id>
            <modules>
                <module>../com.vmturbo.mediation.database.mysql.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-oracle</id>
            <modules>
                <module>../com.vmturbo.mediation.database.oracle.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-tomcat</id>
            <modules>
                <module>../com.vmturbo.mediation.tomcat.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-websphere</id>
            <modules>
                <module>../com.vmturbo.mediation.websphere.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-ibmstorage-flashsystem</id>
            <modules>
                <module>../com.vmturbo.mediation.ibmstorage.flashsystem.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-instana</id>
            <modules>
                <module>../com.vmturbo.mediation.instana.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-jvm</id>
            <modules>
                <module>../com.vmturbo.mediation.jvm.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-wmi</id>
            <modules>
                <module>../com.vmturbo.mediation.apm.wmi.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-snmp</id>
            <modules>
                <module>../com.vmturbo.mediation.apm.snmp.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-appdynamics</id>
            <modules>
                <module>../com.vmturbo.mediation.appdynamics.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-newrelic</id>
            <modules>
                <module>../com.vmturbo.mediation.newrelic.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-weblogic</id>
            <modules>
                <module>../com.vmturbo.mediation.weblogic.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-jboss</id>
            <modules>
                <module>../com.vmturbo.mediation.jboss.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-appinsights</id>
            <modules>
                <module>../com.vmturbo.mediation.appinsights.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-udt</id>
            <modules>
                <module>../com.vmturbo.mediation.udt</module>
                <module>../com.vmturbo.mediation.udt.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-baremetal</id>
            <modules>
                <module>../com.vmturbo.mediation.baremetal.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-datadog</id>
            <modules>
                <module>../com.vmturbo.mediation.datadog.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-dynatrace</id>
            <modules>
                <module>../com.vmturbo.mediation.dynatrace.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-netflow</id>
            <modules>
                <module>../com.vmturbo.mediation.netflow.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-terraform</id>
            <modules>
                <module>../com.vmturbo.mediation.terraform.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-tetration</id>
            <modules>
                <module>../com.vmturbo.mediation.tetration.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-istio</id>
            <modules>
                <module>../com.vmturbo.mediation.istio.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-hyperflex</id>
            <modules>
                <module>../com.vmturbo.mediation.hyperflex.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-horizon</id>
            <modules>
                <module>../com.vmturbo.mediation.horizon.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-actionscript</id>
            <modules>
                <module>../com.vmturbo.api.conversion</module>
                <module>../com.vmturbo.mediation.actionscript</module>
                <module>../com.vmturbo.mediation.actionscript.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-acims</id>
            <modules>
                <module>../com.vmturbo.mediation.acims.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-apic</id>
            <modules>
                <module>../com.vmturbo.mediation.apic.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-stressprobe</id>
            <modules>
                <module>../com.vmturbo.mediation.stressprobe.component</module>
                <module>../com.vmturbo.mediation.storagestressprobe.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-delegatingprobe</id>
            <modules>
                <module>../com.vmturbo.mediation.delegatingprobe</module>
                <module>../com.vmturbo.mediation.delegatingprobe.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-actionstream-kafka</id>
            <modules>
                <module>../com.vmturbo.mediation.actionstream.kafka</module>
                <module>../com.vmturbo.mediation.actionstream.kafka.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-webhook</id>
            <modules>
                <module>../com.vmturbo.mediation.webhook</module>
                <module>../com.vmturbo.mediation.webhook.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-gcp</id>
            <modules>
                <module>../com.vmturbo.mediation.gcp.sa.component</module>
                <module>../com.vmturbo.mediation.gcp.cost.component</module>
                <module>../com.vmturbo.mediation.gcp.project.component</module>
                <module>../com.vmturbo.mediation.gcp.billing.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation</id>
            <modules>
                <module>../com.vmturbo.mediation.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-utilprobe</id>
            <modules>
                <module>../com.vmturbo.mediation.utilprobe.component</module>
            </modules>
        </profile>

        <profile>
            <id>mediation-xen</id>
            <modules>
                <module>../com.vmturbo.mediation.xen.component</module>
            </modules>
        </profile>

        <!-- Development profile. Intended for use during the development of a change.
             Don't include slow modules here (unless it's ABSOLUTELY necessary)! -->
        <profile>
            <id>development</id>
            <modules>
                <!-- The meat of the XL code, and the platform components. -->
                <module>../com.vmturbo.api.conversion</module>
                <module>../com.vmturbo.licensing</module>
                <module>../com.vmturbo.auth.api</module>
                <module>../com.vmturbo.auth.component</module>
                <module>../com.vmturbo.auth.test</module>
                <module>../com.vmturbo.api.component</module>
                <module>../com.vmturbo.search.api</module>
                <module>../com.vmturbo.search.schema</module>
                <module>../com.vmturbo.oid</module>
                <module>../com.vmturbo.common.api</module>
                <module>../com.vmturbo.common.protobuf</module>
                <module>../com.vmturbo.communication.matrix</module>
                <module>../com.vmturbo.trax</module>
                <module>../com.vmturbo.cloud.commitment.analysis</module>
                <module>../com.vmturbo.cloud.common</module>
                <module>../com.vmturbo.clustermgr</module>
                <module>../com.vmturbo.clustermgr.api</module>
                <module>../com.vmturbo.components</module>
                <module>../com.vmturbo.components.common</module>
                <module>../com.vmturbo.cost.calculation</module>
                <module>../com.vmturbo.reserved.instance.coverage.allocator</module>
                <module>../com.vmturbo.sql.utils</module>
                <module>../com.vmturbo.sql.test.utils</module>
                <module>../com.vmturbo.components.api.root</module>
                <module>../com.vmturbo.components.api</module>
                <module>../com.vmturbo.components.api.test</module>
                <module>../com.vmturbo.action.orchestrator.api</module>
                <module>../com.vmturbo.market.component.api</module>
                <module>../com.vmturbo.components.test.utilities</module>
                <module>../com.vmturbo.action.orchestrator</module>
                <module>../com.vmturbo.group.api</module>
                <module>../com.vmturbo.group.component</module>
                <module>../com.vmturbo.market.component</module>
                <module>../com.vmturbo.kvstore</module>
                <module>../com.vmturbo.repository.api</module>
                <module>../com.vmturbo.repository.component</module>
                <module>../com.vmturbo.ml.datastore</module>
                <module>../com.vmturbo.extractor</module>
                <module>../com.vmturbo.extractor.schema</module>
                <module>../com.vmturbo.extractor.api</module>
                <module>../com.vmturbo.prometheus.config.manager</module>
                <module>../com.vmturbo.search.metadata</module>
                <module>../com.vmturbo.integrations.intersight</module>
                <module>../com.vmturbo.stitching</module>
                <module>../com.vmturbo.topology.event.library</module>
                <module>../com.vmturbo.topology.graph</module>
                <module>../com.vmturbo.topology.processor.api</module>
                <module>../com.vmturbo.topology.processor</module>
                <module>../com.vmturbo.history</module>
                <module>../com.vmturbo.history.schema</module>
                <module>../com.vmturbo.history.component.api</module>
                <module>../com.vmturbo.identity</module>
                <module>../com.vmturbo.plan.orchestrator</module>
                <module>../com.vmturbo.plan.orchestrator.api</module>
                <module>../com.vmturbo.reports.api</module>
                <!--module>../com.vmturbo.reports.component</module>
                <module>../com.vmturbo.reports.templates</module -->
                <module>../com.vmturbo.cost.component.api</module>
                <module>../com.vmturbo.cost.component</module>
                <module>../com.vmturbo.system.notification.sender</module>
                <module>../com.vmturbo.component.status.api</module>
                <module>../com.vmturbo.system.notification.receiver</module>

                <module>../com.vmturbo.voltron</module>

                <!-- Probe components. This should only include core mediation packages
                and the mediation component. -->
                <module>../com.vmturbo.mediation.probe.parent</module>
                <module>../com.vmturbo.mediation.client</module>
                <module>../com.vmturbo.mediation.client.bootstrap</module>
                <module>../com.vmturbo.mediation.actionscript</module>
                <module>../com.vmturbo.mediation.udt</module>
                <module>../com.vmturbo.mediation.udt.component</module>
                <module>../com.vmturbo.mediation.component</module>

                <!-- Modules on which we want to be sure that testCompile succeeds. -->
                <module>../com.vmturbo.components.test.performance</module>
                <module>../com.vmturbo.systest</module>

                <!-- module containing base classes for test classes appearing in multiple modules -->
                <module>../com.vmturbo.testbases</module>
            </modules>
        </profile>


        <!-- Development profile without probes. Intended for use during the development of a change.
             Don't include slow modules here (unless it's ABSOLUTELY necessary)! -->
        <profile>
            <id>platform</id>
            <modules>
                <!-- The meat of the XL code, and the platform components. -->
                <module>../com.vmturbo.api.conversion</module>
                <module>../com.vmturbo.licensing</module>
                <module>../com.vmturbo.auth.api</module>
                <module>../com.vmturbo.auth.component</module>
                <module>../com.vmturbo.auth.test</module>
                <module>../com.vmturbo.api.component</module>
                <module>../com.vmturbo.search.api</module>
                <module>../com.vmturbo.search.schema</module>
                <module>../com.vmturbo.oid</module>
                <module>../com.vmturbo.common.api</module>
                <module>../com.vmturbo.common.protobuf</module>
                <module>../com.vmturbo.communication.matrix</module>
                <module>../com.vmturbo.trax</module>
                <module>../com.vmturbo.cloud.commitment.analysis</module>
                <module>../com.vmturbo.cloud.common</module>
                <module>../com.vmturbo.clustermgr</module>
                <module>../com.vmturbo.clustermgr.api</module>
                <module>../com.vmturbo.components</module>
                <module>../com.vmturbo.components.common</module>
                <module>../com.vmturbo.cost.calculation</module>
                <module>../com.vmturbo.reserved.instance.coverage.allocator</module>
                <module>../com.vmturbo.sql.utils</module>
                <module>../com.vmturbo.sql.test.utils</module>
                <module>../com.vmturbo.components.api.root</module>
                <module>../com.vmturbo.components.api</module>
                <module>../com.vmturbo.components.api.test</module>
                <module>../com.vmturbo.sample.component</module>
                <module>../com.vmturbo.sample.component.api</module>
                <module>../com.vmturbo.action.orchestrator.api</module>
                <module>../com.vmturbo.market.component.api</module>
                <module>../com.vmturbo.components.test.utilities</module>
                <module>../com.vmturbo.action.orchestrator</module>
                <module>../com.vmturbo.group.api</module>
                <module>../com.vmturbo.group.component</module>
                <module>../com.vmturbo.market.component</module>
                <module>../com.vmturbo.kvstore</module>
                <module>../com.vmturbo.repository.api</module>
                <module>../com.vmturbo.repository.component</module>
                <module>../com.vmturbo.ml.datastore</module>
                <module>../com.vmturbo.extractor</module>
                <module>../com.vmturbo.extractor.schema</module>
                <module>../com.vmturbo.extractor.api</module>
                <module>../com.vmturbo.prometheus.config.manager</module>
                <module>../com.vmturbo.search.metadata</module>
                <module>../com.vmturbo.integrations.intersight</module>
                <module>../com.vmturbo.stitching</module>
                <module>../com.vmturbo.topology.graph</module>
                <module>../com.vmturbo.topology.processor.api</module>
                <module>../com.vmturbo.topology.processor</module>
                <module>../com.vmturbo.history</module>
                <module>../com.vmturbo.history.schema</module>
                <module>../com.vmturbo.history.component.api</module>
                <module>../com.vmturbo.identity</module>
                <module>../com.vmturbo.plan.orchestrator</module>
                <module>../com.vmturbo.plan.orchestrator.api</module>
                <module>../com.vmturbo.reports.api</module>
                <!-- module>../com.vmturbo.reports.component</module>
                <module>../com.vmturbo.reports.templates</module -->
                <module>../com.vmturbo.cost.component.api</module>
                <module>../com.vmturbo.cost.component</module>
                <module>../com.vmturbo.component.status.api</module>
                <module>../com.vmturbo.system.notification.sender</module>
                <module>../com.vmturbo.system.notification.receiver</module>

                <module>../com.vmturbo.voltron</module>

                <!-- Modules on which we want to be sure that testCompile succeeds. -->
                <module>../com.vmturbo.components.test.performance</module>
                <module>../com.vmturbo.systest</module>

                <!-- module containing base classes for test classes appearing in multiple modules -->
                <module>../com.vmturbo.testbases</module>
            </modules>
        </profile>

        <profile>
            <id>scripts</id>
            <modules>
                <!-- Here there be some scripts -->
                <module>kubernetes</module>
            </modules>
        </profile>

        <!-- Release profile. Builds all the active components. -->
        <profile>
            <id>release</id>
            <modules>
                <!-- There is a non-maven dependency between any module
                     that builds a docker image and the baseimage module.
                     The baseimage module creates the docker image that
                     all other images should be based on, but the poms don't
                     capture that relationship.

                     Therefore, keep this at the top of the modules list
                     so that it gets built first despite not being explicitly
                     depended on by other modules.

                     For order of module building see:
                     https://maven.apache.org/guides/mini/guide-multiple-modules.html -->
                <module>../versioning</module>
                <module>../com.vmturbo.components.baseimage</module>

                <!-- Infrequently changing dependencies. Essentially the equivalent of
                     libraries from the XL developer's point of view.
                     There may be non-maven dependencies between the development modules
                     and these libraries, so keep them towards the top of the module list. -->
                <module>../syslog</module>
                <module>../db</module>
                <module>../com.vmturbo.arangodb</module>
                <module>../com.vmturbo.influxdb</module>
                <module>../protoc-plugin-common</module>
                <module>../protoc-spring-rest</module>
                <module>../protoc-grpc-moles</module>
                <module>../diags</module>
                <module>../kafka</module>
                <module>../zookeeper</module>
                <module>../nginx</module>
                <!-- Generate XL python bindings. -->
                <module>../xl-python</module>
                <module>../grafana</module>

                <!-- Include tests of kubernetes-related scripts. -->
                <module>kubernetes</module>

                <!-- The meat of the XL code, and the platform components. -->
                <module>../com.vmturbo.api.conversion</module>
                <module>../com.vmturbo.licensing</module>
                <module>../com.vmturbo.auth.api</module>
                <module>../com.vmturbo.auth.component</module>
                <module>../com.vmturbo.auth.test</module>
                <module>../com.vmturbo.api.component</module>
                <module>../com.vmturbo.search.api</module>
                <module>../com.vmturbo.search.schema</module>
                <module>../com.vmturbo.oid</module>
                <module>../com.vmturbo.common.api</module>
                <module>../com.vmturbo.common.protobuf</module>
                <module>../com.vmturbo.communication.matrix</module>
                <module>../com.vmturbo.trax</module>
                <module>../com.vmturbo.cloud.commitment.analysis</module>
                <module>../com.vmturbo.cloud.common</module>
                <module>../com.vmturbo.clustermgr</module>
                <module>../com.vmturbo.clustermgr.api</module>
                <module>../com.vmturbo.consul</module>
                <module>../com.vmturbo.components</module>
                <module>../com.vmturbo.components.common</module>
                <module>../com.vmturbo.cost.calculation</module>
                <module>../com.vmturbo.discovery.deserializer</module>
                <module>../com.vmturbo.reserved.instance.coverage.allocator</module>
                <module>../com.vmturbo.sql.utils</module>
                <module>../com.vmturbo.sql.test.utils</module>
                <module>../com.vmturbo.components.api.root</module>
                <module>../com.vmturbo.components.api</module>
                <module>../com.vmturbo.components.api.test</module>
                <module>../com.vmturbo.sample.component</module>
                <module>../com.vmturbo.sample.component.api</module>
                <module>../com.vmturbo.action.orchestrator.api</module>
                <module>../com.vmturbo.market.component.api</module>
                <module>../com.vmturbo.components.test.utilities</module>
                <module>../com.vmturbo.action.orchestrator</module>
                <module>../com.vmturbo.group.api</module>
                <module>../com.vmturbo.group.component</module>
                <module>../com.vmturbo.market.component</module>
                <module>../com.vmturbo.kvstore</module>
                <module>../com.vmturbo.repository.api</module>
                <module>../com.vmturbo.repository.component</module>
                <module>../com.vmturbo.ml.datastore</module>
                <module>../com.vmturbo.extractor</module>
                <module>../com.vmturbo.extractor.schema</module>
                <module>../com.vmturbo.extractor.api</module>
                <module>../com.vmturbo.prometheus.config.manager</module>
                <module>../com.vmturbo.search.metadata</module>
                <module>../com.vmturbo.integrations.intersight</module>
                <module>../com.vmturbo.stitching</module>
                <module>../com.vmturbo.topology.event.library</module>
                <module>../com.vmturbo.topology.graph</module>
                <module>../com.vmturbo.topology.processor.api</module>
                <module>../com.vmturbo.topology.processor</module>
                <module>../com.vmturbo.history</module>
                <module>../com.vmturbo.history.schema</module>
                <module>../com.vmturbo.history.component.api</module>
                <module>../com.vmturbo.identity</module>
                <module>../com.vmturbo.plan.orchestrator</module>
                <module>../com.vmturbo.plan.orchestrator.api</module>
                <module>../com.vmturbo.reports.api</module>
                <!-- module>../com.vmturbo.reports.component</module>
                <module>../com.vmturbo.reports.templates</module -->
                <module>../com.vmturbo.cost.component.api</module>
                <module>../com.vmturbo.cost.component</module>
                <module>../com.vmturbo.component.status.api</module>
                <module>../com.vmturbo.system.notification.sender</module>
                <module>../com.vmturbo.system.notification.receiver</module>

                <module>../com.vmturbo.voltron</module>

                <!-- Probe components. These are ALL the probes. -->
                <module>../com.vmturbo.mediation.probe.parent</module>
                <module>../com.vmturbo.mediation.client</module>
                <module>../com.vmturbo.mediation.client.bootstrap</module>

                <module>../com.vmturbo.mediation.delegatingprobe</module>
                <module>../com.vmturbo.mediation.actionscript</module>
                <module>../com.vmturbo.mediation.actionstream.kafka</module>
                <module>../com.vmturbo.mediation.webhook</module>

                <!-- Mediation container with all the probes inside. -->
                <module>../com.vmturbo.mediation.component</module>

                <!-- Individual components -->
                <module>../com.vmturbo.mediation.aix.component</module>
                <module>../com.vmturbo.mediation.delegatingprobe.component</module>
                <module>../com.vmturbo.mediation.actionscript.component</module>
                <module>../com.vmturbo.mediation.acims.component</module>
                <module>../com.vmturbo.mediation.apic.component</module>
                <module>../com.vmturbo.mediation.apm.snmp.component</module>
                <module>../com.vmturbo.mediation.apm.wmi.component</module>
                <module>../com.vmturbo.mediation.appdynamics.component</module>
                <module>../com.vmturbo.mediation.aws.billing.component</module>
                <module>../com.vmturbo.mediation.aws.component</module>
                <module>../com.vmturbo.mediation.aws.cost.component</module>
                <module>../com.vmturbo.mediation.aws.lambda.component</module>
                <module>../com.vmturbo.mediation.azure.component</module>
                <module>../com.vmturbo.mediation.azure.volumes.component</module>
                <module>../com.vmturbo.mediation.azure.cost.component</module>
                <module>../com.vmturbo.mediation.azure.ea.component</module>
                <module>../com.vmturbo.mediation.azure.sp.component</module>
                <module>../com.vmturbo.mediation.baremetal.component</module>
                <module>../com.vmturbo.mediation.compellent.component</module>
                <module>../com.vmturbo.mediation.udt</module>
                <module>../com.vmturbo.mediation.udt.component</module>
                <module>../com.vmturbo.mediation.database.mssql.component</module>
                <module>../com.vmturbo.mediation.database.mysql.component</module>
                <module>../com.vmturbo.mediation.database.oracle.component</module>
                <module>../com.vmturbo.mediation.tomcat.component</module>
                <module>../com.vmturbo.mediation.websphere.component</module>
                <module>../com.vmturbo.mediation.weblogic.component</module>
                <module>../com.vmturbo.mediation.jboss.component</module>
                <module>../com.vmturbo.mediation.ibmstorage.flashsystem.component</module>
                <module>../com.vmturbo.mediation.instana.component</module>
                <module>../com.vmturbo.mediation.jvm.component</module>
                <module>../com.vmturbo.mediation.datadog.component</module>
                <module>../com.vmturbo.mediation.dynatrace.component</module>
                <module>../com.vmturbo.mediation.gcp.sa.component</module>
                <module>../com.vmturbo.mediation.gcp.cost.component</module>
                <module>../com.vmturbo.mediation.gcp.project.component</module>
                <module>../com.vmturbo.mediation.gcp.billing.component</module>
                <module>../com.vmturbo.mediation.flexera.component</module>
                <module>../com.vmturbo.mediation.istio.component</module>
                <module>../com.vmturbo.mediation.hds.component</module>
                <module>../com.vmturbo.mediation.horizon.component</module>
                <module>../com.vmturbo.mediation.hpe3par.component</module>
                <module>../com.vmturbo.mediation.hyperflex.component</module>
                <module>../com.vmturbo.mediation.hyperv.component</module>
                <module>../com.vmturbo.mediation.intersight.hyperflex.component</module>
                <module>../com.vmturbo.mediation.intersight.server.component</module>
                <module>../com.vmturbo.mediation.intersight.ucs.component</module>
                <module>../com.vmturbo.mediation.actionstream.kafka.component</module>
                <module>../com.vmturbo.mediation.webhook.component</module>
                <module>../com.vmturbo.mediation.netapp.component</module>
                <module>../com.vmturbo.mediation.newrelic.component</module>
                <module>../com.vmturbo.mediation.appinsights.component</module>
                <module>../com.vmturbo.mediation.netflow.component</module>
                <module>../com.vmturbo.mediation.nutanix.component</module>
                <module>../com.vmturbo.mediation.oneview.component</module>
                <module>../com.vmturbo.mediation.pure.component</module>
                <module>../com.vmturbo.mediation.rhv.component</module>
                <module>../com.vmturbo.mediation.scaleio.component</module>
                <module>../com.vmturbo.mediation.servicenow.component</module>
                <module>../com.vmturbo.mediation.storagestressprobe.component</module>
                <module>../com.vmturbo.mediation.stressprobe.component</module>
                <module>../com.vmturbo.mediation.terraform.component</module>
                <module>../com.vmturbo.mediation.tetration.component</module>
                <module>../com.vmturbo.mediation.ucs.component</module>
                <module>../com.vmturbo.mediation.ucsdirector.component</module>
                <module>../com.vmturbo.mediation.vcenter.browsing.component</module>
                <module>../com.vmturbo.mediation.vcenter.component</module>
                <module>../com.vmturbo.mediation.vmax.component</module>
                <module>../com.vmturbo.mediation.vmm.component</module>
                <module>../com.vmturbo.mediation.vplex.component</module>
                <module>../com.vmturbo.mediation.xtremio.component</module>
                <module>../com.vmturbo.mediation.xen.component</module>

                <!-- Modules on which we want to be sure that testCompile succeeds. -->
                <module>../com.vmturbo.components.test.performance</module>
                <module>../com.vmturbo.systest</module>

                <!-- module containing base classes for test classes appearing in multiple modules -->
                <module>../com.vmturbo.testbases</module>
            </modules>
        </profile>
        <!-- Release profile for cwom. Builds api related components. -->
        <profile>
            <id>cwom-release</id>
            <modules>
                <module>../versioning</module>
                <module>../com.vmturbo.components.baseimage</module>
                <module>../protoc-plugin-common</module>
                <module>../protoc-spring-rest</module>
                <module>../protoc-grpc-moles</module>
                <module>../com.vmturbo.api.conversion</module>
                <module>../com.vmturbo.licensing</module>
                <module>../com.vmturbo.auth.api</module>
                <module>../com.vmturbo.api.component</module>
                <module>../com.vmturbo.search.api</module>
                <module>../com.vmturbo.search.schema</module>
                <module>../com.vmturbo.oid</module>
                <module>../com.vmturbo.common.api</module>
                <module>../com.vmturbo.common.protobuf</module>
                <module>../com.vmturbo.clustermgr.api</module>
                <module>../com.vmturbo.components</module>
                <module>../com.vmturbo.components.common</module>
                <module>../com.vmturbo.sql.utils</module>
                <module>../com.vmturbo.sql.test.utils</module>
                <module>../com.vmturbo.components.api.root</module>
                <module>../com.vmturbo.components.api</module>
                <module>../com.vmturbo.components.api.test</module>
                <module>../com.vmturbo.action.orchestrator.api</module>
                <module>../com.vmturbo.group.api</module>
                <module>../com.vmturbo.group.component</module>
                <module>../com.vmturbo.kvstore</module>
                <module>../com.vmturbo.repository.api</module>
                <module>../com.vmturbo.extractor.api</module>
                <module>../com.vmturbo.extractor.schema</module>
                <module>../com.vmturbo.search.metadata</module>
                <module>../com.vmturbo.topology.processor.api</module>
                <module>../com.vmturbo.history.schema</module>
                <module>../com.vmturbo.history.component.api</module>
                <module>../com.vmturbo.identity</module>
                <module>../com.vmturbo.plan.orchestrator.api</module>
                <module>../com.vmturbo.reports.api</module>
                <module>../com.vmturbo.cost.component.api</module>
                <module>../com.vmturbo.component.status.api</module>
                <module>../com.vmturbo.system.notification.sender</module>
                <module>../com.vmturbo.system.notification.receiver</module>
            </modules>
        </profile>
        <profile>
            <id>base-components</id>
            <modules>
                <module>../versioning</module>
                <module>../com.vmturbo.components.baseimage</module>
                <module>../syslog</module>
                <module>../db</module>
                <module>../com.vmturbo.arangodb</module>
                <module>../com.vmturbo.consul</module>
                <module>../com.vmturbo.ml.datastore</module>
                <module>../com.vmturbo.influxdb</module>
                <module>../kafka</module>
                <module>../zookeeper</module>
                <module>../nginx</module>
                <module>../grafana</module>
                <module>../diags</module>
            </modules>
        </profile>
        <profile>
            <id>securitycheck</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>${owasp.version}</version>
                        <configuration>
                          <cveUrlModified>
                             ${turbo-cveurl}/nvdcve-1.1-modified.json.gz
                          </cveUrlModified>
                          <cveUrlBase>
                             ${turbo-cveurl}/nvdcve-1.1-${turbo-cveyear}.json.gz
                          </cveUrlBase>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>save</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>save:docker-save</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>bash</executable>
                                    <arguments>
                                        <argument>${maven.multiModuleProjectDirectory}/../build/saveImage.sh</argument>
                                        <argument>${artifactId}</argument>
                                        <argument>${project.version}</argument>
                                        <argument>${project.basedir}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>refresh-base-components</id>
            <build>
                <defaultGoal>exec:exec@refresh</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>refresh</id>
                            </execution>
                        </executions>
                        <configuration>
                            <executable>${project.basedir}/refresh-base-components/refresh-base-components.sh</executable>
                            <commandlineArgs>${version}</commandlineArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- This profile is intended to "build" python code - mainly to run any existing tests.
             We are using pipenv for our python dependency management, and any module with a
             "Pipfile" has this profile activated on it.

             The module needs to set the pipenvScript property to the location of the
             turbo-pipenv script under build/. -->
        <profile>
            <id>python-build</id>
            <activation>
                <!-- The presence of a Pipfile in a module indicates that it's a python module -->
                <file>
                    <exists>${basedir}/Pipfile</exists>
                </file>
                <!-- The turbo-pipenv script does not work on Windows. -->
                <os>
                    <family>unix</family>
                </os>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <configuration>
                            <executable>bash</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>pythonbuild clean</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <arguments>
                                        <argument>${pipenvScript}</argument>
                                        <argument>clean</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>pythonbuild install</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <arguments>
                                        <argument>${pipenvScript}</argument>
                                        <!-- The "dev" is important because that's where
                                             test-only dependencies are specified -->
                                        <argument>install --dev</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>pythonbuild test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <skip>${maven.test.skip}</skip>
                                    <arguments>
                                        <argument>${pipenvScript}</argument>
                                        <argument>run pytest</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>windows-docker-host</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <!-- On Docker for Windows this will require exposing the Daemon with TLS disabled . -->
                <fabricateDockerHost>tcp://localhost:2375</fabricateDockerHost>
            </properties>
        </profile>
    </profiles>
    <build>
        <extensions>
            <!-- Exposes OS properties in mavenized format.
                 Required for protobuf-maven-plugin
                 (to download the right protobuf compiler) -->
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os.maven.plugin.version}</version>
            </extension>
        </extensions>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.flywaydb</groupId>
                    <artifactId>flyway-maven-plugin</artifactId>
                    <version>${flyway-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacocoVersion}</version>
                    <executions>
                        <execution>
                            <id>jacoco-initialize</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <propertyName>jacoco.agent.argLine</propertyName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>2.1</version>
                </plugin>
                <!-- Configuration for protobuf generation. -->
                <plugin>
                    <groupId>org.xolstice.maven.plugins</groupId>
                    <artifactId>protobuf-maven-plugin</artifactId>
                    <version>${protobuf.maven.plugin.version}</version>
                    <configuration>
                        <useArgumentFile>true</useArgumentFile>
                        <protoSourceRoot>src/main/protobuf</protoSourceRoot>
                        <protoTestSourceRoot>src/test/protobuf</protoTestSourceRoot>
                        <!-- os.detected.classifier provided by os-maven-plugin -->
                        <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
                        <!-- grpc-java generates gRPC client and server stubs for protobuf-defined services -->
                        <pluginId>grpc-java</pluginId>
                        <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>compile</goal>
                                <goal>compile-custom</goal>
                                <goal>test-compile</goal>
                                <goal>test-compile-custom</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                    <configuration>
                        <tagBase>http://insight.svn.cloudforge.com/Master/VMTurbo/tags</tagBase>
                        <releaseProfiles>release</releaseProfiles>
                        <checkModificationExcludes>
                            <checkModificationExclude>**/*</checkModificationExclude>
                        </checkModificationExcludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker.maven.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.coderplus.maven.plugins</groupId>
                    <artifactId>copy-rename-maven-plugin</artifactId>
                    <version>${copy.rename.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>3.1.1</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>8.23</version>
                        </dependency>
                        <dependency>
                            <groupId>com.vmturbo</groupId>
                            <artifactId>com.vmturbo.checkstyle.config</artifactId>
                            <version>${vmturbo.mt.branch.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>validate</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <configLocation>vmt-checkstyle.xml</configLocation>
                        <encoding>UTF-8</encoding>
                        <violationSeverity>info</violationSeverity>
                        <failOnViolation>true</failOnViolation>
                        <failsOnError>false</failsOnError>
                        <sourceDirectories>
                            <sourceDirectory>${basedir}</sourceDirectory>
                        </sourceDirectories>
                        <includes>src/**,*.xml,*.md</includes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>1.4</version>
                    <executions>
                        <execution>
                            <phase>initialize</phase>
                            <goals>
                                <goal>create</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                        <revisionOnScmFailure>None</revisionOnScmFailure>
                        <scmDirectory>${project.basedir}/../</scmDirectory>
                        <providerImplementations>
                            <svn>javasvn</svn>
                        </providerImplementations>
                        <timestampFormat>{0,date,yyyy-MM-dd HH:mm:ss}</timestampFormat>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <archive>
                            <manifestEntries>
                                <SCM-Revision>${buildNumber}</SCM-Revision>
                                <mainClass>${start-class}</mainClass>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>${spotbugs.version}</version>
                    <configuration>
                        <!-- min|less|default|more|max -->
                        <effort>More</effort>
                        <!-- Report on Low, Medium, High bugs -->
                        <threshold>High</threshold>
                        <failOnError>false</failOnError>
                        <maxHeap>1024</maxHeap>
                        <!--
                         <includeFilterFile></includeFilterFile>
                         <excludeFilterFile></excludeFilterFile>
                        -->
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.5</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <archive>
                            <manifestEntries>
                                <SCM-Revision>${buildNumber}</SCM-Revision>
                                <mainClass>${start-class}</mainClass>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-codegen-maven</artifactId>
                    <version>${jooq.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.kongchen</groupId>
                    <artifactId>swagger-maven-plugin</artifactId>
                    <version>${swagger.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.7</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.10</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>2.9</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-help-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.10.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.9.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.9.1</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.0.0</version> <!-- 2.4, 2.6 -->
                    <!--<configuration>-->
                    <!--<recompressZippedFiles>false</recompressZippedFiles>-->
                    <!--</configuration>-->
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>xml-maven-plugin</artifactId>
                    <version>1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${failsafe.version}</version>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.version}</version>
                    <configuration>
                        <includes>
                            <include>**/*Tests.java</include>
                            <include>**/*Test.java</include>
                        </includes>
                        <trimStackTrace>false</trimStackTrace>
                        <!-- Required to deal properly with non-ASCII characters across platforms. -->
                        <argLine>${jacoco.agent.argLine} -Dfile.encoding=UTF-8</argLine>
                        <!-- make the build version available for use in tests, as a system property -->
                        <systemPropertyVariables>
                            <buildVersionNumber>${project.version}</buildVersionNumber>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.3.2</version>
                    <configuration>
                        <mainClass>${start-class}</mainClass>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.7</version>
                    <configuration>
                        <delimiters>
                            <delimiter>${resource.delimiter}</delimiter>
                        </delimiters>
                        <useDefaultDelimiters>false</useDefaultDelimiters>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>io.swagger</groupId>
                    <artifactId>swagger-codegen-maven-plugin</artifactId>
                    <version>${swagger.codegen.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>2.3</version>
                    <configuration>
                        <keepDependenciesWithProvidedScope>true</keepDependenciesWithProvidedScope>
                        <createDependencyReducedPom>true</createDependencyReducedPom>
                        <filters>
                            <filter>
                                <artifact>*:*</artifact>
                                <excludes>
                                    <exclude>META-INF/*.SF</exclude>
                                    <exclude>META-INF/*.DSA</exclude>
                                    <exclude>META-INF/*.RSA</exclude>
                                </excludes>
                            </filter>
                        </filters>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                            <configuration>
                                <transformers>
                                    <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                        <resource>META-INF/spring.handlers</resource>
                                    </transformer>
                                    <transformer implementation="org.springframework.boot.maven.PropertiesMergingResourceTransformer">
                                        <resource>META-INF/spring.factories</resource>
                                    </transformer>
                                    <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                        <resource>META-INF/spring.schemas</resource>
                                    </transformer>
                                    <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                        <mainClass>${start-class}</mainClass>
                                    </transformer>
                                </transformers>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>2.2.4</version>
                    <executions>
                        <execution>
                            <id>get-the-git-infos</id>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>validate-the-git-infos</id>
                            <goals>
                                <goal>validateRevision</goal>
                            </goals>
                            <phase>package</phase>
                        </execution>
                    </executions>

                    <configuration>
                        <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>

                        <prefix>turbo-version</prefix>
                        <dateFormat>yyyyMMddHHmmssSSS</dateFormat>
                        <dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>
                        <verbose>false</verbose>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <generateGitPropertiesFilename>${project.build.outputDirectory}/xl.git.properties</generateGitPropertiesFilename>
                        <format>properties</format>
                        <skipPoms>true</skipPoms>
                        <injectAllReactorProjects>true</injectAllReactorProjects>
                        <failOnNoGitDirectory>true</failOnNoGitDirectory>
                        <failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo>
                        <skip>false</skip>
                        <runOnlyOnce>false</runOnlyOnce>
                        <excludeProperties>
                            <excludeProperty>git.user.*</excludeProperty>
                        </excludeProperties>
                        <includeOnlyProperties>
                        </includeOnlyProperties>
                        <replacementProperties>
                        </replacementProperties>
                        <useNativeGit>false</useNativeGit>
                        <abbrevLength>7</abbrevLength>
                        <commitIdGenerationMode>flat</commitIdGenerationMode>
                        <gitDescribe>
                            don't generate the describe property
                            <skip>false</skip>

                            <always>false</always>

                            <abbrev>7</abbrev>

                            <dirty>-dirty</dirty>
                            <match>*</match>
                            <tags>false</tags>

                            <forceLongFormat>false</forceLongFormat>
                        </gitDescribe>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.35.0</version>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <!-- Protobuf spring REST generator -->
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>protoc-plugin-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>protoc-spring-rest-plugin</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>protoc-grpc-moles-plugin</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- Dependencies from XL -->
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.components.baseimage</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>common-protobuf</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>action-orchestrator-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.group</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.group.api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.plan.orchestrator.api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.repository.api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.reports.api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.reports.templates</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.history.schema</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>extractor-schema</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.extractor.api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>prometheus-config-manager</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>search-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>search-metadata</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>common-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.api.conversion</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.identity</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- We keep versions of dependencies in the root pom.xml so that all
                 modules and components have the same version. -->
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>sample-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>auth-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>oid</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>auth</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>topology-processor-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>history-component-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>market-component-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.clustermgr.api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.components</artifactId>
                <version>${project.version}T</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.components.common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>sql-utils</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>sql-test-utils</artifactId>
                <scope>test</scope>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>components-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>components-api-test</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.mediation.client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.mediation.client.bootstrap</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>kvstore</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>stitching</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>topology-graph</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>topology-processor</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>market-component</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.influxdb</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>ml-datastore</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>identity</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>de.vandermeer</groupId>
                <artifactId>asciitable</artifactId>
                <version>${asciitable.version}</version>
            </dependency>
            <dependency>
                <groupId>com.flipkart.zjsonpatch</groupId>
                <artifactId>zjsonpatch</artifactId>
                <version>${zjsonpatch.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>components-test-utilities</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>auth-test</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.arangodb</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.mediation.delegatingprobe</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>cost</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>cost-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>cost-calculation</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>cloud-commitment-analysis</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>cloud-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>reserved-instance-coverage-allocator</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>component-status-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>system-notification-sender</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>system-notification-receiver</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.testbases</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.search.schema</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>trax</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.topology.event.library</artifactId>
                <version>${project.version}</version>
            </dependency>

            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15on -->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.cryptacular</groupId>
                <artifactId>cryptacular</artifactId>
                <version>${cryptacular.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>

            <!-- The Test dependencies for auth -->
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json-path.version}</version>
            </dependency>

            <dependency>
                <groupId>org.lz4</groupId>
                <artifactId>lz4-java</artifactId>
                <version>${lz4.version}</version>
            </dependency>

            <!-- Dependencies from API -->
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.api</artifactId>
                <version>${com.vmturbo.api.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.branding</artifactId>
                <version>${com.vmturbo.api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.external-api-stubs</artifactId>
                <version>${com.vmturbo.api.version}</version>
            </dependency>

            <!-- Dependencies from MT -->
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.UX</artifactId>
                <version>${ux.mt.branch.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.commons</artifactId>
                <version>${vmturbo.mt.branch.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.proactivesupport</artifactId>
                <version>${vmturbo.mt.branch.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.licensing</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>xl-python</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.macrovision</groupId>
                <artifactId>flexlm</artifactId>
                <version>${flex.lm.version}</version>
            </dependency>
            <dependency>
                <groupId>com.macrovision</groupId>
                <artifactId>flexlmutil</artifactId>
                <version>${flex.lm.version}</version>
            </dependency>
            <dependency>
                <groupId>com.macrovision</groupId>
                <artifactId>EccpressoAll</artifactId>
                <version>${flex.lm.version}</version>
            </dependency>
            <dependency>
                <groupId>com.macrovision</groupId>
                <artifactId>flexlmmgmt</artifactId>
                <version>${flex.lm.version}</version>
            </dependency>
            <dependency>
                <groupId>com.macrovision</groupId>
                <artifactId>magellaninfo</artifactId>
                <version>${flex.lm.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.mediation.common</artifactId>
                <version>${vmturbo.mt.branch.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.mediation.connector.intersight</artifactId>
                <version>${vmturbo.mt.branch.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.platform.sdk.probe</artifactId>
                <version>${vmturbo.mt.branch.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.platform.sdk.common</artifactId>
                <version>${vmturbo.mt.branch.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.sdk.server.common</artifactId>
                <version>${vmturbo.mt.branch.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>com.vmturbo.communication</artifactId>
                <version>${vmturbo.mt.branch.version}</version>
            </dependency>
            <dependency>
                <groupId>com.vmturbo</groupId>
                <artifactId>platform.analysis.protobuf</artifactId>
                <version>${market.version}</version>
            </dependency>
            <!-- com.turbonomic dependencies -->
            <dependency>
                <groupId>com.turbonomic</groupId>
                <artifactId>com.turbonomic.cpucapacity</artifactId>
                <version>${cpu.capacity.version}</version>
            </dependency>

            <!-- Override the version of jooq being pulled in by Spring Boot.
                 This will most likely caused problem if we decide to use Spring Data and/or
                 Spring's JOOQ support.-->
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq</artifactId>
                <version>${jooq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen</artifactId>
                <version>${jooq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-meta</artifactId>
                <version>${jooq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway.version}</version>
            </dependency>
            <dependency>
                <groupId>com.oracle</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${ojdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.hateoas</groupId>
                <artifactId>spring-hateoas</artifactId>
                <version>0.17.0.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.retry</groupId>
                <artifactId>spring-retry</artifactId>
                <version>${spring.retry.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-websocket</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-test</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-crypto</artifactId>
                <version>${spring.security.version}</version>
            </dependency>

            <!-- log4j2 -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j2.Version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-1.2-api</artifactId>
                <version>${log4j2.Version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j2.Version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-web</artifactId>
                <version>${log4j2.Version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-iostreams</artifactId>
                <version>${log4j2.Version}</version>
            </dependency>
            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${log4j2.AsyncVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jul</artifactId>
                <version>${log4j2.Version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j2.Version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>1.7.25</version>
            </dependency>
            <dependency>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${owasp.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>2.6.0</version>
            </dependency>
            <dependency>
                <groupId>org.jacoco</groupId>
                <artifactId>org.jacoco</artifactId>
                <version>${jacocoVersion}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jacoco</groupId>
                <artifactId>org.jacoco.ant</artifactId>
                <version>${jacocoAntVersion}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>javax.persistence-api</artifactId>
                <version>2.2</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${javax.servlet-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.cloudbees</groupId>
                <artifactId>syslog-java-client</artifactId>
                <version>${syslog-client.version}</version>
            </dependency>
            <!-- BEGIN: Java 11 lost dependencies -->
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${javax.xml.bind.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${javax.xml.bind.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-core</artifactId>
                <version>${com.sun.xml.bind.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.xml.ws</groupId>
                <artifactId>jaxws-api</artifactId>
                <version>${javax.xml.ws.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.ws</groupId>
                <artifactId>rt</artifactId>
                <version>${javax.xml.ws.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax-annotation.version}</version>
            </dependency>
            <!-- END: Java 11 lost dependencies -->
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-testkit_2.10</artifactId>
                <version>${akka.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-actor_2.10</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-remote_2.10</artifactId>
                <version>${akka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>tec.units</groupId>
                <artifactId>unit-ri</artifactId>
                <version>${units.of.measure.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.influxdb</groupId>
                <artifactId>influxdb-java</artifactId>
                <version>${influxdb-java-api.version}</version>
            </dependency>

            <!-- Java String templating library -->
            <dependency>
                <groupId>org.antlr</groupId>
                <artifactId>ST4</artifactId>
                <version>${st4.version}</version>
            </dependency>

            <!-- Immutables - for generation of value objects -->
            <dependency>
                <groupId>org.immutables</groupId>
                <artifactId>value</artifactId>
                <version>${immutables.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-all</artifactId>
                <version>${hamcrest-all.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.github.npathai</groupId>
                <artifactId>hamcrest-optional</artifactId>
                <version>${hamcrest-optional-version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-core</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs</artifactId>
                <version>${spotbugs.version}</version>
                <scope>test</scope>
            </dependency>


            <dependency>
                <groupId>com.orbitz.consul</groupId>
                <artifactId>consul-client</artifactId>
                <version>${consul-client.version}</version>
            </dependency>




            <dependency>
                <groupId>org.mariadb.jdbc</groupId>
                <artifactId>mariadb-java-client</artifactId>
                <version>${mariadb.client.version}</version>
            </dependency>

            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.client.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpasyncclient</artifactId>
                <version>${httpclient.async.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>${google.findbugs.version}</version>
            </dependency>
            <!-- START protobuf dependencies. -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java-util</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <!-- END protobuf dependencies. -->

            <!-- START gRPC dependencies. -->
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-core</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-services</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-testing</artifactId>
                <version>${grpc.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- END gRPC dependencies. -->

            <!-- START Prometheus dependencies -->
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient</artifactId>
                <version>${prometheus.java.client.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_common</artifactId>
                <version>${prometheus.java.client.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_hotspot</artifactId>
                <version>${prometheus.java.client.version}</version>
            </dependency>
            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_servlet</artifactId>
                <version>${prometheus.java.client.version}</version>
            </dependency>
            <dependency>
                <groupId>me.dinowernli</groupId>
                <artifactId>java-grpc-prometheus</artifactId>
                <version>${grpc.prometheus.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.grpc</groupId>
                        <artifactId>grpc-all</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- END Prometheus dependencies -->

            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-api</artifactId>
                <version>${opentracing.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-noop</artifactId>
                <version>${opentracing.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-util</artifactId>
                <version>${opentracing.version}</version>
            </dependency>

            <dependency>
                <groupId>io.opentracing.contrib</groupId>
                <artifactId>opentracing-concurrent</artifactId>
                <version>${opentracing.concurrent.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing.contrib</groupId>
                <artifactId>opentracing-grpc</artifactId>
                <version>${opentracing.grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing.contrib</groupId>
                <artifactId>opentracing-kafka-client</artifactId>
                <version>${opentracing.kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>io.jaegertracing</groupId>
                <artifactId>jaeger-client</artifactId>
                <version>${jaeger.version}</version>
                <!--
                    Do not include tomcat as it was discovered to break websockets.
                    Tomcat is not a required dependency for jaeger, it was only introduced
                    in jaeger 1.6.0 for tests and therefore is fine to exclude.

                    In the master branch for libthrift, the tomcat dependency
                    has been removed but the latest release does not contain it yet.
                    (as of 07/22/2021)
                -->
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.tomcat.embed</groupId>
                        <artifactId>tomcat-embed-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jmockit</groupId>
                <artifactId>jmockit</artifactId>
                <version>${jmockit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-client</artifactId>
                <version>${jersey-client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-common</artifactId>
                <version>${jersey-client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-jaxb</artifactId>
                <version>${jersey-media-jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-guava</artifactId>
                <version>${jackson-datatype-guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>${jackson-datatype-guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.jaxrs</groupId>
                <artifactId>jackson-jaxrs-json-provider</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-xml</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>javax.ws.rs-api</artifactId>
                <version>${javax.ws.rs-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-csv</artifactId>
                <version>${commons-csv.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palantir.docker.compose</groupId>
                <artifactId>docker-compose-rule-junit4</artifactId>
                <version>${docker.compose.rule.version}</version>
            </dependency>
            <dependency>
                <groupId>com.palantir.docker.compose</groupId>
                <artifactId>docker-compose-rule-core</artifactId>
                <version>${docker.compose.rule.version}</version>
            </dependency>
            <dependency>
                <groupId>com.arangodb</groupId>
                <artifactId>arangodb-java-driver</artifactId>
                <version>${arangodb.driver.version}</version>
            </dependency>
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-core</artifactId>
                <version>${reactor.version}</version>
            </dependency>
            <dependency>
                <groupId>it.unimi.dsi</groupId>
                <artifactId>fastutil</artifactId>
                <version>${fastutil.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>tomcat-jdbc</artifactId>
                <version>${tomcat.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_2.13</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.stefanbirkner</groupId>
                <artifactId>system-rules</artifactId>
                <version>1.17.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>oro</groupId>
                <artifactId>oro</artifactId>
                <version>2.0.8</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlet</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty.websocket</groupId>
                <artifactId>websocket-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-util</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty.websocket</groupId>
                <artifactId>javax-websocket-server-impl</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.skyscreamer</groupId>
                <artifactId>jsonassert</artifactId>
                <version>1.5.0</version>
            </dependency>
            <dependency>
                <groupId>org.roaringbitmap</groupId>
                <artifactId>RoaringBitmap</artifactId>
                <version>${roaringbitmap.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${apache-poi-ooxml.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.sf.trove4j</groupId>
                <artifactId>trove4j</artifactId>
                <version>3.0.3</version>
            </dependency>
            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>${commons-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.jbellis</groupId>
                <artifactId>jamm</artifactId>
                <version>${memory-metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jgit</groupId>
                <artifactId>org.eclipse.jgit</artifactId>
                <version>5.6.0.201912101111-r</version>
            </dependency>
            <dependency>
                <groupId>pl.pragmatists</groupId>
                <artifactId>JUnitParams</artifactId>
                <version>${JUnitParams.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.javatuples</groupId>
                <artifactId>javatuples</artifactId>
                <version>1.2</version>
            </dependency>
            <dependency>
                <groupId>org.bitbucket.mstrobel</groupId>
                <artifactId>procyon-compilertools</artifactId>
                <version>0.5.36</version>
            </dependency>
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>0.9.12</version>
            </dependency>
            <dependency>
                <groupId>net.sf.jopt-simple</groupId>
                <artifactId>jopt-simple</artifactId>
                <version>6.0-alpha-3</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons-text.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity.tools</groupId>
                <artifactId>velocity-tools-generic</artifactId>
                <version>${velocity-tools.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>http://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <!--Access to the palantir docker-compose-rule library for bringing up services in docker via compose.-->
            <id>palantir-bintray</id>
            <url>https://dl.bintray.com/palantir/releases</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>vmturbo</id>
            <name>VMTurbo plugin repository</name>
            <url>http://build.vmturbo.com:8081/nexus/content/groups/public/</url>
        </pluginRepository>
        <pluginRepository>
            <id>snapshots</id>
            <name>Internal Snapshots</name>
            <url>http://build.vmturbo.com:8081/nexus/content/repositories/snapshots</url>
        </pluginRepository>
    </pluginRepositories>
    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Internal Releases</name>
            <url>http://build.vmturbo.com:8081/nexus/content/repositories/releases</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Internal Snapshots</name>
            <url>http://build.vmturbo.com:8081/nexus/content/repositories/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <scm>
        <connection>scm:svn:https://insight.svn.cloudforge.com/Master/VMTurbo/branches/Release-2016-XL/build</connection>
        <developerConnection>scm:svn:https://insight.svn.cloudforge.com/Master/VMTurbo/branches/Release-2016-XL</developerConnection>
        <url>https://insight.svn.cloudforge.com/Master/VMTurbo/branches/Release-2016-XL</url>
    </scm>

</project>
