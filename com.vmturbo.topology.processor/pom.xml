<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.vmturbo</groupId>
        <artifactId>com.vmturbo.components</artifactId>
        <version>8.3.1-SNAPSHOT</version>
        <relativePath>../com.vmturbo.components/pom.xml</relativePath>
    </parent>

    <artifactId>topology-processor</artifactId>


    <properties>
        <swagger.component.name>Topology Processor</swagger.component.name>
        <maven.build.timestamp.format>yyyyMMddHHmmssSSS</maven.build.timestamp.format>

        <!-- Properties to support generation of JOOQ objects -->
        <db.url>jdbc:mysql://localhost:3306</db.url>
        <!-- TODO: user and password configuration should NOT be checked into source control -->
        <db.username>root</db.username>
        <db.password>vmturbo</db.password>
        <db.schema>topology_processor_build_${maven.build.timestamp}</db.schema>
        <db.outputSchema>topology_processor</db.outputSchema>
        <db.driver>org.mariadb.jdbc.Driver</db.driver>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                  <serverId>docker-registry</serverId>
                    <baseImage>${docker.image.prefix}/vmt-component-base:${project.version}</baseImage>
                    <entryPoint>["/entrypoint.sh", "${project.build.finalName}.jar"]</entryPoint>
                    <volumes>
                        <volume>/home/turbonomic/data</volume>
                    </volumes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>migrate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>migrate</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>clean-db</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <url>${db.url}</url>
                    <user>${db.username}</user>
                    <password>${db.password}</password>
                    <locations>
                        <!-- Configure to the same location as configured in Spring..-->
                        <location>filesystem:${basedir}/src/main/resources/db/migration</location>
                    </locations>
                    <schemas>
                        <schema>${db.schema}</schema>
                    </schemas>
                </configuration>
            </plugin>
            <plugin>
                <!-- Specify the maven code generator plugin -->
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>

                <!-- The plugin should hook into the generate goal -->
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <!-- JDBC connection parameters -->
                    <jdbc>
                        <driver>${db.driver}</driver>
                        <url>${db.url}/${db.schema}</url>
                        <user>${db.username}</user>
                        <password>${db.password}</password>
                    </jdbc>

                    <!-- Generator parameters -->
                    <generator>
                        <database>
                            <name>org.jooq.meta.mysql.MySQLDatabase</name>
                            <!-- Retrieve schema version from Flyway info table -->
                            <schemaVersionProvider>SELECT CONCAT_WS('_', '${db.outputSchema}', MAX(version)) from schema_version</schemaVersionProvider>
                            <includes>.*</includes>
                            <excludes>schema_version</excludes>
                            <schemata>
                                <schema>
                                    <inputSchema>${db.schema}</inputSchema>
+                                    <outputSchema>${db.outputSchema}</outputSchema>
                                </schema>
                            </schemata>

                            <customTypes>
                                <customType>
                                    <name>com.vmturbo.topology.processor.identity.storage.EntityInMemoryProxyDescriptor</name>
                                    <converter>com.vmturbo.topology.processor.identity.storage.EntityInMemoryProxyDescriptorConverter</converter>
                                </customType>
                                <customType>
                                    <name>java.time.LocalDateTime</name>
                                    <converter>com.vmturbo.sql.utils.LocalDateTimeConverter</converter>
                                </customType>
                                <customType>
                                    <name>com.vmturbo.topology.processor.targets.TargetStatusOuterClass.TargetStatus</name>
                                    <converter>com.vmturbo.topology.processor.targets.status.TargetStatusDbConverter</converter>
                                </customType>
                            </customTypes>

                            <!-- Then, associate custom types with database columns -->
                            <forcedTypes>
                                <forcedType>
                                    <name>com.vmturbo.topology.processor.identity.storage.EntityInMemoryProxyDescriptor</name>
                                    <expression>.*\.assigned_identity\.properties</expression>
                                </forcedType>
                                <forcedType>
                                    <name>com.vmturbo.topology.processor.targets.TargetStatusOuterClass.TargetStatus</name>
                                    <expression>.*\.target_status\.status</expression>
                                </forcedType>
                                <forcedType>
                                    <name>java.time.LocalDateTime</name>
                                    <expression>.*\..*_time</expression>
                                </forcedType>>
                                <forcedType>
                                    <name>BOOLEAN</name>
                                    <includeTypes>(?i:TINYINT\(1\))</includeTypes>
                                </forcedType>
                            </forcedTypes>
                        </database>
                        <generate>
                            <pojos>true</pojos>
                        </generate>
                        <target>
                            <packageName>com.vmturbo.topology.processor.db</packageName>
                            <directory>target/generated-sources/jooq</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.kongchen</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>internal-swagger</id>
                        <configuration>
                            <apiSources>
                                <apiSource>
                                    <locations>
                                        <location>com.vmturbo.topology.processor</location>
                                        <location>com.vmturbo.common.protobuf.logging</location>
                                        <location>com.vmturbo.common.protobuf.probe</location>
                                        <location>com.vmturbo.common.protobuf.topology</location>
                                        <location>com.vmturbo.components.common</location>
                                    </locations>
                                </apiSource>
                            </apiSources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.vmturbo.topology.processor.TopologyProcessorComponent</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
                </configuration>
            </plugin>
            <plugin>
               <groupId>com.github.spotbugs</groupId>
               <artifactId>spotbugs-maven-plugin</artifactId>
               <version>${spotbugs.version}</version>
               <configuration>
                   <maxAllowedViolations>11</maxAllowedViolations>
                   <failOnError>true</failOnError>
               </configuration>
               <executions>
                   <execution>
                       <goals>
                           <goal>check</goal>
                       </goals>
                   </execution>
               </executions>
            </plugin>
        </plugins>
    </build>


    <dependencies>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.sdk.server.common</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.communication</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>kvstore</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>identity</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.group.api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>action-orchestrator-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.repository.api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>cost-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>system-notification-sender</artifactId>
        </dependency>

        <!--  Gson: Java to Json conversion -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>topology-processor-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java-util</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.proactivesupport</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>stitching</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>sql-utils</artifactId>
        </dependency>
        <dependency>
            <groupId>org.bitbucket.cowwoc</groupId>
            <artifactId>diff-match-patch</artifactId>
            <version>1.1</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.jetty.websocket</groupId>
            <artifactId>websocket-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty.websocket</groupId>
            <artifactId>javax-websocket-server-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.components.common</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>history-component-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.plan.orchestrator.api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.communication.matrix</artifactId>
            <version>${vmturbo.mt.branch.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.mediation.hybrid.cloud.common</artifactId>
            <version>${vmturbo.mt.branch.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.platform.sdk.probe</artifactId>
            <version>${vmturbo.mt.branch.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.commons</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.mediation.common</artifactId>
            <version>${vmturbo.mt.branch.version}</version>
        </dependency>

        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>ST4</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>topology-graph</artifactId>
        </dependency>

        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>components-api-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>sql-test-utils</artifactId>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.powermock</groupId>-->
<!--            <artifactId>powermock-core</artifactId>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.powermock</groupId>-->
<!--            <artifactId>powermock-module-junit4</artifactId>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.powermock</groupId>-->
<!--            <artifactId>powermock-api-mockito</artifactId>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->
        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sf.trove4j</groupId>
            <artifactId>trove4j</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>auth-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-testing</artifactId>
        </dependency>
    </dependencies>
</project>
