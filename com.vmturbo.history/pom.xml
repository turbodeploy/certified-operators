<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.vmturbo</groupId>
        <artifactId>com.vmturbo.components</artifactId>
        <version>8.4.4-SNAPSHOT</version>
        <relativePath>../com.vmturbo.components/pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <properties>
        <swagger.component.name>History</swagger.component.name>
    </properties>

    <artifactId>com.vmturbo.history</artifactId>

    <build>
        <plugins>
            <plugin>
                <groupId>com.github.kongchen</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>internal-swagger</id>
                        <configuration>

                            <apiSources>
                                <apiSource>
                                    <locations>
                                        <location>com.vmturbo.history</location>
                                        <location>com.vmturbo.common.protobuf.logging</location>
                                        <location>com.vmturbo.common.protobuf.stats</location>
                                        <location>com.vmturbo.history.component.api</location>
                                        <location>com.vmturbo.components.common</location>
                                    </locations>
                                </apiSource>
                            </apiSources>

                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.vmturbo.history.HistoryComponent</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                  <serverId>docker-registry</serverId>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <dbs.postgresDefault.host>${postgresHost}</dbs.postgresDefault.host>
                        <dbs.postgresDefault.port>${postgresPort}</dbs.postgresDefault.port>
                        <dbs.postgresDefault.userName>${postgresUserName}</dbs.postgresDefault.userName>
                        <dbs.postgresDefault.password>${postgresPassword}</dbs.postgresDefault.password>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>no-run-postgres-container</id>
            <!-- set default for postgres port only if we're not going to spin up a postgres container -->
            <activation>
                <property>
                    <name>postgresContainer.skip</name>
                </property>
            </activation>
            <properties>
                <postgresPort>5432</postgresPort>
            </properties>
        </profile>
        <profile>
            <id>run-postgres-container</id>
            <!--
                If you don't want a postgres container to be spun up during the build in order to
                perform live DB tests, specify -DpostgresContainer.skip` on maven command line. In
                that case you will need to have a postgres server available in your environment,
                and the postgresHost and postgresPort properties can be used to configure access
                if they're different from localhost and 5432, respectively.
            -->
            <activation>
                <property>
                    <name>!postgresContainer.skip</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-postgres</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <dockerHost>${fabricateDockerHost}</dockerHost>
                                    <showLogs>false</showLogs>
                                    <images>
                                        <image>
                                            <alias>postgres</alias>
                                            <name>postgres:${postgres-image-tag}</name>
                                            <run>
                                                <!--
                                                pattern needs to start with "maven-" so jenkins builds
                                                will properly clean up leaked containers
                                                -->
                                                <containerNamePattern>maven-%a-%t-%i</containerNamePattern>
                                                <ports>
                                                    <port>postgresPort:5432</port>
                                                </ports>
                                                <env>
                                                    <POSTGRES_USER>${postgresUserName}</POSTGRES_USER>
                                                    <POSTGRES_PASSWORD>${postgresPassword}</POSTGRES_PASSWORD>
                                                </env>
                                                <wait>
                                                    <log>
                                                        <!--
                                                        CDATA prevents intellij from wrapping the search
                                                        string, which would break things.
                                                        We wait for a message that shows that postgres
                                                        is ready, and we wait to see it twice, since the
                                                        container's entry-point script includes an internal
                                                        restart.
                                                        -->
                                                        <![CDATA[(?s)database system is ready to accept connections.*database system is ready to accept connections]]>
                                                    </log>
                                                    <time>120000</time>
                                                </wait>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-postgres</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <dockerHost>${fabricateDockerHost}</dockerHost>
                                    <images>
                                        <image>
                                            <name>postgres:${postgres-image-tag}</name>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <dependencies>
        <!-- Common Dependencies shared with Legacy -->
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.platform.sdk.common</artifactId>
        </dependency>

        <!-- XL dependencies -->
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.history.schema</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>history-component-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>market-component-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>topology-processor-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>common-protobuf</artifactId>
        </dependency>

        <!-- Other Dependencies -->
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>auth-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.group.api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>sql-utils</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>sql-test-utils</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sf.trove4j</groupId>
            <artifactId>trove4j</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.npathai</groupId>
            <artifactId>hamcrest-optional</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-testing</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.plan.orchestrator.api</artifactId>
        </dependency>
        <dependency>
            <groupId>it.unimi.dsi</groupId>
            <artifactId>fastutil</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.200</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.testbases</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-core</artifactId>
            <version>1.12.22</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>compile</scope>
        </dependency>
    </dependencies>

</project>
