<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>Turbonomic-XL</artifactId>
        <groupId>com.vmturbo</groupId>
        <version>7.17.0-SNAPSHOT</version>
        <relativePath>../build/pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>components-api</artifactId>
    <description>Common classes and abstract classes for implementation of component APIs.</description>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                        </plugin>
                        <plugin>
                            <groupId>com.spotify</groupId>
                            <artifactId>docker-maven-plugin</artifactId>
                            <configuration>
                                <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
                                <imageTags>
                                    <imageTag>${project.version}</imageTag>
                                </imageTags>
                                <labels>
                                    <label>com.vmturbo.version=${project.version}</label>
                                </labels>
                                <baseImage>${docker.image.prefix}/vmt-component-base:${project.version}</baseImage>
                                <entryPoint>["/entrypoint.sh", "${project.build.finalName}.jar"]</entryPoint>
                                <volumes>
                                    <volume>/home/turbonomic/data</volume>
                                </volumes>
                                <resources>
                                    <resource>
                                        <targetPath>/</targetPath>
                                        <directory>${project.build.directory}</directory>
                                        <include>${project.build.finalName}.jar</include>
                                    </resource>
                                    <resource>
                                        <targetPath>/lib</targetPath>
                                        <directory>${project.build.directory}/lib</directory>
                                    </resource>
                                    <resource>
                                        <targetPath>/swagger</targetPath>
                                        <directory>${project.build.directory}/generated-docs/swagger</directory>
                                    </resource>
                                </resources>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>build-docker-image</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>build</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>tag-docker-image</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>tag</goal>
                                    </goals>
                                    <configuration>
                                        <image>${docker.image.prefix}/${project.artifactId}</image>
                                        <newName>${docker.registry}/${docker.image.prefix}/${project.artifactId}:${project.version}</newName>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>push-docker-image</id>
                                    <phase>deploy</phase>
                                    <goals>
                                        <goal>push</goal>
                                    </goals>
                                    <configuration>
                                        <imageName>${docker.registry}/${docker.image.prefix}/${project.artifactId}</imageName>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>copy-dependencies</id>
                                    <goals>
                                        <goal>copy-dependencies</goal>
                                    </goals>
                                    <phase>prepare-package</phase>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                        <useBaseVersion>false</useBaseVersion>
                                        <includeScope>runtime</includeScope>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-jar-plugin</artifactId>
                            <configuration>
                                <archive>
                                    <manifest>
                                        <addClasspath>true</addClasspath>
                                        <classpathPrefix>lib/</classpathPrefix>
                                    </manifest>
                                </archive>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <!--  Gson: Java to Json conversion -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vmturbo</groupId>
            <artifactId>com.vmturbo.communication</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java-util</artifactId>
        </dependency>
        <dependency>
            <groupId>io.prometheus</groupId>
            <artifactId>simpleclient_common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.11</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- START gRPC dependencies. -->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
        </dependency>
        <!-- END gRPC dependencies. -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
